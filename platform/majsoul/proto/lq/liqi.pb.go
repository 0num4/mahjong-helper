// Code generated by protoc-gen-go. DO NOT EDIT.
// source: liqi.proto

/*
Package lq is a generated protocol buffer package.

It is generated from these files:
	liqi.proto

It has these top-level messages:
	Account
	AccountActiveState
	AccountCacheView
	AccountDetailStatistic
	AccountDetailStatisticByCategory
	AccountDetailStatisticV2
	AccountFanAchieved
	AccountLevel
	AccountMahjongStatistic
	AccountOwnerData
	AccountPlayingGame
	AccountSetting
	AccountShiLian
	AccountStatisticByFan
	AccountStatisticByGameMode
	AccountStatisticData
	AccountUpdate
	AchievementProgress
	ActionAnGangAddGang
	ActionBaBei
	ActionChiPengGang
	ActionDealTile
	ActionDiscardTile
	ActionHule
	ActionLiuJu
	ActionMJStart
	ActionNewRound
	ActionNoTile
	ActionPrototype
	Activity
	ActivityAccumulatedPointData
	ActivityRankPointData
	Announcement
	AntiAddiction
	Bag
	BagUpdate
	BillingGoods
	BillingProduct
	BuyRecord
	ChangeNicknameRecord
	Character
	ChestData
	ChestDataV2
	ClientDeviceInfo
	CommentItem
	CustomizedContestAbstract
	CustomizedContestBase
	CustomizedContestDetail
	CustomizedContestExtend
	CustomizedContestGameEnd
	CustomizedContestGameStart
	CustomizedContestPlayerReport
	Error
	ExchangeRecord
	ExecuteReward
	FaithData
	FanInfo
	Friend
	GameConfig
	GameConnectInfo
	GameDetailRecords
	GameDetailRule
	GameEnd
	GameEndAction
	GameEndResult
	GameFinalSnapshot
	GameLiveHead
	GameLiveSegment
	GameLiveSegmentUri
	GameLiveUnit
	GameMetaData
	GameMode
	GameNewRoundState
	GameNoopAction
	GameRestore
	GameRoundHuData
	GameRoundPlayer
	GameRoundPlayerResult
	GameRoundSnapshot
	GameSnapshot
	GameTestingEnvironmentSet
	HuleInfo
	Item
	LiQiSuccess
	Mail
	NetworkEndpoint
	NoTilePlayerInfo
	NoTileScoreInfo
	NotifyAccountLevelChange
	NotifyAccountLogout
	NotifyAccountUpdate
	NotifyActivityChange
	NotifyActivityPoint
	NotifyActivityReward
	NotifyActivityTaskUpdate
	NotifyAnnouncementUpdate
	NotifyAnotherLogin
	NotifyClientMessage
	NotifyCustomContestAccountMsg
	NotifyCustomContestState
	NotifyCustomContestSystemMsg
	NotifyDailyTaskUpdate
	NotifyDeleteMail
	NotifyFriendChange
	NotifyFriendStateChange
	NotifyFriendViewChange
	NotifyGameBroadcast
	NotifyGameEndResult
	NotifyGameFinishReward
	NotifyGamePause
	NotifyGameTerminate
	NotifyGiftSendRefresh
	NotifyLeaderboardPoint
	NotifyMatchGameStart
	NotifyMatchTimeout
	NotifyNewComment
	NotifyNewFriendApply
	NotifyNewGame
	NotifyNewMail
	NotifyPayResult
	NotifyPlayerConnectionState
	NotifyPlayerLoadGameReady
	NotifyReviveCoinUpdate
	NotifyRollingNotice
	NotifyRoomGameStart
	NotifyRoomKickOut
	NotifyRoomPlayerReady
	NotifyRoomPlayerUpdate
	NotifyServerSetting
	NotifyShopUpdate
	NotifyVipLevelChange
	OpenResult
	OptionalOperation
	OptionalOperationList
	PaymentSetting
	PlayerBaseView
	PlayerGameView
	RecordAnGangAddGang
	RecordBaBei
	RecordChiPengGang
	RecordCollectedData
	RecordDealTile
	RecordDiscardTile
	RecordGame
	RecordHule
	RecordLiuJu
	RecordNewRound
	RecordNoTile
	ReqAccountInfo
	ReqAccountList
	ReqAccountStatisticInfo
	ReqAddCollectedGameRecord
	ReqApplyFriend
	ReqAuthGame
	ReqBindAccount
	ReqBindEmail
	ReqBindPhoneNumber
	ReqBroadcastInGame
	ReqBuyFromChestShop
	ReqBuyFromShop
	ReqBuyFromZHP
	ReqBuyShiLian
	ReqCancelGooglePlayOrder
	ReqCancelMatchQueue
	ReqChangeAvatar
	ReqChangeCharacterSkin
	ReqChangeCharacterView
	ReqChangeCollectedGameRecordRemarks
	ReqChangeCommonView
	ReqChangeMainCharacter
	ReqChiPengGang
	ReqClientMessage
	ReqCommon
	ReqCompleteActivityTask
	ReqComposeShard
	ReqCreateAlipayAppOrder
	ReqCreateAlipayOrder
	ReqCreateAlipayScanOrder
	ReqCreateBillingOrder
	ReqCreateENAlipayOrder
	ReqCreateENJCBOrder
	ReqCreateENMasterCardOrder
	ReqCreateENPaypalOrder
	ReqCreateENVisaOrder
	ReqCreateEmailVerifyCode
	ReqCreateJPAuOrder
	ReqCreateJPCreditCardOrder
	ReqCreateJPDocomoOrder
	ReqCreateJPPaypalOrder
	ReqCreateJPSoftbankOrder
	ReqCreateNickname
	ReqCreatePhoneVerifyCode
	ReqCreateRoom
	ReqCreateWechatAppOrder
	ReqCreateWechatNativeOrder
	ReqCurrentMatchInfo
	ReqDeleteComment
	ReqDeleteMail
	ReqEmailLogin
	ReqEnterCustomizedContest
	ReqExchangeActivityItem
	ReqExchangeCurrency
	ReqFetchCommentContent
	ReqFetchCommentList
	ReqFetchCustomizedContestByContestId
	ReqFetchCustomizedContestExtendInfo
	ReqFetchCustomizedContestGameLiveList
	ReqFetchCustomizedContestGameRecords
	ReqFetchCustomizedContestList
	ReqFetchCustomizedContestOnlineInfo
	ReqFetchRankPointLeaderboard
	ReqGMCommand
	ReqGMCommandInGaming
	ReqGainAccumulatedPointActivityReward
	ReqGainRankPointReward
	ReqGainVipReward
	ReqGameLiveInfo
	ReqGameLiveLeftSegment
	ReqGameLiveList
	ReqGameRecord
	ReqGameRecordList
	ReqGameRecordsDetail
	ReqHandleFriendApply
	ReqHeatBeat
	ReqJoinCustomizedContestChatRoom
	ReqJoinMatchQueue
	ReqJoinRoom
	ReqLeaveComment
	ReqLevelLeaderboard
	ReqLogin
	ReqLogout
	ReqModifyBirthday
	ReqModifyNickname
	ReqModifyPassword
	ReqModifyRoom
	ReqModifySignature
	ReqMultiAccountId
	ReqOauth2Auth
	ReqOauth2Check
	ReqOauth2Login
	ReqOauth2Signup
	ReqOpenChest
	ReqOpenManualItem
	ReqOpenRandomRewardItem
	ReqPlatformBillingProducts
	ReqReadAnnouncement
	ReqReadMail
	ReqRefreshDailyTask
	ReqRemoveCollectedGameRecord
	ReqRemoveFriend
	ReqRollingNotice
	ReqRoomKick
	ReqRoomReady
	ReqRoomStart
	ReqSayChatMessage
	ReqSearchAccountById
	ReqSearchAccountByPattern
	ReqSelfOperation
	ReqSellItem
	ReqSendClientMessage
	ReqSendGiftToCharacter
	ReqShopPurchase
	ReqSignupAccount
	ReqSolveGooglePlayOrder
	ReqStartCustomizedContest
	ReqSyncGame
	ReqTakeAttachment
	ReqTargetCustomizedContest
	ReqUpdateAccountSettings
	ReqUpdateClientValue
	ReqUpdateCommentSetting
	ReqUpdateIDCardInfo
	ReqUpdateReadComment
	ReqUpgradeCharacter
	ReqUseBagItem
	ReqUseGiftCode
	ReqUseTitle
	ReqVerifyCodeForSecure
	ResAccountActivityData
	ResAccountCharacterInfo
	ResAccountInfo
	ResAccountSettings
	ResAccountStates
	ResAccountStatisticInfo
	ResAccountUpdate
	ResAchievement
	ResActivityList
	ResAddCollectedGameRecord
	ResAnnouncement
	ResAuthGame
	ResBagInfo
	ResBuyFromChestShop
	ResBuyFromShop
	ResChangeCollectedGameRecordRemarks
	ResCharacterInfo
	ResClientValue
	ResCollectedGameRecordList
	ResCommentSetting
	ResCommon
	ResCommonView
	ResConnectionInfo
	ResCreateAlipayAppOrder
	ResCreateAlipayOrder
	ResCreateAlipayScanOrder
	ResCreateBillingOrder
	ResCreateENAlipayOrder
	ResCreateENJCBOrder
	ResCreateENMasterCardOrder
	ResCreateENPaypalOrder
	ResCreateENVisaOrder
	ResCreateJPAuOrder
	ResCreateJPCreditCardOrder
	ResCreateJPDocomoOrder
	ResCreateJPPaypalOrder
	ResCreateJPSoftbankOrder
	ResCreateRoom
	ResCreateWechatAppOrder
	ResCreateWechatNativeOrder
	ResCurrentMatchInfo
	ResDailySignInInfo
	ResDailyTask
	ResEnterCustomizedContest
	ResEnterGame
	ResExchangeActivityItem
	ResFetchCommentContent
	ResFetchCommentList
	ResFetchCustomizedContestByContestId
	ResFetchCustomizedContestExtendInfo
	ResFetchCustomizedContestGameLiveList
	ResFetchCustomizedContestGameRecords
	ResFetchCustomizedContestList
	ResFetchCustomizedContestOnlineInfo
	ResFetchRankPointLeaderboard
	ResFriendApplyList
	ResFriendList
	ResGameLiveInfo
	ResGameLiveLeftSegment
	ResGameLiveList
	ResGamePlayerState
	ResGameRecord
	ResGameRecordList
	ResGameRecordsDetail
	ResIDCardInfo
	ResJoinCustomizedContestChatRoom
	ResJoinRoom
	ResLevelLeaderboard
	ResLogin
	ResLogout
	ResMailInfo
	ResMisc
	ResModNicknameTime
	ResMultiAccountBrief
	ResOauth2Auth
	ResOauth2Check
	ResOauth2Signup
	ResOpenChest
	ResOpenRandomRewardItem
	ResPlatformBillingProducts
	ResRefreshDailyTask
	ResRefreshZHPShop
	ResRemoveCollectedGameRecord
	ResReviveCoinInfo
	ResSearchAccountById
	ResSearchAccountByPattern
	ResSelfRoom
	ResSendGiftToCharacter
	ResServerSettings
	ResServerTime
	ResShopInfo
	ResShopPurchase
	ResSignupAccount
	ResSyncGame
	ResTitleList
	ResUpgradeCharacter
	ResUseGiftCode
	ResVerfiyCodeForSecure
	ResVipReward
	RewardPlusResult
	RewardSlot
	RollingNotice
	Room
	ServerSettings
	ShopInfo
	TaskProgress
	TingPaiDiscardInfo
	TingPaiInfo
	Wrapper
	ZHPShop
*/
package lq

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GamePlayerState int32

const (
	GamePlayerState_NULL    GamePlayerState = 0
	GamePlayerState_AUTH    GamePlayerState = 1
	GamePlayerState_SYNCING GamePlayerState = 2
	GamePlayerState_READY   GamePlayerState = 3
)

var GamePlayerState_name = map[int32]string{
	0: "NULL",
	1: "AUTH",
	2: "SYNCING",
	3: "READY",
}
var GamePlayerState_value = map[string]int32{
	"NULL":    0,
	"AUTH":    1,
	"SYNCING": 2,
	"READY":   3,
}

func (x GamePlayerState) String() string {
	return proto.EnumName(GamePlayerState_name, int32(x))
}
func (GamePlayerState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Account struct {
	AccountId       uint32                     `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Nickname        string                     `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	LoginTime       uint32                     `protobuf:"varint,3,opt,name=login_time,json=loginTime" json:"login_time,omitempty"`
	LogoutTime      uint32                     `protobuf:"varint,4,opt,name=logout_time,json=logoutTime" json:"logout_time,omitempty"`
	RoomId          uint32                     `protobuf:"varint,5,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	AntiAddiction   *AntiAddiction             `protobuf:"bytes,6,opt,name=anti_addiction,json=antiAddiction" json:"anti_addiction,omitempty"`
	Title           uint32                     `protobuf:"varint,7,opt,name=title" json:"title,omitempty"`
	Signature       string                     `protobuf:"bytes,8,opt,name=signature" json:"signature,omitempty"`
	Email           string                     `protobuf:"bytes,9,opt,name=email" json:"email,omitempty"`
	EmailVerify     uint32                     `protobuf:"varint,10,opt,name=email_verify,json=emailVerify" json:"email_verify,omitempty"`
	Gold            uint32                     `protobuf:"varint,11,opt,name=gold" json:"gold,omitempty"`
	Diamond         uint32                     `protobuf:"varint,12,opt,name=diamond" json:"diamond,omitempty"`
	AvatarId        uint32                     `protobuf:"varint,13,opt,name=avatar_id,json=avatarId" json:"avatar_id,omitempty"`
	Vip             uint32                     `protobuf:"varint,14,opt,name=vip" json:"vip,omitempty"`
	Birthday        uint32                     `protobuf:"varint,15,opt,name=birthday" json:"birthday,omitempty"`
	PlatformDiamond []*Account_PlatformDiamond `protobuf:"bytes,18,rep,name=platform_diamond,json=platformDiamond" json:"platform_diamond,omitempty"`
	Level           *AccountLevel              `protobuf:"bytes,21,opt,name=level" json:"level,omitempty"`
	Level3          *AccountLevel              `protobuf:"bytes,22,opt,name=level3" json:"level3,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Account) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *Account) GetLoginTime() uint32 {
	if m != nil {
		return m.LoginTime
	}
	return 0
}

func (m *Account) GetLogoutTime() uint32 {
	if m != nil {
		return m.LogoutTime
	}
	return 0
}

func (m *Account) GetRoomId() uint32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *Account) GetAntiAddiction() *AntiAddiction {
	if m != nil {
		return m.AntiAddiction
	}
	return nil
}

func (m *Account) GetTitle() uint32 {
	if m != nil {
		return m.Title
	}
	return 0
}

func (m *Account) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetEmailVerify() uint32 {
	if m != nil {
		return m.EmailVerify
	}
	return 0
}

func (m *Account) GetGold() uint32 {
	if m != nil {
		return m.Gold
	}
	return 0
}

func (m *Account) GetDiamond() uint32 {
	if m != nil {
		return m.Diamond
	}
	return 0
}

func (m *Account) GetAvatarId() uint32 {
	if m != nil {
		return m.AvatarId
	}
	return 0
}

func (m *Account) GetVip() uint32 {
	if m != nil {
		return m.Vip
	}
	return 0
}

func (m *Account) GetBirthday() uint32 {
	if m != nil {
		return m.Birthday
	}
	return 0
}

func (m *Account) GetPlatformDiamond() []*Account_PlatformDiamond {
	if m != nil {
		return m.PlatformDiamond
	}
	return nil
}

func (m *Account) GetLevel() *AccountLevel {
	if m != nil {
		return m.Level
	}
	return nil
}

func (m *Account) GetLevel3() *AccountLevel {
	if m != nil {
		return m.Level3
	}
	return nil
}

type Account_PlatformDiamond struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *Account_PlatformDiamond) Reset()                    { *m = Account_PlatformDiamond{} }
func (m *Account_PlatformDiamond) String() string            { return proto.CompactTextString(m) }
func (*Account_PlatformDiamond) ProtoMessage()               {}
func (*Account_PlatformDiamond) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Account_PlatformDiamond) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Account_PlatformDiamond) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type AccountActiveState struct {
	AccountId  uint32              `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	LoginTime  uint32              `protobuf:"varint,2,opt,name=login_time,json=loginTime" json:"login_time,omitempty"`
	LogoutTime uint32              `protobuf:"varint,3,opt,name=logout_time,json=logoutTime" json:"logout_time,omitempty"`
	IsOnline   bool                `protobuf:"varint,4,opt,name=is_online,json=isOnline" json:"is_online,omitempty"`
	Playing    *AccountPlayingGame `protobuf:"bytes,5,opt,name=playing" json:"playing,omitempty"`
}

func (m *AccountActiveState) Reset()                    { *m = AccountActiveState{} }
func (m *AccountActiveState) String() string            { return proto.CompactTextString(m) }
func (*AccountActiveState) ProtoMessage()               {}
func (*AccountActiveState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AccountActiveState) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *AccountActiveState) GetLoginTime() uint32 {
	if m != nil {
		return m.LoginTime
	}
	return 0
}

func (m *AccountActiveState) GetLogoutTime() uint32 {
	if m != nil {
		return m.LogoutTime
	}
	return 0
}

func (m *AccountActiveState) GetIsOnline() bool {
	if m != nil {
		return m.IsOnline
	}
	return false
}

func (m *AccountActiveState) GetPlaying() *AccountPlayingGame {
	if m != nil {
		return m.Playing
	}
	return nil
}

type AccountCacheView struct {
	CacheVersion uint32              `protobuf:"varint,1,opt,name=cache_version,json=cacheVersion" json:"cache_version,omitempty"`
	AccountId    uint32              `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Nickname     string              `protobuf:"bytes,3,opt,name=nickname" json:"nickname,omitempty"`
	LoginTime    uint32              `protobuf:"varint,4,opt,name=login_time,json=loginTime" json:"login_time,omitempty"`
	LogoutTime   uint32              `protobuf:"varint,5,opt,name=logout_time,json=logoutTime" json:"logout_time,omitempty"`
	IsOnline     bool                `protobuf:"varint,6,opt,name=is_online,json=isOnline" json:"is_online,omitempty"`
	RoomId       uint32              `protobuf:"varint,7,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	Title        uint32              `protobuf:"varint,8,opt,name=title" json:"title,omitempty"`
	AvatarId     uint32              `protobuf:"varint,9,opt,name=avatar_id,json=avatarId" json:"avatar_id,omitempty"`
	Vip          uint32              `protobuf:"varint,10,opt,name=vip" json:"vip,omitempty"`
	Level        *AccountLevel       `protobuf:"bytes,11,opt,name=level" json:"level,omitempty"`
	PlayingGame  *AccountPlayingGame `protobuf:"bytes,12,opt,name=playing_game,json=playingGame" json:"playing_game,omitempty"`
	Level3       *AccountLevel       `protobuf:"bytes,13,opt,name=level3" json:"level3,omitempty"`
}

func (m *AccountCacheView) Reset()                    { *m = AccountCacheView{} }
func (m *AccountCacheView) String() string            { return proto.CompactTextString(m) }
func (*AccountCacheView) ProtoMessage()               {}
func (*AccountCacheView) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AccountCacheView) GetCacheVersion() uint32 {
	if m != nil {
		return m.CacheVersion
	}
	return 0
}

func (m *AccountCacheView) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *AccountCacheView) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *AccountCacheView) GetLoginTime() uint32 {
	if m != nil {
		return m.LoginTime
	}
	return 0
}

func (m *AccountCacheView) GetLogoutTime() uint32 {
	if m != nil {
		return m.LogoutTime
	}
	return 0
}

func (m *AccountCacheView) GetIsOnline() bool {
	if m != nil {
		return m.IsOnline
	}
	return false
}

func (m *AccountCacheView) GetRoomId() uint32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *AccountCacheView) GetTitle() uint32 {
	if m != nil {
		return m.Title
	}
	return 0
}

func (m *AccountCacheView) GetAvatarId() uint32 {
	if m != nil {
		return m.AvatarId
	}
	return 0
}

func (m *AccountCacheView) GetVip() uint32 {
	if m != nil {
		return m.Vip
	}
	return 0
}

func (m *AccountCacheView) GetLevel() *AccountLevel {
	if m != nil {
		return m.Level
	}
	return nil
}

func (m *AccountCacheView) GetPlayingGame() *AccountPlayingGame {
	if m != nil {
		return m.PlayingGame
	}
	return nil
}

func (m *AccountCacheView) GetLevel3() *AccountLevel {
	if m != nil {
		return m.Level3
	}
	return nil
}

type AccountDetailStatistic struct {
	GameMode     []*AccountStatisticByGameMode `protobuf:"bytes,1,rep,name=game_mode,json=gameMode" json:"game_mode,omitempty"`
	Fan          []*AccountStatisticByFan      `protobuf:"bytes,2,rep,name=fan" json:"fan,omitempty"`
	Liujumanguan uint32                        `protobuf:"varint,3,opt,name=liujumanguan" json:"liujumanguan,omitempty"`
	FanAchieved  []*AccountFanAchieved         `protobuf:"bytes,4,rep,name=fan_achieved,json=fanAchieved" json:"fan_achieved,omitempty"`
}

func (m *AccountDetailStatistic) Reset()                    { *m = AccountDetailStatistic{} }
func (m *AccountDetailStatistic) String() string            { return proto.CompactTextString(m) }
func (*AccountDetailStatistic) ProtoMessage()               {}
func (*AccountDetailStatistic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AccountDetailStatistic) GetGameMode() []*AccountStatisticByGameMode {
	if m != nil {
		return m.GameMode
	}
	return nil
}

func (m *AccountDetailStatistic) GetFan() []*AccountStatisticByFan {
	if m != nil {
		return m.Fan
	}
	return nil
}

func (m *AccountDetailStatistic) GetLiujumanguan() uint32 {
	if m != nil {
		return m.Liujumanguan
	}
	return 0
}

func (m *AccountDetailStatistic) GetFanAchieved() []*AccountFanAchieved {
	if m != nil {
		return m.FanAchieved
	}
	return nil
}

type AccountDetailStatisticByCategory struct {
	Category        uint32                  `protobuf:"varint,1,opt,name=category" json:"category,omitempty"`
	DetailStatistic *AccountDetailStatistic `protobuf:"bytes,2,opt,name=detail_statistic,json=detailStatistic" json:"detail_statistic,omitempty"`
}

func (m *AccountDetailStatisticByCategory) Reset()         { *m = AccountDetailStatisticByCategory{} }
func (m *AccountDetailStatisticByCategory) String() string { return proto.CompactTextString(m) }
func (*AccountDetailStatisticByCategory) ProtoMessage()    {}
func (*AccountDetailStatisticByCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4}
}

func (m *AccountDetailStatisticByCategory) GetCategory() uint32 {
	if m != nil {
		return m.Category
	}
	return 0
}

func (m *AccountDetailStatisticByCategory) GetDetailStatistic() *AccountDetailStatistic {
	if m != nil {
		return m.DetailStatistic
	}
	return nil
}

type AccountDetailStatisticV2 struct {
	FriendRoomStatistic        *AccountDetailStatistic                              `protobuf:"bytes,1,opt,name=friend_room_statistic,json=friendRoomStatistic" json:"friend_room_statistic,omitempty"`
	RankStatistic              *AccountDetailStatisticV2_RankStatistic              `protobuf:"bytes,2,opt,name=rank_statistic,json=rankStatistic" json:"rank_statistic,omitempty"`
	CustomizedContestStatistic *AccountDetailStatisticV2_CustomizedContestStatistic `protobuf:"bytes,3,opt,name=customized_contest_statistic,json=customizedContestStatistic" json:"customized_contest_statistic,omitempty"`
}

func (m *AccountDetailStatisticV2) Reset()                    { *m = AccountDetailStatisticV2{} }
func (m *AccountDetailStatisticV2) String() string            { return proto.CompactTextString(m) }
func (*AccountDetailStatisticV2) ProtoMessage()               {}
func (*AccountDetailStatisticV2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AccountDetailStatisticV2) GetFriendRoomStatistic() *AccountDetailStatistic {
	if m != nil {
		return m.FriendRoomStatistic
	}
	return nil
}

func (m *AccountDetailStatisticV2) GetRankStatistic() *AccountDetailStatisticV2_RankStatistic {
	if m != nil {
		return m.RankStatistic
	}
	return nil
}

func (m *AccountDetailStatisticV2) GetCustomizedContestStatistic() *AccountDetailStatisticV2_CustomizedContestStatistic {
	if m != nil {
		return m.CustomizedContestStatistic
	}
	return nil
}

type AccountDetailStatisticV2_CustomizedContestStatistic struct {
	TotalStatistic   *AccountDetailStatistic `protobuf:"bytes,1,opt,name=total_statistic,json=totalStatistic" json:"total_statistic,omitempty"`
	MonthStatistic   *AccountDetailStatistic `protobuf:"bytes,2,opt,name=month_statistic,json=monthStatistic" json:"month_statistic,omitempty"`
	MonthRefreshTime uint32                  `protobuf:"varint,3,opt,name=month_refresh_time,json=monthRefreshTime" json:"month_refresh_time,omitempty"`
}

func (m *AccountDetailStatisticV2_CustomizedContestStatistic) Reset() {
	*m = AccountDetailStatisticV2_CustomizedContestStatistic{}
}
func (m *AccountDetailStatisticV2_CustomizedContestStatistic) String() string {
	return proto.CompactTextString(m)
}
func (*AccountDetailStatisticV2_CustomizedContestStatistic) ProtoMessage() {}
func (*AccountDetailStatisticV2_CustomizedContestStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

func (m *AccountDetailStatisticV2_CustomizedContestStatistic) GetTotalStatistic() *AccountDetailStatistic {
	if m != nil {
		return m.TotalStatistic
	}
	return nil
}

func (m *AccountDetailStatisticV2_CustomizedContestStatistic) GetMonthStatistic() *AccountDetailStatistic {
	if m != nil {
		return m.MonthStatistic
	}
	return nil
}

func (m *AccountDetailStatisticV2_CustomizedContestStatistic) GetMonthRefreshTime() uint32 {
	if m != nil {
		return m.MonthRefreshTime
	}
	return 0
}

type AccountDetailStatisticV2_RankStatistic struct {
	TotalStatistic   *AccountDetailStatisticV2_RankStatistic_RankData `protobuf:"bytes,1,opt,name=total_statistic,json=totalStatistic" json:"total_statistic,omitempty"`
	MonthStatistic   *AccountDetailStatisticV2_RankStatistic_RankData `protobuf:"bytes,2,opt,name=month_statistic,json=monthStatistic" json:"month_statistic,omitempty"`
	MonthRefreshTime uint32                                           `protobuf:"varint,3,opt,name=month_refresh_time,json=monthRefreshTime" json:"month_refresh_time,omitempty"`
}

func (m *AccountDetailStatisticV2_RankStatistic) Reset() {
	*m = AccountDetailStatisticV2_RankStatistic{}
}
func (m *AccountDetailStatisticV2_RankStatistic) String() string { return proto.CompactTextString(m) }
func (*AccountDetailStatisticV2_RankStatistic) ProtoMessage()    {}
func (*AccountDetailStatisticV2_RankStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 1}
}

func (m *AccountDetailStatisticV2_RankStatistic) GetTotalStatistic() *AccountDetailStatisticV2_RankStatistic_RankData {
	if m != nil {
		return m.TotalStatistic
	}
	return nil
}

func (m *AccountDetailStatisticV2_RankStatistic) GetMonthStatistic() *AccountDetailStatisticV2_RankStatistic_RankData {
	if m != nil {
		return m.MonthStatistic
	}
	return nil
}

func (m *AccountDetailStatisticV2_RankStatistic) GetMonthRefreshTime() uint32 {
	if m != nil {
		return m.MonthRefreshTime
	}
	return 0
}

type AccountDetailStatisticV2_RankStatistic_RankData struct {
	AllLevelStatistic *AccountDetailStatistic                                          `protobuf:"bytes,1,opt,name=all_level_statistic,json=allLevelStatistic" json:"all_level_statistic,omitempty"`
	LevelDataList     []*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData `protobuf:"bytes,2,rep,name=level_data_list,json=levelDataList" json:"level_data_list,omitempty"`
}

func (m *AccountDetailStatisticV2_RankStatistic_RankData) Reset() {
	*m = AccountDetailStatisticV2_RankStatistic_RankData{}
}
func (m *AccountDetailStatisticV2_RankStatistic_RankData) String() string {
	return proto.CompactTextString(m)
}
func (*AccountDetailStatisticV2_RankStatistic_RankData) ProtoMessage() {}
func (*AccountDetailStatisticV2_RankStatistic_RankData) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 1, 0}
}

func (m *AccountDetailStatisticV2_RankStatistic_RankData) GetAllLevelStatistic() *AccountDetailStatistic {
	if m != nil {
		return m.AllLevelStatistic
	}
	return nil
}

func (m *AccountDetailStatisticV2_RankStatistic_RankData) GetLevelDataList() []*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData {
	if m != nil {
		return m.LevelDataList
	}
	return nil
}

type AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData struct {
	RankLevel uint32                  `protobuf:"varint,1,opt,name=rank_level,json=rankLevel" json:"rank_level,omitempty"`
	Statistic *AccountDetailStatistic `protobuf:"bytes,2,opt,name=statistic" json:"statistic,omitempty"`
}

func (m *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) Reset() {
	*m = AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData{}
}
func (m *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) String() string {
	return proto.CompactTextString(m)
}
func (*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) ProtoMessage() {}
func (*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 1, 0, 0}
}

func (m *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) GetRankLevel() uint32 {
	if m != nil {
		return m.RankLevel
	}
	return 0
}

func (m *AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData) GetStatistic() *AccountDetailStatistic {
	if m != nil {
		return m.Statistic
	}
	return nil
}

type AccountFanAchieved struct {
	MahjongCategory uint32                   `protobuf:"varint,1,opt,name=mahjong_category,json=mahjongCategory" json:"mahjong_category,omitempty"`
	Fan             []*AccountStatisticByFan `protobuf:"bytes,2,rep,name=fan" json:"fan,omitempty"`
	Liujumanguan    uint32                   `protobuf:"varint,3,opt,name=liujumanguan" json:"liujumanguan,omitempty"`
}

func (m *AccountFanAchieved) Reset()                    { *m = AccountFanAchieved{} }
func (m *AccountFanAchieved) String() string            { return proto.CompactTextString(m) }
func (*AccountFanAchieved) ProtoMessage()               {}
func (*AccountFanAchieved) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AccountFanAchieved) GetMahjongCategory() uint32 {
	if m != nil {
		return m.MahjongCategory
	}
	return 0
}

func (m *AccountFanAchieved) GetFan() []*AccountStatisticByFan {
	if m != nil {
		return m.Fan
	}
	return nil
}

func (m *AccountFanAchieved) GetLiujumanguan() uint32 {
	if m != nil {
		return m.Liujumanguan
	}
	return 0
}

type AccountLevel struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Score uint32 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
}

func (m *AccountLevel) Reset()                    { *m = AccountLevel{} }
func (m *AccountLevel) String() string            { return proto.CompactTextString(m) }
func (*AccountLevel) ProtoMessage()               {}
func (*AccountLevel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AccountLevel) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AccountLevel) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type AccountMahjongStatistic struct {
	FinalPositionCounts []uint32                                 `protobuf:"varint,1,rep,packed,name=final_position_counts,json=finalPositionCounts" json:"final_position_counts,omitempty"`
	RecentRound         *AccountMahjongStatistic_RoundSummary    `protobuf:"bytes,2,opt,name=recent_round,json=recentRound" json:"recent_round,omitempty"`
	RecentHu            *AccountMahjongStatistic_HuSummary       `protobuf:"bytes,3,opt,name=recent_hu,json=recentHu" json:"recent_hu,omitempty"`
	HighestHu           *AccountMahjongStatistic_HighestHuRecord `protobuf:"bytes,4,opt,name=highest_hu,json=highestHu" json:"highest_hu,omitempty"`
	Recent_20HuSummary  *AccountMahjongStatistic_Liqi20Summary   `protobuf:"bytes,6,opt,name=recent_20_hu_summary,json=recent20HuSummary" json:"recent_20_hu_summary,omitempty"`
	Recent_10HuSummary  *AccountMahjongStatistic_LiQi10Summary   `protobuf:"bytes,7,opt,name=recent_10_hu_summary,json=recent10HuSummary" json:"recent_10_hu_summary,omitempty"`
	Recent_10GameResult []*AccountMahjongStatistic_GameResult    `protobuf:"bytes,8,rep,name=recent_10_game_result,json=recent10GameResult" json:"recent_10_game_result,omitempty"`
}

func (m *AccountMahjongStatistic) Reset()                    { *m = AccountMahjongStatistic{} }
func (m *AccountMahjongStatistic) String() string            { return proto.CompactTextString(m) }
func (*AccountMahjongStatistic) ProtoMessage()               {}
func (*AccountMahjongStatistic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AccountMahjongStatistic) GetFinalPositionCounts() []uint32 {
	if m != nil {
		return m.FinalPositionCounts
	}
	return nil
}

func (m *AccountMahjongStatistic) GetRecentRound() *AccountMahjongStatistic_RoundSummary {
	if m != nil {
		return m.RecentRound
	}
	return nil
}

func (m *AccountMahjongStatistic) GetRecentHu() *AccountMahjongStatistic_HuSummary {
	if m != nil {
		return m.RecentHu
	}
	return nil
}

func (m *AccountMahjongStatistic) GetHighestHu() *AccountMahjongStatistic_HighestHuRecord {
	if m != nil {
		return m.HighestHu
	}
	return nil
}

func (m *AccountMahjongStatistic) GetRecent_20HuSummary() *AccountMahjongStatistic_Liqi20Summary {
	if m != nil {
		return m.Recent_20HuSummary
	}
	return nil
}

func (m *AccountMahjongStatistic) GetRecent_10HuSummary() *AccountMahjongStatistic_LiQi10Summary {
	if m != nil {
		return m.Recent_10HuSummary
	}
	return nil
}

func (m *AccountMahjongStatistic) GetRecent_10GameResult() []*AccountMahjongStatistic_GameResult {
	if m != nil {
		return m.Recent_10GameResult
	}
	return nil
}

type AccountMahjongStatistic_GameResult struct {
	Rank       uint32 `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	FinalPoint int32  `protobuf:"varint,2,opt,name=final_point,json=finalPoint" json:"final_point,omitempty"`
}

func (m *AccountMahjongStatistic_GameResult) Reset()         { *m = AccountMahjongStatistic_GameResult{} }
func (m *AccountMahjongStatistic_GameResult) String() string { return proto.CompactTextString(m) }
func (*AccountMahjongStatistic_GameResult) ProtoMessage()    {}
func (*AccountMahjongStatistic_GameResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

func (m *AccountMahjongStatistic_GameResult) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *AccountMahjongStatistic_GameResult) GetFinalPoint() int32 {
	if m != nil {
		return m.FinalPoint
	}
	return 0
}

type AccountMahjongStatistic_HighestHuRecord struct {
	Fanshu  uint32   `protobuf:"varint,1,opt,name=fanshu" json:"fanshu,omitempty"`
	Doranum uint32   `protobuf:"varint,2,opt,name=doranum" json:"doranum,omitempty"`
	Title   string   `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Hands   []string `protobuf:"bytes,4,rep,name=hands" json:"hands,omitempty"`
	Ming    []string `protobuf:"bytes,5,rep,name=ming" json:"ming,omitempty"`
	Hupai   string   `protobuf:"bytes,6,opt,name=hupai" json:"hupai,omitempty"`
	TitleId uint32   `protobuf:"varint,7,opt,name=title_id,json=titleId" json:"title_id,omitempty"`
}

func (m *AccountMahjongStatistic_HighestHuRecord) Reset() {
	*m = AccountMahjongStatistic_HighestHuRecord{}
}
func (m *AccountMahjongStatistic_HighestHuRecord) String() string { return proto.CompactTextString(m) }
func (*AccountMahjongStatistic_HighestHuRecord) ProtoMessage()    {}
func (*AccountMahjongStatistic_HighestHuRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 1}
}

func (m *AccountMahjongStatistic_HighestHuRecord) GetFanshu() uint32 {
	if m != nil {
		return m.Fanshu
	}
	return 0
}

func (m *AccountMahjongStatistic_HighestHuRecord) GetDoranum() uint32 {
	if m != nil {
		return m.Doranum
	}
	return 0
}

func (m *AccountMahjongStatistic_HighestHuRecord) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AccountMahjongStatistic_HighestHuRecord) GetHands() []string {
	if m != nil {
		return m.Hands
	}
	return nil
}

func (m *AccountMahjongStatistic_HighestHuRecord) GetMing() []string {
	if m != nil {
		return m.Ming
	}
	return nil
}

func (m *AccountMahjongStatistic_HighestHuRecord) GetHupai() string {
	if m != nil {
		return m.Hupai
	}
	return ""
}

func (m *AccountMahjongStatistic_HighestHuRecord) GetTitleId() uint32 {
	if m != nil {
		return m.TitleId
	}
	return 0
}

type AccountMahjongStatistic_HuSummary struct {
	TotalCount     uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	DoraRoundCount uint32 `protobuf:"varint,2,opt,name=dora_round_count,json=doraRoundCount" json:"dora_round_count,omitempty"`
	TotalFan       uint32 `protobuf:"varint,3,opt,name=total_fan,json=totalFan" json:"total_fan,omitempty"`
}

func (m *AccountMahjongStatistic_HuSummary) Reset()         { *m = AccountMahjongStatistic_HuSummary{} }
func (m *AccountMahjongStatistic_HuSummary) String() string { return proto.CompactTextString(m) }
func (*AccountMahjongStatistic_HuSummary) ProtoMessage()    {}
func (*AccountMahjongStatistic_HuSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 2}
}

func (m *AccountMahjongStatistic_HuSummary) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *AccountMahjongStatistic_HuSummary) GetDoraRoundCount() uint32 {
	if m != nil {
		return m.DoraRoundCount
	}
	return 0
}

func (m *AccountMahjongStatistic_HuSummary) GetTotalFan() uint32 {
	if m != nil {
		return m.TotalFan
	}
	return 0
}

type AccountMahjongStatistic_LiQi10Summary struct {
	TotalXuanshang uint32 `protobuf:"varint,1,opt,name=total_xuanshang,json=totalXuanshang" json:"total_xuanshang,omitempty"`
	TotalFanshu    uint32 `protobuf:"varint,2,opt,name=total_fanshu,json=totalFanshu" json:"total_fanshu,omitempty"`
}

func (m *AccountMahjongStatistic_LiQi10Summary) Reset()         { *m = AccountMahjongStatistic_LiQi10Summary{} }
func (m *AccountMahjongStatistic_LiQi10Summary) String() string { return proto.CompactTextString(m) }
func (*AccountMahjongStatistic_LiQi10Summary) ProtoMessage()    {}
func (*AccountMahjongStatistic_LiQi10Summary) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 3}
}

func (m *AccountMahjongStatistic_LiQi10Summary) GetTotalXuanshang() uint32 {
	if m != nil {
		return m.TotalXuanshang
	}
	return 0
}

func (m *AccountMahjongStatistic_LiQi10Summary) GetTotalFanshu() uint32 {
	if m != nil {
		return m.TotalFanshu
	}
	return 0
}

type AccountMahjongStatistic_Liqi20Summary struct {
	TotalCount       uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	TotalLidoraCount uint32 `protobuf:"varint,2,opt,name=total_lidora_count,json=totalLidoraCount" json:"total_lidora_count,omitempty"`
	AverageHuPoint   uint32 `protobuf:"varint,3,opt,name=average_hu_point,json=averageHuPoint" json:"average_hu_point,omitempty"`
}

func (m *AccountMahjongStatistic_Liqi20Summary) Reset()         { *m = AccountMahjongStatistic_Liqi20Summary{} }
func (m *AccountMahjongStatistic_Liqi20Summary) String() string { return proto.CompactTextString(m) }
func (*AccountMahjongStatistic_Liqi20Summary) ProtoMessage()    {}
func (*AccountMahjongStatistic_Liqi20Summary) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 4}
}

func (m *AccountMahjongStatistic_Liqi20Summary) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *AccountMahjongStatistic_Liqi20Summary) GetTotalLidoraCount() uint32 {
	if m != nil {
		return m.TotalLidoraCount
	}
	return 0
}

func (m *AccountMahjongStatistic_Liqi20Summary) GetAverageHuPoint() uint32 {
	if m != nil {
		return m.AverageHuPoint
	}
	return 0
}

type AccountMahjongStatistic_RoundSummary struct {
	TotalCount     uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	RongCount      uint32 `protobuf:"varint,2,opt,name=rong_count,json=rongCount" json:"rong_count,omitempty"`
	ZimoCount      uint32 `protobuf:"varint,3,opt,name=zimo_count,json=zimoCount" json:"zimo_count,omitempty"`
	FangchongCount uint32 `protobuf:"varint,4,opt,name=fangchong_count,json=fangchongCount" json:"fangchong_count,omitempty"`
}

func (m *AccountMahjongStatistic_RoundSummary) Reset()         { *m = AccountMahjongStatistic_RoundSummary{} }
func (m *AccountMahjongStatistic_RoundSummary) String() string { return proto.CompactTextString(m) }
func (*AccountMahjongStatistic_RoundSummary) ProtoMessage()    {}
func (*AccountMahjongStatistic_RoundSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 5}
}

func (m *AccountMahjongStatistic_RoundSummary) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *AccountMahjongStatistic_RoundSummary) GetRongCount() uint32 {
	if m != nil {
		return m.RongCount
	}
	return 0
}

func (m *AccountMahjongStatistic_RoundSummary) GetZimoCount() uint32 {
	if m != nil {
		return m.ZimoCount
	}
	return 0
}

func (m *AccountMahjongStatistic_RoundSummary) GetFangchongCount() uint32 {
	if m != nil {
		return m.FangchongCount
	}
	return 0
}

type AccountOwnerData struct {
	UnlockCharacters []uint32 `protobuf:"varint,1,rep,packed,name=unlock_characters,json=unlockCharacters" json:"unlock_characters,omitempty"`
}

func (m *AccountOwnerData) Reset()                    { *m = AccountOwnerData{} }
func (m *AccountOwnerData) String() string            { return proto.CompactTextString(m) }
func (*AccountOwnerData) ProtoMessage()               {}
func (*AccountOwnerData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AccountOwnerData) GetUnlockCharacters() []uint32 {
	if m != nil {
		return m.UnlockCharacters
	}
	return nil
}

type AccountPlayingGame struct {
	GameUuid string        `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid" json:"game_uuid,omitempty"`
	Category uint32        `protobuf:"varint,2,opt,name=category" json:"category,omitempty"`
	Meta     *GameMetaData `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
}

func (m *AccountPlayingGame) Reset()                    { *m = AccountPlayingGame{} }
func (m *AccountPlayingGame) String() string            { return proto.CompactTextString(m) }
func (*AccountPlayingGame) ProtoMessage()               {}
func (*AccountPlayingGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AccountPlayingGame) GetGameUuid() string {
	if m != nil {
		return m.GameUuid
	}
	return ""
}

func (m *AccountPlayingGame) GetCategory() uint32 {
	if m != nil {
		return m.Category
	}
	return 0
}

func (m *AccountPlayingGame) GetMeta() *GameMetaData {
	if m != nil {
		return m.Meta
	}
	return nil
}

type AccountSetting struct {
	Key   uint32 `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *AccountSetting) Reset()                    { *m = AccountSetting{} }
func (m *AccountSetting) String() string            { return proto.CompactTextString(m) }
func (*AccountSetting) ProtoMessage()               {}
func (*AccountSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *AccountSetting) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *AccountSetting) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type AccountShiLian struct {
	Step  uint32 `protobuf:"varint,1,opt,name=step" json:"step,omitempty"`
	State uint32 `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
}

func (m *AccountShiLian) Reset()                    { *m = AccountShiLian{} }
func (m *AccountShiLian) String() string            { return proto.CompactTextString(m) }
func (*AccountShiLian) ProtoMessage()               {}
func (*AccountShiLian) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AccountShiLian) GetStep() uint32 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *AccountShiLian) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

type AccountStatisticByFan struct {
	FanId uint32 `protobuf:"varint,1,opt,name=fan_id,json=fanId" json:"fan_id,omitempty"`
	Sum   uint32 `protobuf:"varint,2,opt,name=sum" json:"sum,omitempty"`
}

func (m *AccountStatisticByFan) Reset()                    { *m = AccountStatisticByFan{} }
func (m *AccountStatisticByFan) String() string            { return proto.CompactTextString(m) }
func (*AccountStatisticByFan) ProtoMessage()               {}
func (*AccountStatisticByFan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AccountStatisticByFan) GetFanId() uint32 {
	if m != nil {
		return m.FanId
	}
	return 0
}

func (m *AccountStatisticByFan) GetSum() uint32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

type AccountStatisticByGameMode struct {
	Mode              uint32                                     `protobuf:"varint,1,opt,name=mode" json:"mode,omitempty"`
	GameCountSum      uint32                                     `protobuf:"varint,2,opt,name=game_count_sum,json=gameCountSum" json:"game_count_sum,omitempty"`
	GameFinalPosition []uint32                                   `protobuf:"varint,3,rep,packed,name=game_final_position,json=gameFinalPosition" json:"game_final_position,omitempty"`
	FlyCount          uint32                                     `protobuf:"varint,4,opt,name=fly_count,json=flyCount" json:"fly_count,omitempty"`
	GoldEarnSum       float32                                    `protobuf:"fixed32,5,opt,name=gold_earn_sum,json=goldEarnSum" json:"gold_earn_sum,omitempty"`
	RoundCountSum     uint32                                     `protobuf:"varint,6,opt,name=round_count_sum,json=roundCountSum" json:"round_count_sum,omitempty"`
	DadianSum         float32                                    `protobuf:"fixed32,7,opt,name=dadian_sum,json=dadianSum" json:"dadian_sum,omitempty"`
	RoundEnd          []*AccountStatisticByGameMode_RoundEndData `protobuf:"bytes,8,rep,name=round_end,json=roundEnd" json:"round_end,omitempty"`
	MingCountSum      uint32                                     `protobuf:"varint,9,opt,name=ming_count_sum,json=mingCountSum" json:"ming_count_sum,omitempty"`
	LiqiCountSum      uint32                                     `protobuf:"varint,10,opt,name=liqi_count_sum,json=liqiCountSum" json:"liqi_count_sum,omitempty"`
	XunCountSum       uint32                                     `protobuf:"varint,11,opt,name=xun_count_sum,json=xunCountSum" json:"xun_count_sum,omitempty"`
	HighestLianzhuang uint32                                     `protobuf:"varint,12,opt,name=highest_lianzhuang,json=highestLianzhuang" json:"highest_lianzhuang,omitempty"`
	ScoreEarnSum      uint32                                     `protobuf:"varint,13,opt,name=score_earn_sum,json=scoreEarnSum" json:"score_earn_sum,omitempty"`
	RankScore         []*AccountStatisticByGameMode_RankScore    `protobuf:"bytes,14,rep,name=rank_score,json=rankScore" json:"rank_score,omitempty"`
}

func (m *AccountStatisticByGameMode) Reset()                    { *m = AccountStatisticByGameMode{} }
func (m *AccountStatisticByGameMode) String() string            { return proto.CompactTextString(m) }
func (*AccountStatisticByGameMode) ProtoMessage()               {}
func (*AccountStatisticByGameMode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AccountStatisticByGameMode) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *AccountStatisticByGameMode) GetGameCountSum() uint32 {
	if m != nil {
		return m.GameCountSum
	}
	return 0
}

func (m *AccountStatisticByGameMode) GetGameFinalPosition() []uint32 {
	if m != nil {
		return m.GameFinalPosition
	}
	return nil
}

func (m *AccountStatisticByGameMode) GetFlyCount() uint32 {
	if m != nil {
		return m.FlyCount
	}
	return 0
}

func (m *AccountStatisticByGameMode) GetGoldEarnSum() float32 {
	if m != nil {
		return m.GoldEarnSum
	}
	return 0
}

func (m *AccountStatisticByGameMode) GetRoundCountSum() uint32 {
	if m != nil {
		return m.RoundCountSum
	}
	return 0
}

func (m *AccountStatisticByGameMode) GetDadianSum() float32 {
	if m != nil {
		return m.DadianSum
	}
	return 0
}

func (m *AccountStatisticByGameMode) GetRoundEnd() []*AccountStatisticByGameMode_RoundEndData {
	if m != nil {
		return m.RoundEnd
	}
	return nil
}

func (m *AccountStatisticByGameMode) GetMingCountSum() uint32 {
	if m != nil {
		return m.MingCountSum
	}
	return 0
}

func (m *AccountStatisticByGameMode) GetLiqiCountSum() uint32 {
	if m != nil {
		return m.LiqiCountSum
	}
	return 0
}

func (m *AccountStatisticByGameMode) GetXunCountSum() uint32 {
	if m != nil {
		return m.XunCountSum
	}
	return 0
}

func (m *AccountStatisticByGameMode) GetHighestLianzhuang() uint32 {
	if m != nil {
		return m.HighestLianzhuang
	}
	return 0
}

func (m *AccountStatisticByGameMode) GetScoreEarnSum() uint32 {
	if m != nil {
		return m.ScoreEarnSum
	}
	return 0
}

func (m *AccountStatisticByGameMode) GetRankScore() []*AccountStatisticByGameMode_RankScore {
	if m != nil {
		return m.RankScore
	}
	return nil
}

type AccountStatisticByGameMode_RankScore struct {
	Rank     uint32 `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	ScoreSum int32  `protobuf:"varint,2,opt,name=score_sum,json=scoreSum" json:"score_sum,omitempty"`
	Count    uint32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *AccountStatisticByGameMode_RankScore) Reset()         { *m = AccountStatisticByGameMode_RankScore{} }
func (m *AccountStatisticByGameMode_RankScore) String() string { return proto.CompactTextString(m) }
func (*AccountStatisticByGameMode_RankScore) ProtoMessage()    {}
func (*AccountStatisticByGameMode_RankScore) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14, 0}
}

func (m *AccountStatisticByGameMode_RankScore) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *AccountStatisticByGameMode_RankScore) GetScoreSum() int32 {
	if m != nil {
		return m.ScoreSum
	}
	return 0
}

func (m *AccountStatisticByGameMode_RankScore) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type AccountStatisticByGameMode_RoundEndData struct {
	Type uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Sum  uint32 `protobuf:"varint,2,opt,name=sum" json:"sum,omitempty"`
}

func (m *AccountStatisticByGameMode_RoundEndData) Reset() {
	*m = AccountStatisticByGameMode_RoundEndData{}
}
func (m *AccountStatisticByGameMode_RoundEndData) String() string { return proto.CompactTextString(m) }
func (*AccountStatisticByGameMode_RoundEndData) ProtoMessage()    {}
func (*AccountStatisticByGameMode_RoundEndData) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14, 1}
}

func (m *AccountStatisticByGameMode_RoundEndData) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *AccountStatisticByGameMode_RoundEndData) GetSum() uint32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

type AccountStatisticData struct {
	MahjongCategory uint32                   `protobuf:"varint,1,opt,name=mahjong_category,json=mahjongCategory" json:"mahjong_category,omitempty"`
	GameCategory    uint32                   `protobuf:"varint,2,opt,name=game_category,json=gameCategory" json:"game_category,omitempty"`
	Statistic       *AccountMahjongStatistic `protobuf:"bytes,3,opt,name=statistic" json:"statistic,omitempty"`
}

func (m *AccountStatisticData) Reset()                    { *m = AccountStatisticData{} }
func (m *AccountStatisticData) String() string            { return proto.CompactTextString(m) }
func (*AccountStatisticData) ProtoMessage()               {}
func (*AccountStatisticData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *AccountStatisticData) GetMahjongCategory() uint32 {
	if m != nil {
		return m.MahjongCategory
	}
	return 0
}

func (m *AccountStatisticData) GetGameCategory() uint32 {
	if m != nil {
		return m.GameCategory
	}
	return 0
}

func (m *AccountStatisticData) GetStatistic() *AccountMahjongStatistic {
	if m != nil {
		return m.Statistic
	}
	return nil
}

type AccountUpdate struct {
	Numerical        []*AccountUpdate_NumericalUpdate  `protobuf:"bytes,1,rep,name=numerical" json:"numerical,omitempty"`
	Character        *AccountUpdate_CharacterUpdate    `protobuf:"bytes,2,opt,name=character" json:"character,omitempty"`
	Bag              *BagUpdate                        `protobuf:"bytes,3,opt,name=bag" json:"bag,omitempty"`
	Achievement      *AccountUpdate_AchievementUpdate  `protobuf:"bytes,4,opt,name=achievement" json:"achievement,omitempty"`
	Shilian          *AccountShiLian                   `protobuf:"bytes,5,opt,name=shilian" json:"shilian,omitempty"`
	DailyTask        *AccountUpdate_DailyTaskUpdate    `protobuf:"bytes,6,opt,name=daily_task,json=dailyTask" json:"daily_task,omitempty"`
	Title            *AccountUpdate_TitleUpdate        `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	NewRechargedList []uint32                          `protobuf:"varint,8,rep,packed,name=new_recharged_list,json=newRechargedList" json:"new_recharged_list,omitempty"`
	ActivityTask     *AccountUpdate_ActivityTaskUpdate `protobuf:"bytes,9,opt,name=activity_task,json=activityTask" json:"activity_task,omitempty"`
}

func (m *AccountUpdate) Reset()                    { *m = AccountUpdate{} }
func (m *AccountUpdate) String() string            { return proto.CompactTextString(m) }
func (*AccountUpdate) ProtoMessage()               {}
func (*AccountUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *AccountUpdate) GetNumerical() []*AccountUpdate_NumericalUpdate {
	if m != nil {
		return m.Numerical
	}
	return nil
}

func (m *AccountUpdate) GetCharacter() *AccountUpdate_CharacterUpdate {
	if m != nil {
		return m.Character
	}
	return nil
}

func (m *AccountUpdate) GetBag() *BagUpdate {
	if m != nil {
		return m.Bag
	}
	return nil
}

func (m *AccountUpdate) GetAchievement() *AccountUpdate_AchievementUpdate {
	if m != nil {
		return m.Achievement
	}
	return nil
}

func (m *AccountUpdate) GetShilian() *AccountShiLian {
	if m != nil {
		return m.Shilian
	}
	return nil
}

func (m *AccountUpdate) GetDailyTask() *AccountUpdate_DailyTaskUpdate {
	if m != nil {
		return m.DailyTask
	}
	return nil
}

func (m *AccountUpdate) GetTitle() *AccountUpdate_TitleUpdate {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *AccountUpdate) GetNewRechargedList() []uint32 {
	if m != nil {
		return m.NewRechargedList
	}
	return nil
}

func (m *AccountUpdate) GetActivityTask() *AccountUpdate_ActivityTaskUpdate {
	if m != nil {
		return m.ActivityTask
	}
	return nil
}

type AccountUpdate_AchievementUpdate struct {
	Progresses []*AchievementProgress `protobuf:"bytes,1,rep,name=progresses" json:"progresses,omitempty"`
}

func (m *AccountUpdate_AchievementUpdate) Reset()         { *m = AccountUpdate_AchievementUpdate{} }
func (m *AccountUpdate_AchievementUpdate) String() string { return proto.CompactTextString(m) }
func (*AccountUpdate_AchievementUpdate) ProtoMessage()    {}
func (*AccountUpdate_AchievementUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16, 0}
}

func (m *AccountUpdate_AchievementUpdate) GetProgresses() []*AchievementProgress {
	if m != nil {
		return m.Progresses
	}
	return nil
}

type AccountUpdate_ActivityTaskUpdate struct {
	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses" json:"progresses,omitempty"`
}

func (m *AccountUpdate_ActivityTaskUpdate) Reset()         { *m = AccountUpdate_ActivityTaskUpdate{} }
func (m *AccountUpdate_ActivityTaskUpdate) String() string { return proto.CompactTextString(m) }
func (*AccountUpdate_ActivityTaskUpdate) ProtoMessage()    {}
func (*AccountUpdate_ActivityTaskUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16, 1}
}

func (m *AccountUpdate_ActivityTaskUpdate) GetProgresses() []*TaskProgress {
	if m != nil {
		return m.Progresses
	}
	return nil
}

type AccountUpdate_CharacterUpdate struct {
	Characters []*Character `protobuf:"bytes,2,rep,name=characters" json:"characters,omitempty"`
	Skins      []uint32     `protobuf:"varint,3,rep,packed,name=skins" json:"skins,omitempty"`
}

func (m *AccountUpdate_CharacterUpdate) Reset()         { *m = AccountUpdate_CharacterUpdate{} }
func (m *AccountUpdate_CharacterUpdate) String() string { return proto.CompactTextString(m) }
func (*AccountUpdate_CharacterUpdate) ProtoMessage()    {}
func (*AccountUpdate_CharacterUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16, 2}
}

func (m *AccountUpdate_CharacterUpdate) GetCharacters() []*Character {
	if m != nil {
		return m.Characters
	}
	return nil
}

func (m *AccountUpdate_CharacterUpdate) GetSkins() []uint32 {
	if m != nil {
		return m.Skins
	}
	return nil
}

type AccountUpdate_DailyTaskUpdate struct {
	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses" json:"progresses,omitempty"`
}

func (m *AccountUpdate_DailyTaskUpdate) Reset()         { *m = AccountUpdate_DailyTaskUpdate{} }
func (m *AccountUpdate_DailyTaskUpdate) String() string { return proto.CompactTextString(m) }
func (*AccountUpdate_DailyTaskUpdate) ProtoMessage()    {}
func (*AccountUpdate_DailyTaskUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16, 3}
}

func (m *AccountUpdate_DailyTaskUpdate) GetProgresses() []*TaskProgress {
	if m != nil {
		return m.Progresses
	}
	return nil
}

type AccountUpdate_NumericalUpdate struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Final uint32 `protobuf:"varint,3,opt,name=final" json:"final,omitempty"`
}

func (m *AccountUpdate_NumericalUpdate) Reset()         { *m = AccountUpdate_NumericalUpdate{} }
func (m *AccountUpdate_NumericalUpdate) String() string { return proto.CompactTextString(m) }
func (*AccountUpdate_NumericalUpdate) ProtoMessage()    {}
func (*AccountUpdate_NumericalUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16, 4}
}

func (m *AccountUpdate_NumericalUpdate) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AccountUpdate_NumericalUpdate) GetFinal() uint32 {
	if m != nil {
		return m.Final
	}
	return 0
}

type AccountUpdate_TitleUpdate struct {
	NewTitles []uint32 `protobuf:"varint,1,rep,packed,name=new_titles,json=newTitles" json:"new_titles,omitempty"`
}

func (m *AccountUpdate_TitleUpdate) Reset()                    { *m = AccountUpdate_TitleUpdate{} }
func (m *AccountUpdate_TitleUpdate) String() string            { return proto.CompactTextString(m) }
func (*AccountUpdate_TitleUpdate) ProtoMessage()               {}
func (*AccountUpdate_TitleUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16, 5} }

func (m *AccountUpdate_TitleUpdate) GetNewTitles() []uint32 {
	if m != nil {
		return m.NewTitles
	}
	return nil
}

type AchievementProgress struct {
	Id       uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Counter  uint32 `protobuf:"varint,2,opt,name=counter" json:"counter,omitempty"`
	Achieved bool   `protobuf:"varint,3,opt,name=achieved" json:"achieved,omitempty"`
	Date     uint32 `protobuf:"varint,4,opt,name=date" json:"date,omitempty"`
}

func (m *AchievementProgress) Reset()                    { *m = AchievementProgress{} }
func (m *AchievementProgress) String() string            { return proto.CompactTextString(m) }
func (*AchievementProgress) ProtoMessage()               {}
func (*AchievementProgress) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *AchievementProgress) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AchievementProgress) GetCounter() uint32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *AchievementProgress) GetAchieved() bool {
	if m != nil {
		return m.Achieved
	}
	return false
}

func (m *AchievementProgress) GetDate() uint32 {
	if m != nil {
		return m.Date
	}
	return 0
}

type ActionAnGangAddGang struct {
	Seat      uint32                 `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Type      uint32                 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Tiles     string                 `protobuf:"bytes,3,opt,name=tiles" json:"tiles,omitempty"`
	Operation *OptionalOperationList `protobuf:"bytes,4,opt,name=operation" json:"operation,omitempty"`
	Doras     []string               `protobuf:"bytes,6,rep,name=doras" json:"doras,omitempty"`
	Zhenting  bool                   `protobuf:"varint,7,opt,name=zhenting" json:"zhenting,omitempty"`
	Tingpais  []*TingPaiInfo         `protobuf:"bytes,8,rep,name=tingpais" json:"tingpais,omitempty"`
}

func (m *ActionAnGangAddGang) Reset()                    { *m = ActionAnGangAddGang{} }
func (m *ActionAnGangAddGang) String() string            { return proto.CompactTextString(m) }
func (*ActionAnGangAddGang) ProtoMessage()               {}
func (*ActionAnGangAddGang) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ActionAnGangAddGang) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *ActionAnGangAddGang) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ActionAnGangAddGang) GetTiles() string {
	if m != nil {
		return m.Tiles
	}
	return ""
}

func (m *ActionAnGangAddGang) GetOperation() *OptionalOperationList {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *ActionAnGangAddGang) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

func (m *ActionAnGangAddGang) GetZhenting() bool {
	if m != nil {
		return m.Zhenting
	}
	return false
}

func (m *ActionAnGangAddGang) GetTingpais() []*TingPaiInfo {
	if m != nil {
		return m.Tingpais
	}
	return nil
}

type ActionBaBei struct {
	Seat      uint32                 `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Operation *OptionalOperationList `protobuf:"bytes,4,opt,name=operation" json:"operation,omitempty"`
	Doras     []string               `protobuf:"bytes,6,rep,name=doras" json:"doras,omitempty"`
	Zhenting  bool                   `protobuf:"varint,7,opt,name=zhenting" json:"zhenting,omitempty"`
	Tingpais  []*TingPaiInfo         `protobuf:"bytes,8,rep,name=tingpais" json:"tingpais,omitempty"`
	Moqie     bool                   `protobuf:"varint,9,opt,name=moqie" json:"moqie,omitempty"`
}

func (m *ActionBaBei) Reset()                    { *m = ActionBaBei{} }
func (m *ActionBaBei) String() string            { return proto.CompactTextString(m) }
func (*ActionBaBei) ProtoMessage()               {}
func (*ActionBaBei) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ActionBaBei) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *ActionBaBei) GetOperation() *OptionalOperationList {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *ActionBaBei) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

func (m *ActionBaBei) GetZhenting() bool {
	if m != nil {
		return m.Zhenting
	}
	return false
}

func (m *ActionBaBei) GetTingpais() []*TingPaiInfo {
	if m != nil {
		return m.Tingpais
	}
	return nil
}

func (m *ActionBaBei) GetMoqie() bool {
	if m != nil {
		return m.Moqie
	}
	return false
}

type ActionChiPengGang struct {
	Seat      uint32                 `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Type      uint32                 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Tiles     []string               `protobuf:"bytes,3,rep,name=tiles" json:"tiles,omitempty"`
	Froms     []uint32               `protobuf:"varint,4,rep,packed,name=froms" json:"froms,omitempty"`
	Liqi      *LiQiSuccess           `protobuf:"bytes,5,opt,name=liqi" json:"liqi,omitempty"`
	Operation *OptionalOperationList `protobuf:"bytes,6,opt,name=operation" json:"operation,omitempty"`
	Zhenting  bool                   `protobuf:"varint,7,opt,name=zhenting" json:"zhenting,omitempty"`
	Tingpais  []*TingPaiDiscardInfo  `protobuf:"bytes,8,rep,name=tingpais" json:"tingpais,omitempty"`
}

func (m *ActionChiPengGang) Reset()                    { *m = ActionChiPengGang{} }
func (m *ActionChiPengGang) String() string            { return proto.CompactTextString(m) }
func (*ActionChiPengGang) ProtoMessage()               {}
func (*ActionChiPengGang) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ActionChiPengGang) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *ActionChiPengGang) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ActionChiPengGang) GetTiles() []string {
	if m != nil {
		return m.Tiles
	}
	return nil
}

func (m *ActionChiPengGang) GetFroms() []uint32 {
	if m != nil {
		return m.Froms
	}
	return nil
}

func (m *ActionChiPengGang) GetLiqi() *LiQiSuccess {
	if m != nil {
		return m.Liqi
	}
	return nil
}

func (m *ActionChiPengGang) GetOperation() *OptionalOperationList {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *ActionChiPengGang) GetZhenting() bool {
	if m != nil {
		return m.Zhenting
	}
	return false
}

func (m *ActionChiPengGang) GetTingpais() []*TingPaiDiscardInfo {
	if m != nil {
		return m.Tingpais
	}
	return nil
}

type ActionDealTile struct {
	Seat          uint32                 `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Tile          string                 `protobuf:"bytes,2,opt,name=tile" json:"tile,omitempty"`
	LeftTileCount uint32                 `protobuf:"varint,3,opt,name=left_tile_count,json=leftTileCount" json:"left_tile_count,omitempty"`
	Operation     *OptionalOperationList `protobuf:"bytes,4,opt,name=operation" json:"operation,omitempty"`
	Liqi          *LiQiSuccess           `protobuf:"bytes,5,opt,name=liqi" json:"liqi,omitempty"`
	Doras         []string               `protobuf:"bytes,6,rep,name=doras" json:"doras,omitempty"`
	Zhenting      bool                   `protobuf:"varint,7,opt,name=zhenting" json:"zhenting,omitempty"`
	Tingpais      []*TingPaiDiscardInfo  `protobuf:"bytes,8,rep,name=tingpais" json:"tingpais,omitempty"`
}

func (m *ActionDealTile) Reset()                    { *m = ActionDealTile{} }
func (m *ActionDealTile) String() string            { return proto.CompactTextString(m) }
func (*ActionDealTile) ProtoMessage()               {}
func (*ActionDealTile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ActionDealTile) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *ActionDealTile) GetTile() string {
	if m != nil {
		return m.Tile
	}
	return ""
}

func (m *ActionDealTile) GetLeftTileCount() uint32 {
	if m != nil {
		return m.LeftTileCount
	}
	return 0
}

func (m *ActionDealTile) GetOperation() *OptionalOperationList {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *ActionDealTile) GetLiqi() *LiQiSuccess {
	if m != nil {
		return m.Liqi
	}
	return nil
}

func (m *ActionDealTile) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

func (m *ActionDealTile) GetZhenting() bool {
	if m != nil {
		return m.Zhenting
	}
	return false
}

func (m *ActionDealTile) GetTingpais() []*TingPaiDiscardInfo {
	if m != nil {
		return m.Tingpais
	}
	return nil
}

type ActionDiscardTile struct {
	Seat      uint32                 `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Tile      string                 `protobuf:"bytes,2,opt,name=tile" json:"tile,omitempty"`
	IsLiqi    bool                   `protobuf:"varint,3,opt,name=is_liqi,json=isLiqi" json:"is_liqi,omitempty"`
	Operation *OptionalOperationList `protobuf:"bytes,4,opt,name=operation" json:"operation,omitempty"`
	Moqie     bool                   `protobuf:"varint,5,opt,name=moqie" json:"moqie,omitempty"`
	Zhenting  bool                   `protobuf:"varint,6,opt,name=zhenting" json:"zhenting,omitempty"`
	Tingpais  []*TingPaiInfo         `protobuf:"bytes,7,rep,name=tingpais" json:"tingpais,omitempty"`
	Doras     []string               `protobuf:"bytes,8,rep,name=doras" json:"doras,omitempty"`
	IsWliqi   bool                   `protobuf:"varint,9,opt,name=is_wliqi,json=isWliqi" json:"is_wliqi,omitempty"`
}

func (m *ActionDiscardTile) Reset()                    { *m = ActionDiscardTile{} }
func (m *ActionDiscardTile) String() string            { return proto.CompactTextString(m) }
func (*ActionDiscardTile) ProtoMessage()               {}
func (*ActionDiscardTile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ActionDiscardTile) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *ActionDiscardTile) GetTile() string {
	if m != nil {
		return m.Tile
	}
	return ""
}

func (m *ActionDiscardTile) GetIsLiqi() bool {
	if m != nil {
		return m.IsLiqi
	}
	return false
}

func (m *ActionDiscardTile) GetOperation() *OptionalOperationList {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *ActionDiscardTile) GetMoqie() bool {
	if m != nil {
		return m.Moqie
	}
	return false
}

func (m *ActionDiscardTile) GetZhenting() bool {
	if m != nil {
		return m.Zhenting
	}
	return false
}

func (m *ActionDiscardTile) GetTingpais() []*TingPaiInfo {
	if m != nil {
		return m.Tingpais
	}
	return nil
}

func (m *ActionDiscardTile) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

func (m *ActionDiscardTile) GetIsWliqi() bool {
	if m != nil {
		return m.IsWliqi
	}
	return false
}

type ActionHule struct {
	Hules       []*HuleInfo `protobuf:"bytes,1,rep,name=hules" json:"hules,omitempty"`
	OldScores   []int32     `protobuf:"varint,2,rep,packed,name=old_scores,json=oldScores" json:"old_scores,omitempty"`
	DeltaScores []int32     `protobuf:"varint,3,rep,packed,name=delta_scores,json=deltaScores" json:"delta_scores,omitempty"`
	WaitTimeout uint32      `protobuf:"varint,4,opt,name=wait_timeout,json=waitTimeout" json:"wait_timeout,omitempty"`
	Scores      []int32     `protobuf:"varint,5,rep,packed,name=scores" json:"scores,omitempty"`
	Gameend     *GameEnd    `protobuf:"bytes,6,opt,name=gameend" json:"gameend,omitempty"`
	Doras       []string    `protobuf:"bytes,7,rep,name=doras" json:"doras,omitempty"`
}

func (m *ActionHule) Reset()                    { *m = ActionHule{} }
func (m *ActionHule) String() string            { return proto.CompactTextString(m) }
func (*ActionHule) ProtoMessage()               {}
func (*ActionHule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ActionHule) GetHules() []*HuleInfo {
	if m != nil {
		return m.Hules
	}
	return nil
}

func (m *ActionHule) GetOldScores() []int32 {
	if m != nil {
		return m.OldScores
	}
	return nil
}

func (m *ActionHule) GetDeltaScores() []int32 {
	if m != nil {
		return m.DeltaScores
	}
	return nil
}

func (m *ActionHule) GetWaitTimeout() uint32 {
	if m != nil {
		return m.WaitTimeout
	}
	return 0
}

func (m *ActionHule) GetScores() []int32 {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *ActionHule) GetGameend() *GameEnd {
	if m != nil {
		return m.Gameend
	}
	return nil
}

func (m *ActionHule) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

type ActionLiuJu struct {
	Type           uint32       `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Gameend        *GameEnd     `protobuf:"bytes,2,opt,name=gameend" json:"gameend,omitempty"`
	Seat           uint32       `protobuf:"varint,3,opt,name=seat" json:"seat,omitempty"`
	Tiles          []string     `protobuf:"bytes,4,rep,name=tiles" json:"tiles,omitempty"`
	Liqi           *LiQiSuccess `protobuf:"bytes,5,opt,name=liqi" json:"liqi,omitempty"`
	Allplayertiles []string     `protobuf:"bytes,6,rep,name=allplayertiles" json:"allplayertiles,omitempty"`
}

func (m *ActionLiuJu) Reset()                    { *m = ActionLiuJu{} }
func (m *ActionLiuJu) String() string            { return proto.CompactTextString(m) }
func (*ActionLiuJu) ProtoMessage()               {}
func (*ActionLiuJu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ActionLiuJu) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ActionLiuJu) GetGameend() *GameEnd {
	if m != nil {
		return m.Gameend
	}
	return nil
}

func (m *ActionLiuJu) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *ActionLiuJu) GetTiles() []string {
	if m != nil {
		return m.Tiles
	}
	return nil
}

func (m *ActionLiuJu) GetLiqi() *LiQiSuccess {
	if m != nil {
		return m.Liqi
	}
	return nil
}

func (m *ActionLiuJu) GetAllplayertiles() []string {
	if m != nil {
		return m.Allplayertiles
	}
	return nil
}

type ActionMJStart struct {
}

func (m *ActionMJStart) Reset()                    { *m = ActionMJStart{} }
func (m *ActionMJStart) String() string            { return proto.CompactTextString(m) }
func (*ActionMJStart) ProtoMessage()               {}
func (*ActionMJStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type ActionNewRound struct {
	Chang         uint32                 `protobuf:"varint,1,opt,name=chang" json:"chang,omitempty"`
	Ju            uint32                 `protobuf:"varint,2,opt,name=ju" json:"ju,omitempty"`
	Ben           uint32                 `protobuf:"varint,3,opt,name=ben" json:"ben,omitempty"`
	Tiles         []string               `protobuf:"bytes,4,rep,name=tiles" json:"tiles,omitempty"`
	Dora          string                 `protobuf:"bytes,5,opt,name=dora" json:"dora,omitempty"`
	Scores        []int32                `protobuf:"varint,6,rep,packed,name=scores" json:"scores,omitempty"`
	Operation     *OptionalOperationList `protobuf:"bytes,7,opt,name=operation" json:"operation,omitempty"`
	Liqibang      uint32                 `protobuf:"varint,8,opt,name=liqibang" json:"liqibang,omitempty"`
	Tingpais0     []*TingPaiDiscardInfo  `protobuf:"bytes,9,rep,name=tingpais0" json:"tingpais0,omitempty"`
	Tingpais1     []*TingPaiInfo         `protobuf:"bytes,10,rep,name=tingpais1" json:"tingpais1,omitempty"`
	Al            bool                   `protobuf:"varint,11,opt,name=al" json:"al,omitempty"`
	Md5           string                 `protobuf:"bytes,12,opt,name=md5" json:"md5,omitempty"`
	LeftTileCount uint32                 `protobuf:"varint,13,opt,name=left_tile_count,json=leftTileCount" json:"left_tile_count,omitempty"`
}

func (m *ActionNewRound) Reset()                    { *m = ActionNewRound{} }
func (m *ActionNewRound) String() string            { return proto.CompactTextString(m) }
func (*ActionNewRound) ProtoMessage()               {}
func (*ActionNewRound) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ActionNewRound) GetChang() uint32 {
	if m != nil {
		return m.Chang
	}
	return 0
}

func (m *ActionNewRound) GetJu() uint32 {
	if m != nil {
		return m.Ju
	}
	return 0
}

func (m *ActionNewRound) GetBen() uint32 {
	if m != nil {
		return m.Ben
	}
	return 0
}

func (m *ActionNewRound) GetTiles() []string {
	if m != nil {
		return m.Tiles
	}
	return nil
}

func (m *ActionNewRound) GetDora() string {
	if m != nil {
		return m.Dora
	}
	return ""
}

func (m *ActionNewRound) GetScores() []int32 {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *ActionNewRound) GetOperation() *OptionalOperationList {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *ActionNewRound) GetLiqibang() uint32 {
	if m != nil {
		return m.Liqibang
	}
	return 0
}

func (m *ActionNewRound) GetTingpais0() []*TingPaiDiscardInfo {
	if m != nil {
		return m.Tingpais0
	}
	return nil
}

func (m *ActionNewRound) GetTingpais1() []*TingPaiInfo {
	if m != nil {
		return m.Tingpais1
	}
	return nil
}

func (m *ActionNewRound) GetAl() bool {
	if m != nil {
		return m.Al
	}
	return false
}

func (m *ActionNewRound) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *ActionNewRound) GetLeftTileCount() uint32 {
	if m != nil {
		return m.LeftTileCount
	}
	return 0
}

type ActionNoTile struct {
	Liujumanguan bool                `protobuf:"varint,1,opt,name=liujumanguan" json:"liujumanguan,omitempty"`
	Players      []*NoTilePlayerInfo `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	Scores       []*NoTileScoreInfo  `protobuf:"bytes,3,rep,name=scores" json:"scores,omitempty"`
	Gameend      bool                `protobuf:"varint,4,opt,name=gameend" json:"gameend,omitempty"`
}

func (m *ActionNoTile) Reset()                    { *m = ActionNoTile{} }
func (m *ActionNoTile) String() string            { return proto.CompactTextString(m) }
func (*ActionNoTile) ProtoMessage()               {}
func (*ActionNoTile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *ActionNoTile) GetLiujumanguan() bool {
	if m != nil {
		return m.Liujumanguan
	}
	return false
}

func (m *ActionNoTile) GetPlayers() []*NoTilePlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *ActionNoTile) GetScores() []*NoTileScoreInfo {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *ActionNoTile) GetGameend() bool {
	if m != nil {
		return m.Gameend
	}
	return false
}

type ActionPrototype struct {
	Step uint32 `protobuf:"varint,1,opt,name=step" json:"step,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *ActionPrototype) Reset()                    { *m = ActionPrototype{} }
func (m *ActionPrototype) String() string            { return proto.CompactTextString(m) }
func (*ActionPrototype) ProtoMessage()               {}
func (*ActionPrototype) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *ActionPrototype) GetStep() uint32 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *ActionPrototype) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ActionPrototype) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Activity struct {
	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId" json:"activity_id,omitempty"`
	StartTime  uint32 `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime    uint32 `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Type       string `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
}

func (m *Activity) Reset()                    { *m = Activity{} }
func (m *Activity) String() string            { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()               {}
func (*Activity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *Activity) GetActivityId() uint32 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *Activity) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *Activity) GetEndTime() uint32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *Activity) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ActivityAccumulatedPointData struct {
	ActivityId       uint32   `protobuf:"varint,1,opt,name=activity_id,json=activityId" json:"activity_id,omitempty"`
	Point            int32    `protobuf:"varint,2,opt,name=point" json:"point,omitempty"`
	GainedRewardList []uint32 `protobuf:"varint,3,rep,packed,name=gained_reward_list,json=gainedRewardList" json:"gained_reward_list,omitempty"`
}

func (m *ActivityAccumulatedPointData) Reset()                    { *m = ActivityAccumulatedPointData{} }
func (m *ActivityAccumulatedPointData) String() string            { return proto.CompactTextString(m) }
func (*ActivityAccumulatedPointData) ProtoMessage()               {}
func (*ActivityAccumulatedPointData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ActivityAccumulatedPointData) GetActivityId() uint32 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ActivityAccumulatedPointData) GetPoint() int32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *ActivityAccumulatedPointData) GetGainedRewardList() []uint32 {
	if m != nil {
		return m.GainedRewardList
	}
	return nil
}

type ActivityRankPointData struct {
	LeaderboardId uint32 `protobuf:"varint,1,opt,name=leaderboard_id,json=leaderboardId" json:"leaderboard_id,omitempty"`
	Point         int32  `protobuf:"varint,2,opt,name=point" json:"point,omitempty"`
	GainedReward  bool   `protobuf:"varint,3,opt,name=gained_reward,json=gainedReward" json:"gained_reward,omitempty"`
	GainableTime  uint32 `protobuf:"varint,4,opt,name=gainable_time,json=gainableTime" json:"gainable_time,omitempty"`
}

func (m *ActivityRankPointData) Reset()                    { *m = ActivityRankPointData{} }
func (m *ActivityRankPointData) String() string            { return proto.CompactTextString(m) }
func (*ActivityRankPointData) ProtoMessage()               {}
func (*ActivityRankPointData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ActivityRankPointData) GetLeaderboardId() uint32 {
	if m != nil {
		return m.LeaderboardId
	}
	return 0
}

func (m *ActivityRankPointData) GetPoint() int32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *ActivityRankPointData) GetGainedReward() bool {
	if m != nil {
		return m.GainedReward
	}
	return false
}

func (m *ActivityRankPointData) GetGainableTime() uint32 {
	if m != nil {
		return m.GainableTime
	}
	return 0
}

type Announcement struct {
	Id      uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
}

func (m *Announcement) Reset()                    { *m = Announcement{} }
func (m *Announcement) String() string            { return proto.CompactTextString(m) }
func (*Announcement) ProtoMessage()               {}
func (*Announcement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *Announcement) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Announcement) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Announcement) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type AntiAddiction struct {
	OnlineDuration uint32 `protobuf:"varint,1,opt,name=online_duration,json=onlineDuration" json:"online_duration,omitempty"`
}

func (m *AntiAddiction) Reset()                    { *m = AntiAddiction{} }
func (m *AntiAddiction) String() string            { return proto.CompactTextString(m) }
func (*AntiAddiction) ProtoMessage()               {}
func (*AntiAddiction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *AntiAddiction) GetOnlineDuration() uint32 {
	if m != nil {
		return m.OnlineDuration
	}
	return 0
}

type Bag struct {
	Items []*Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *Bag) Reset()                    { *m = Bag{} }
func (m *Bag) String() string            { return proto.CompactTextString(m) }
func (*Bag) ProtoMessage()               {}
func (*Bag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *Bag) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type BagUpdate struct {
	UpdateItems []*Item `protobuf:"bytes,1,rep,name=update_items,json=updateItems" json:"update_items,omitempty"`
}

func (m *BagUpdate) Reset()                    { *m = BagUpdate{} }
func (m *BagUpdate) String() string            { return proto.CompactTextString(m) }
func (*BagUpdate) ProtoMessage()               {}
func (*BagUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *BagUpdate) GetUpdateItems() []*Item {
	if m != nil {
		return m.UpdateItems
	}
	return nil
}

type BillingGoods struct {
	Id            string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Desc          string `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
	Icon          string `protobuf:"bytes,4,opt,name=icon" json:"icon,omitempty"`
	ResourceId    uint32 `protobuf:"varint,5,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceCount uint32 `protobuf:"varint,6,opt,name=resource_count,json=resourceCount" json:"resource_count,omitempty"`
}

func (m *BillingGoods) Reset()                    { *m = BillingGoods{} }
func (m *BillingGoods) String() string            { return proto.CompactTextString(m) }
func (*BillingGoods) ProtoMessage()               {}
func (*BillingGoods) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *BillingGoods) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BillingGoods) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BillingGoods) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *BillingGoods) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *BillingGoods) GetResourceId() uint32 {
	if m != nil {
		return m.ResourceId
	}
	return 0
}

func (m *BillingGoods) GetResourceCount() uint32 {
	if m != nil {
		return m.ResourceCount
	}
	return 0
}

type BillingProduct struct {
	Goods         *BillingGoods `protobuf:"bytes,1,opt,name=goods" json:"goods,omitempty"`
	CurrencyCode  string        `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	CurrencyPrice uint32        `protobuf:"varint,3,opt,name=currency_price,json=currencyPrice" json:"currency_price,omitempty"`
	SortWeight    uint32        `protobuf:"varint,4,opt,name=sort_weight,json=sortWeight" json:"sort_weight,omitempty"`
}

func (m *BillingProduct) Reset()                    { *m = BillingProduct{} }
func (m *BillingProduct) String() string            { return proto.CompactTextString(m) }
func (*BillingProduct) ProtoMessage()               {}
func (*BillingProduct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *BillingProduct) GetGoods() *BillingGoods {
	if m != nil {
		return m.Goods
	}
	return nil
}

func (m *BillingProduct) GetCurrencyCode() string {
	if m != nil {
		return m.CurrencyCode
	}
	return ""
}

func (m *BillingProduct) GetCurrencyPrice() uint32 {
	if m != nil {
		return m.CurrencyPrice
	}
	return 0
}

func (m *BillingProduct) GetSortWeight() uint32 {
	if m != nil {
		return m.SortWeight
	}
	return 0
}

type BuyRecord struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *BuyRecord) Reset()                    { *m = BuyRecord{} }
func (m *BuyRecord) String() string            { return proto.CompactTextString(m) }
func (*BuyRecord) ProtoMessage()               {}
func (*BuyRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *BuyRecord) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuyRecord) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ChangeNicknameRecord struct {
	From string `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To   string `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	Time uint32 `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
}

func (m *ChangeNicknameRecord) Reset()                    { *m = ChangeNicknameRecord{} }
func (m *ChangeNicknameRecord) String() string            { return proto.CompactTextString(m) }
func (*ChangeNicknameRecord) ProtoMessage()               {}
func (*ChangeNicknameRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *ChangeNicknameRecord) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ChangeNicknameRecord) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ChangeNicknameRecord) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

type Character struct {
	Charid     uint32                   `protobuf:"varint,1,opt,name=charid" json:"charid,omitempty"`
	Level      uint32                   `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Exp        uint32                   `protobuf:"varint,3,opt,name=exp" json:"exp,omitempty"`
	Views      []*Character_ViewSlotSet `protobuf:"bytes,4,rep,name=views" json:"views,omitempty"`
	Skin       uint32                   `protobuf:"varint,5,opt,name=skin" json:"skin,omitempty"`
	IsUpgraded bool                     `protobuf:"varint,6,opt,name=is_upgraded,json=isUpgraded" json:"is_upgraded,omitempty"`
	ExtraEmoji []uint32                 `protobuf:"varint,7,rep,packed,name=extra_emoji,json=extraEmoji" json:"extra_emoji,omitempty"`
}

func (m *Character) Reset()                    { *m = Character{} }
func (m *Character) String() string            { return proto.CompactTextString(m) }
func (*Character) ProtoMessage()               {}
func (*Character) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *Character) GetCharid() uint32 {
	if m != nil {
		return m.Charid
	}
	return 0
}

func (m *Character) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Character) GetExp() uint32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *Character) GetViews() []*Character_ViewSlotSet {
	if m != nil {
		return m.Views
	}
	return nil
}

func (m *Character) GetSkin() uint32 {
	if m != nil {
		return m.Skin
	}
	return 0
}

func (m *Character) GetIsUpgraded() bool {
	if m != nil {
		return m.IsUpgraded
	}
	return false
}

func (m *Character) GetExtraEmoji() []uint32 {
	if m != nil {
		return m.ExtraEmoji
	}
	return nil
}

type Character_ViewSlotSet struct {
	Slot   uint32 `protobuf:"varint,1,opt,name=slot" json:"slot,omitempty"`
	ItemId uint32 `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (m *Character_ViewSlotSet) Reset()                    { *m = Character_ViewSlotSet{} }
func (m *Character_ViewSlotSet) String() string            { return proto.CompactTextString(m) }
func (*Character_ViewSlotSet) ProtoMessage()               {}
func (*Character_ViewSlotSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40, 0} }

func (m *Character_ViewSlotSet) GetSlot() uint32 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *Character_ViewSlotSet) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

type ChestData struct {
	ChestId        uint32 `protobuf:"varint,1,opt,name=chest_id,json=chestId" json:"chest_id,omitempty"`
	TotalOpenCount uint32 `protobuf:"varint,2,opt,name=total_open_count,json=totalOpenCount" json:"total_open_count,omitempty"`
	ConsumeCount   uint32 `protobuf:"varint,3,opt,name=consume_count,json=consumeCount" json:"consume_count,omitempty"`
	FaceBlackCount uint32 `protobuf:"varint,4,opt,name=face_black_count,json=faceBlackCount" json:"face_black_count,omitempty"`
}

func (m *ChestData) Reset()                    { *m = ChestData{} }
func (m *ChestData) String() string            { return proto.CompactTextString(m) }
func (*ChestData) ProtoMessage()               {}
func (*ChestData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *ChestData) GetChestId() uint32 {
	if m != nil {
		return m.ChestId
	}
	return 0
}

func (m *ChestData) GetTotalOpenCount() uint32 {
	if m != nil {
		return m.TotalOpenCount
	}
	return 0
}

func (m *ChestData) GetConsumeCount() uint32 {
	if m != nil {
		return m.ConsumeCount
	}
	return 0
}

func (m *ChestData) GetFaceBlackCount() uint32 {
	if m != nil {
		return m.FaceBlackCount
	}
	return 0
}

type ChestDataV2 struct {
	ChestId        uint32 `protobuf:"varint,1,opt,name=chest_id,json=chestId" json:"chest_id,omitempty"`
	TotalOpenCount uint32 `protobuf:"varint,2,opt,name=total_open_count,json=totalOpenCount" json:"total_open_count,omitempty"`
	FaceBlackCount uint32 `protobuf:"varint,3,opt,name=face_black_count,json=faceBlackCount" json:"face_black_count,omitempty"`
}

func (m *ChestDataV2) Reset()                    { *m = ChestDataV2{} }
func (m *ChestDataV2) String() string            { return proto.CompactTextString(m) }
func (*ChestDataV2) ProtoMessage()               {}
func (*ChestDataV2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *ChestDataV2) GetChestId() uint32 {
	if m != nil {
		return m.ChestId
	}
	return 0
}

func (m *ChestDataV2) GetTotalOpenCount() uint32 {
	if m != nil {
		return m.TotalOpenCount
	}
	return 0
}

func (m *ChestDataV2) GetFaceBlackCount() uint32 {
	if m != nil {
		return m.FaceBlackCount
	}
	return 0
}

type ClientDeviceInfo struct {
	DeviceType string `protobuf:"bytes,1,opt,name=device_type,json=deviceType" json:"device_type,omitempty"`
	Os         string `protobuf:"bytes,2,opt,name=os" json:"os,omitempty"`
	OsVersion  string `protobuf:"bytes,3,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	Browser    string `protobuf:"bytes,4,opt,name=browser" json:"browser,omitempty"`
}

func (m *ClientDeviceInfo) Reset()                    { *m = ClientDeviceInfo{} }
func (m *ClientDeviceInfo) String() string            { return proto.CompactTextString(m) }
func (*ClientDeviceInfo) ProtoMessage()               {}
func (*ClientDeviceInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *ClientDeviceInfo) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *ClientDeviceInfo) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *ClientDeviceInfo) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *ClientDeviceInfo) GetBrowser() string {
	if m != nil {
		return m.Browser
	}
	return ""
}

type CommentItem struct {
	CommentId uint32          `protobuf:"varint,1,opt,name=comment_id,json=commentId" json:"comment_id,omitempty"`
	Timestamp uint32          `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Commenter *PlayerBaseView `protobuf:"bytes,3,opt,name=commenter" json:"commenter,omitempty"`
	Content   string          `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
}

func (m *CommentItem) Reset()                    { *m = CommentItem{} }
func (m *CommentItem) String() string            { return proto.CompactTextString(m) }
func (*CommentItem) ProtoMessage()               {}
func (*CommentItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *CommentItem) GetCommentId() uint32 {
	if m != nil {
		return m.CommentId
	}
	return 0
}

func (m *CommentItem) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CommentItem) GetCommenter() *PlayerBaseView {
	if m != nil {
		return m.Commenter
	}
	return nil
}

func (m *CommentItem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CustomizedContestAbstract struct {
	UniqueId     uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	ContestId    uint32 `protobuf:"varint,2,opt,name=contest_id,json=contestId" json:"contest_id,omitempty"`
	ContestName  string `protobuf:"bytes,3,opt,name=contest_name,json=contestName" json:"contest_name,omitempty"`
	State        uint32 `protobuf:"varint,4,opt,name=state" json:"state,omitempty"`
	CreatorId    uint32 `protobuf:"varint,5,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	CreateTime   uint32 `protobuf:"varint,6,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StartTime    uint32 `protobuf:"varint,7,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	FinishTime   uint32 `protobuf:"varint,8,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	Open         bool   `protobuf:"varint,9,opt,name=open" json:"open,omitempty"`
	PublicNotice string `protobuf:"bytes,10,opt,name=public_notice,json=publicNotice" json:"public_notice,omitempty"`
}

func (m *CustomizedContestAbstract) Reset()                    { *m = CustomizedContestAbstract{} }
func (m *CustomizedContestAbstract) String() string            { return proto.CompactTextString(m) }
func (*CustomizedContestAbstract) ProtoMessage()               {}
func (*CustomizedContestAbstract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *CustomizedContestAbstract) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

func (m *CustomizedContestAbstract) GetContestId() uint32 {
	if m != nil {
		return m.ContestId
	}
	return 0
}

func (m *CustomizedContestAbstract) GetContestName() string {
	if m != nil {
		return m.ContestName
	}
	return ""
}

func (m *CustomizedContestAbstract) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *CustomizedContestAbstract) GetCreatorId() uint32 {
	if m != nil {
		return m.CreatorId
	}
	return 0
}

func (m *CustomizedContestAbstract) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *CustomizedContestAbstract) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CustomizedContestAbstract) GetFinishTime() uint32 {
	if m != nil {
		return m.FinishTime
	}
	return 0
}

func (m *CustomizedContestAbstract) GetOpen() bool {
	if m != nil {
		return m.Open
	}
	return false
}

func (m *CustomizedContestAbstract) GetPublicNotice() string {
	if m != nil {
		return m.PublicNotice
	}
	return ""
}

type CustomizedContestBase struct {
	UniqueId    uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	ContestId   uint32 `protobuf:"varint,2,opt,name=contest_id,json=contestId" json:"contest_id,omitempty"`
	ContestName string `protobuf:"bytes,3,opt,name=contest_name,json=contestName" json:"contest_name,omitempty"`
	State       uint32 `protobuf:"varint,4,opt,name=state" json:"state,omitempty"`
	CreatorId   uint32 `protobuf:"varint,5,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	CreateTime  uint32 `protobuf:"varint,6,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StartTime   uint32 `protobuf:"varint,7,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	FinishTime  uint32 `protobuf:"varint,8,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	Open        bool   `protobuf:"varint,9,opt,name=open" json:"open,omitempty"`
}

func (m *CustomizedContestBase) Reset()                    { *m = CustomizedContestBase{} }
func (m *CustomizedContestBase) String() string            { return proto.CompactTextString(m) }
func (*CustomizedContestBase) ProtoMessage()               {}
func (*CustomizedContestBase) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *CustomizedContestBase) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

func (m *CustomizedContestBase) GetContestId() uint32 {
	if m != nil {
		return m.ContestId
	}
	return 0
}

func (m *CustomizedContestBase) GetContestName() string {
	if m != nil {
		return m.ContestName
	}
	return ""
}

func (m *CustomizedContestBase) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *CustomizedContestBase) GetCreatorId() uint32 {
	if m != nil {
		return m.CreatorId
	}
	return 0
}

func (m *CustomizedContestBase) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *CustomizedContestBase) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CustomizedContestBase) GetFinishTime() uint32 {
	if m != nil {
		return m.FinishTime
	}
	return 0
}

func (m *CustomizedContestBase) GetOpen() bool {
	if m != nil {
		return m.Open
	}
	return false
}

type CustomizedContestDetail struct {
	UniqueId      uint32    `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	ContestId     uint32    `protobuf:"varint,2,opt,name=contest_id,json=contestId" json:"contest_id,omitempty"`
	ContestName   string    `protobuf:"bytes,3,opt,name=contest_name,json=contestName" json:"contest_name,omitempty"`
	State         uint32    `protobuf:"varint,4,opt,name=state" json:"state,omitempty"`
	CreatorId     uint32    `protobuf:"varint,5,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	CreateTime    uint32    `protobuf:"varint,6,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StartTime     uint32    `protobuf:"varint,7,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	FinishTime    uint32    `protobuf:"varint,8,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	Open          bool      `protobuf:"varint,9,opt,name=open" json:"open,omitempty"`
	RankRule      uint32    `protobuf:"varint,10,opt,name=rank_rule,json=rankRule" json:"rank_rule,omitempty"`
	GameMode      *GameMode `protobuf:"bytes,11,opt,name=game_mode,json=gameMode" json:"game_mode,omitempty"`
	PrivateNotice string    `protobuf:"bytes,12,opt,name=private_notice,json=privateNotice" json:"private_notice,omitempty"`
}

func (m *CustomizedContestDetail) Reset()                    { *m = CustomizedContestDetail{} }
func (m *CustomizedContestDetail) String() string            { return proto.CompactTextString(m) }
func (*CustomizedContestDetail) ProtoMessage()               {}
func (*CustomizedContestDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *CustomizedContestDetail) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

func (m *CustomizedContestDetail) GetContestId() uint32 {
	if m != nil {
		return m.ContestId
	}
	return 0
}

func (m *CustomizedContestDetail) GetContestName() string {
	if m != nil {
		return m.ContestName
	}
	return ""
}

func (m *CustomizedContestDetail) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *CustomizedContestDetail) GetCreatorId() uint32 {
	if m != nil {
		return m.CreatorId
	}
	return 0
}

func (m *CustomizedContestDetail) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *CustomizedContestDetail) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CustomizedContestDetail) GetFinishTime() uint32 {
	if m != nil {
		return m.FinishTime
	}
	return 0
}

func (m *CustomizedContestDetail) GetOpen() bool {
	if m != nil {
		return m.Open
	}
	return false
}

func (m *CustomizedContestDetail) GetRankRule() uint32 {
	if m != nil {
		return m.RankRule
	}
	return 0
}

func (m *CustomizedContestDetail) GetGameMode() *GameMode {
	if m != nil {
		return m.GameMode
	}
	return nil
}

func (m *CustomizedContestDetail) GetPrivateNotice() string {
	if m != nil {
		return m.PrivateNotice
	}
	return ""
}

type CustomizedContestExtend struct {
	UniqueId     uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	PublicNotice string `protobuf:"bytes,2,opt,name=public_notice,json=publicNotice" json:"public_notice,omitempty"`
}

func (m *CustomizedContestExtend) Reset()                    { *m = CustomizedContestExtend{} }
func (m *CustomizedContestExtend) String() string            { return proto.CompactTextString(m) }
func (*CustomizedContestExtend) ProtoMessage()               {}
func (*CustomizedContestExtend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *CustomizedContestExtend) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

func (m *CustomizedContestExtend) GetPublicNotice() string {
	if m != nil {
		return m.PublicNotice
	}
	return ""
}

type CustomizedContestGameEnd struct {
	Players []*CustomizedContestGameEnd_Item `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
}

func (m *CustomizedContestGameEnd) Reset()                    { *m = CustomizedContestGameEnd{} }
func (m *CustomizedContestGameEnd) String() string            { return proto.CompactTextString(m) }
func (*CustomizedContestGameEnd) ProtoMessage()               {}
func (*CustomizedContestGameEnd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *CustomizedContestGameEnd) GetPlayers() []*CustomizedContestGameEnd_Item {
	if m != nil {
		return m.Players
	}
	return nil
}

type CustomizedContestGameEnd_Item struct {
	AccountId  uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Nickname   string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	TotalPoint int32  `protobuf:"varint,3,opt,name=total_point,json=totalPoint" json:"total_point,omitempty"`
}

func (m *CustomizedContestGameEnd_Item) Reset()         { *m = CustomizedContestGameEnd_Item{} }
func (m *CustomizedContestGameEnd_Item) String() string { return proto.CompactTextString(m) }
func (*CustomizedContestGameEnd_Item) ProtoMessage()    {}
func (*CustomizedContestGameEnd_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{49, 0}
}

func (m *CustomizedContestGameEnd_Item) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *CustomizedContestGameEnd_Item) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *CustomizedContestGameEnd_Item) GetTotalPoint() int32 {
	if m != nil {
		return m.TotalPoint
	}
	return 0
}

type CustomizedContestGameStart struct {
	Players []*CustomizedContestGameStart_Item `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
}

func (m *CustomizedContestGameStart) Reset()                    { *m = CustomizedContestGameStart{} }
func (m *CustomizedContestGameStart) String() string            { return proto.CompactTextString(m) }
func (*CustomizedContestGameStart) ProtoMessage()               {}
func (*CustomizedContestGameStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *CustomizedContestGameStart) GetPlayers() []*CustomizedContestGameStart_Item {
	if m != nil {
		return m.Players
	}
	return nil
}

type CustomizedContestGameStart_Item struct {
	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
}

func (m *CustomizedContestGameStart_Item) Reset()         { *m = CustomizedContestGameStart_Item{} }
func (m *CustomizedContestGameStart_Item) String() string { return proto.CompactTextString(m) }
func (*CustomizedContestGameStart_Item) ProtoMessage()    {}
func (*CustomizedContestGameStart_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{50, 0}
}

func (m *CustomizedContestGameStart_Item) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *CustomizedContestGameStart_Item) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

type CustomizedContestPlayerReport struct {
	RankRule        uint32   `protobuf:"varint,1,opt,name=rank_rule,json=rankRule" json:"rank_rule,omitempty"`
	Rank            uint32   `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	Point           int32    `protobuf:"varint,3,opt,name=point" json:"point,omitempty"`
	RecentGameRanks []uint32 `protobuf:"varint,4,rep,packed,name=recent_game_ranks,json=recentGameRanks" json:"recent_game_ranks,omitempty"`
	TotalGameCount  uint32   `protobuf:"varint,5,opt,name=total_game_count,json=totalGameCount" json:"total_game_count,omitempty"`
}

func (m *CustomizedContestPlayerReport) Reset()                    { *m = CustomizedContestPlayerReport{} }
func (m *CustomizedContestPlayerReport) String() string            { return proto.CompactTextString(m) }
func (*CustomizedContestPlayerReport) ProtoMessage()               {}
func (*CustomizedContestPlayerReport) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *CustomizedContestPlayerReport) GetRankRule() uint32 {
	if m != nil {
		return m.RankRule
	}
	return 0
}

func (m *CustomizedContestPlayerReport) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *CustomizedContestPlayerReport) GetPoint() int32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *CustomizedContestPlayerReport) GetRecentGameRanks() []uint32 {
	if m != nil {
		return m.RecentGameRanks
	}
	return nil
}

func (m *CustomizedContestPlayerReport) GetTotalGameCount() uint32 {
	if m != nil {
		return m.TotalGameCount
	}
	return 0
}

type Error struct {
	Code      uint32   `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	U32Params []uint32 `protobuf:"varint,2,rep,packed,name=u32_params,json=u32Params" json:"u32_params,omitempty"`
	StrParams []string `protobuf:"bytes,3,rep,name=str_params,json=strParams" json:"str_params,omitempty"`
	JsonParam string   `protobuf:"bytes,4,opt,name=json_param,json=jsonParam" json:"json_param,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *Error) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetU32Params() []uint32 {
	if m != nil {
		return m.U32Params
	}
	return nil
}

func (m *Error) GetStrParams() []string {
	if m != nil {
		return m.StrParams
	}
	return nil
}

func (m *Error) GetJsonParam() string {
	if m != nil {
		return m.JsonParam
	}
	return ""
}

type ExchangeRecord struct {
	ExchangeId uint32 `protobuf:"varint,1,opt,name=exchange_id,json=exchangeId" json:"exchange_id,omitempty"`
	Count      uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ExchangeRecord) Reset()                    { *m = ExchangeRecord{} }
func (m *ExchangeRecord) String() string            { return proto.CompactTextString(m) }
func (*ExchangeRecord) ProtoMessage()               {}
func (*ExchangeRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *ExchangeRecord) GetExchangeId() uint32 {
	if m != nil {
		return m.ExchangeId
	}
	return 0
}

func (m *ExchangeRecord) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ExecuteReward struct {
	Reward       *RewardSlot `protobuf:"bytes,1,opt,name=reward" json:"reward,omitempty"`
	Replace      *RewardSlot `protobuf:"bytes,2,opt,name=replace" json:"replace,omitempty"`
	ReplaceCount uint32      `protobuf:"varint,3,opt,name=replace_count,json=replaceCount" json:"replace_count,omitempty"`
}

func (m *ExecuteReward) Reset()                    { *m = ExecuteReward{} }
func (m *ExecuteReward) String() string            { return proto.CompactTextString(m) }
func (*ExecuteReward) ProtoMessage()               {}
func (*ExecuteReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *ExecuteReward) GetReward() *RewardSlot {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *ExecuteReward) GetReplace() *RewardSlot {
	if m != nil {
		return m.Replace
	}
	return nil
}

func (m *ExecuteReward) GetReplaceCount() uint32 {
	if m != nil {
		return m.ReplaceCount
	}
	return 0
}

type FaithData struct {
	FaithId        uint32 `protobuf:"varint,1,opt,name=faith_id,json=faithId" json:"faith_id,omitempty"`
	TotalOpenCount uint32 `protobuf:"varint,2,opt,name=total_open_count,json=totalOpenCount" json:"total_open_count,omitempty"`
	ConsumeCount   uint32 `protobuf:"varint,3,opt,name=consume_count,json=consumeCount" json:"consume_count,omitempty"`
}

func (m *FaithData) Reset()                    { *m = FaithData{} }
func (m *FaithData) String() string            { return proto.CompactTextString(m) }
func (*FaithData) ProtoMessage()               {}
func (*FaithData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *FaithData) GetFaithId() uint32 {
	if m != nil {
		return m.FaithId
	}
	return 0
}

func (m *FaithData) GetTotalOpenCount() uint32 {
	if m != nil {
		return m.TotalOpenCount
	}
	return 0
}

func (m *FaithData) GetConsumeCount() uint32 {
	if m != nil {
		return m.ConsumeCount
	}
	return 0
}

type FanInfo struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Val  uint32 `protobuf:"varint,2,opt,name=val" json:"val,omitempty"`
	Id   uint32 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
}

func (m *FanInfo) Reset()                    { *m = FanInfo{} }
func (m *FanInfo) String() string            { return proto.CompactTextString(m) }
func (*FanInfo) ProtoMessage()               {}
func (*FanInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *FanInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FanInfo) GetVal() uint32 {
	if m != nil {
		return m.Val
	}
	return 0
}

func (m *FanInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Friend struct {
	Base  *PlayerBaseView     `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	State *AccountActiveState `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
}

func (m *Friend) Reset()                    { *m = Friend{} }
func (m *Friend) String() string            { return proto.CompactTextString(m) }
func (*Friend) ProtoMessage()               {}
func (*Friend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *Friend) GetBase() *PlayerBaseView {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *Friend) GetState() *AccountActiveState {
	if m != nil {
		return m.State
	}
	return nil
}

type GameConfig struct {
	Category uint32        `protobuf:"varint,1,opt,name=category" json:"category,omitempty"`
	Mode     *GameMode     `protobuf:"bytes,2,opt,name=mode" json:"mode,omitempty"`
	Meta     *GameMetaData `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
}

func (m *GameConfig) Reset()                    { *m = GameConfig{} }
func (m *GameConfig) String() string            { return proto.CompactTextString(m) }
func (*GameConfig) ProtoMessage()               {}
func (*GameConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *GameConfig) GetCategory() uint32 {
	if m != nil {
		return m.Category
	}
	return 0
}

func (m *GameConfig) GetMode() *GameMode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *GameConfig) GetMeta() *GameMetaData {
	if m != nil {
		return m.Meta
	}
	return nil
}

type GameConnectInfo struct {
	ConnectToken string `protobuf:"bytes,2,opt,name=connect_token,json=connectToken" json:"connect_token,omitempty"`
	GameUuid     string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid" json:"game_uuid,omitempty"`
	Location     string `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
}

func (m *GameConnectInfo) Reset()                    { *m = GameConnectInfo{} }
func (m *GameConnectInfo) String() string            { return proto.CompactTextString(m) }
func (*GameConnectInfo) ProtoMessage()               {}
func (*GameConnectInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *GameConnectInfo) GetConnectToken() string {
	if m != nil {
		return m.ConnectToken
	}
	return ""
}

func (m *GameConnectInfo) GetGameUuid() string {
	if m != nil {
		return m.GameUuid
	}
	return ""
}

func (m *GameConnectInfo) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type GameDetailRecords struct {
	Records [][]byte `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (m *GameDetailRecords) Reset()                    { *m = GameDetailRecords{} }
func (m *GameDetailRecords) String() string            { return proto.CompactTextString(m) }
func (*GameDetailRecords) ProtoMessage()               {}
func (*GameDetailRecords) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *GameDetailRecords) GetRecords() [][]byte {
	if m != nil {
		return m.Records
	}
	return nil
}

type GameDetailRule struct {
	TimeFixed               uint32 `protobuf:"varint,1,opt,name=time_fixed,json=timeFixed" json:"time_fixed,omitempty"`
	TimeAdd                 uint32 `protobuf:"varint,2,opt,name=time_add,json=timeAdd" json:"time_add,omitempty"`
	DoraCount               uint32 `protobuf:"varint,3,opt,name=dora_count,json=doraCount" json:"dora_count,omitempty"`
	Shiduan                 uint32 `protobuf:"varint,4,opt,name=shiduan" json:"shiduan,omitempty"`
	InitPoint               uint32 `protobuf:"varint,5,opt,name=init_point,json=initPoint" json:"init_point,omitempty"`
	Fandian                 uint32 `protobuf:"varint,6,opt,name=fandian" json:"fandian,omitempty"`
	CanJifei                bool   `protobuf:"varint,7,opt,name=can_jifei,json=canJifei" json:"can_jifei,omitempty"`
	TianbianValue           uint32 `protobuf:"varint,8,opt,name=tianbian_value,json=tianbianValue" json:"tianbian_value,omitempty"`
	LiqibangValue           uint32 `protobuf:"varint,9,opt,name=liqibang_value,json=liqibangValue" json:"liqibang_value,omitempty"`
	ChangbangValue          uint32 `protobuf:"varint,10,opt,name=changbang_value,json=changbangValue" json:"changbang_value,omitempty"`
	NotingFafu_1            uint32 `protobuf:"varint,11,opt,name=noting_fafu_1,json=notingFafu1" json:"noting_fafu_1,omitempty"`
	NotingFafu_2            uint32 `protobuf:"varint,12,opt,name=noting_fafu_2,json=notingFafu2" json:"noting_fafu_2,omitempty"`
	NotingFafu_3            uint32 `protobuf:"varint,13,opt,name=noting_fafu_3,json=notingFafu3" json:"noting_fafu_3,omitempty"`
	HaveLiujumanguan        bool   `protobuf:"varint,14,opt,name=have_liujumanguan,json=haveLiujumanguan" json:"have_liujumanguan,omitempty"`
	HaveQieshangmanguan     bool   `protobuf:"varint,15,opt,name=have_qieshangmanguan,json=haveQieshangmanguan" json:"have_qieshangmanguan,omitempty"`
	HaveBiaoDora            bool   `protobuf:"varint,16,opt,name=have_biao_dora,json=haveBiaoDora" json:"have_biao_dora,omitempty"`
	HaveGangBiaoDora        bool   `protobuf:"varint,17,opt,name=have_gang_biao_dora,json=haveGangBiaoDora" json:"have_gang_biao_dora,omitempty"`
	MingDoraImmediatelyOpen bool   `protobuf:"varint,18,opt,name=ming_dora_immediately_open,json=mingDoraImmediatelyOpen" json:"ming_dora_immediately_open,omitempty"`
	HaveLiDora              bool   `protobuf:"varint,19,opt,name=have_li_dora,json=haveLiDora" json:"have_li_dora,omitempty"`
	HaveGangLiDora          bool   `protobuf:"varint,20,opt,name=have_gang_li_dora,json=haveGangLiDora" json:"have_gang_li_dora,omitempty"`
	HaveSifenglianda        bool   `protobuf:"varint,21,opt,name=have_sifenglianda,json=haveSifenglianda" json:"have_sifenglianda,omitempty"`
	HaveSigangsanle         bool   `protobuf:"varint,22,opt,name=have_sigangsanle,json=haveSigangsanle" json:"have_sigangsanle,omitempty"`
	HaveSijializhi          bool   `protobuf:"varint,23,opt,name=have_sijializhi,json=haveSijializhi" json:"have_sijializhi,omitempty"`
	HaveJiuzhongjiupai      bool   `protobuf:"varint,24,opt,name=have_jiuzhongjiupai,json=haveJiuzhongjiupai" json:"have_jiuzhongjiupai,omitempty"`
	HaveSanjiahele          bool   `protobuf:"varint,25,opt,name=have_sanjiahele,json=haveSanjiahele" json:"have_sanjiahele,omitempty"`
	HaveToutiao             bool   `protobuf:"varint,26,opt,name=have_toutiao,json=haveToutiao" json:"have_toutiao,omitempty"`
	HaveHelelianzhuang      bool   `protobuf:"varint,27,opt,name=have_helelianzhuang,json=haveHelelianzhuang" json:"have_helelianzhuang,omitempty"`
	HaveHelezhongju         bool   `protobuf:"varint,28,opt,name=have_helezhongju,json=haveHelezhongju" json:"have_helezhongju,omitempty"`
	HaveTingpailianzhuang   bool   `protobuf:"varint,29,opt,name=have_tingpailianzhuang,json=haveTingpailianzhuang" json:"have_tingpailianzhuang,omitempty"`
	HaveTingpaizhongju      bool   `protobuf:"varint,30,opt,name=have_tingpaizhongju,json=haveTingpaizhongju" json:"have_tingpaizhongju,omitempty"`
	HaveYifa                bool   `protobuf:"varint,31,opt,name=have_yifa,json=haveYifa" json:"have_yifa,omitempty"`
	HaveNanruxiru           bool   `protobuf:"varint,32,opt,name=have_nanruxiru,json=haveNanruxiru" json:"have_nanruxiru,omitempty"`
	Jingsuanyuandian        uint32 `protobuf:"varint,33,opt,name=jingsuanyuandian" json:"jingsuanyuandian,omitempty"`
	Shunweima_2             int32  `protobuf:"varint,34,opt,name=shunweima_2,json=shunweima2" json:"shunweima_2,omitempty"`
	Shunweima_3             int32  `protobuf:"varint,35,opt,name=shunweima_3,json=shunweima3" json:"shunweima_3,omitempty"`
	Shunweima_4             int32  `protobuf:"varint,36,opt,name=shunweima_4,json=shunweima4" json:"shunweima_4,omitempty"`
	Bianjietishi            bool   `protobuf:"varint,37,opt,name=bianjietishi" json:"bianjietishi,omitempty"`
	AiLevel                 uint32 `protobuf:"varint,38,opt,name=ai_level,json=aiLevel" json:"ai_level,omitempty"`
	HaveZimosun             bool   `protobuf:"varint,39,opt,name=have_zimosun,json=haveZimosun" json:"have_zimosun,omitempty"`
	DisableMultiYukaman     bool   `protobuf:"varint,40,opt,name=disable_multi_yukaman,json=disableMultiYukaman" json:"disable_multi_yukaman,omitempty"`
	Fanfu                   uint32 `protobuf:"varint,41,opt,name=fanfu" json:"fanfu,omitempty"`
	GuyiMode                uint32 `protobuf:"varint,42,opt,name=guyi_mode,json=guyiMode" json:"guyi_mode,omitempty"`
}

func (m *GameDetailRule) Reset()                    { *m = GameDetailRule{} }
func (m *GameDetailRule) String() string            { return proto.CompactTextString(m) }
func (*GameDetailRule) ProtoMessage()               {}
func (*GameDetailRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *GameDetailRule) GetTimeFixed() uint32 {
	if m != nil {
		return m.TimeFixed
	}
	return 0
}

func (m *GameDetailRule) GetTimeAdd() uint32 {
	if m != nil {
		return m.TimeAdd
	}
	return 0
}

func (m *GameDetailRule) GetDoraCount() uint32 {
	if m != nil {
		return m.DoraCount
	}
	return 0
}

func (m *GameDetailRule) GetShiduan() uint32 {
	if m != nil {
		return m.Shiduan
	}
	return 0
}

func (m *GameDetailRule) GetInitPoint() uint32 {
	if m != nil {
		return m.InitPoint
	}
	return 0
}

func (m *GameDetailRule) GetFandian() uint32 {
	if m != nil {
		return m.Fandian
	}
	return 0
}

func (m *GameDetailRule) GetCanJifei() bool {
	if m != nil {
		return m.CanJifei
	}
	return false
}

func (m *GameDetailRule) GetTianbianValue() uint32 {
	if m != nil {
		return m.TianbianValue
	}
	return 0
}

func (m *GameDetailRule) GetLiqibangValue() uint32 {
	if m != nil {
		return m.LiqibangValue
	}
	return 0
}

func (m *GameDetailRule) GetChangbangValue() uint32 {
	if m != nil {
		return m.ChangbangValue
	}
	return 0
}

func (m *GameDetailRule) GetNotingFafu_1() uint32 {
	if m != nil {
		return m.NotingFafu_1
	}
	return 0
}

func (m *GameDetailRule) GetNotingFafu_2() uint32 {
	if m != nil {
		return m.NotingFafu_2
	}
	return 0
}

func (m *GameDetailRule) GetNotingFafu_3() uint32 {
	if m != nil {
		return m.NotingFafu_3
	}
	return 0
}

func (m *GameDetailRule) GetHaveLiujumanguan() bool {
	if m != nil {
		return m.HaveLiujumanguan
	}
	return false
}

func (m *GameDetailRule) GetHaveQieshangmanguan() bool {
	if m != nil {
		return m.HaveQieshangmanguan
	}
	return false
}

func (m *GameDetailRule) GetHaveBiaoDora() bool {
	if m != nil {
		return m.HaveBiaoDora
	}
	return false
}

func (m *GameDetailRule) GetHaveGangBiaoDora() bool {
	if m != nil {
		return m.HaveGangBiaoDora
	}
	return false
}

func (m *GameDetailRule) GetMingDoraImmediatelyOpen() bool {
	if m != nil {
		return m.MingDoraImmediatelyOpen
	}
	return false
}

func (m *GameDetailRule) GetHaveLiDora() bool {
	if m != nil {
		return m.HaveLiDora
	}
	return false
}

func (m *GameDetailRule) GetHaveGangLiDora() bool {
	if m != nil {
		return m.HaveGangLiDora
	}
	return false
}

func (m *GameDetailRule) GetHaveSifenglianda() bool {
	if m != nil {
		return m.HaveSifenglianda
	}
	return false
}

func (m *GameDetailRule) GetHaveSigangsanle() bool {
	if m != nil {
		return m.HaveSigangsanle
	}
	return false
}

func (m *GameDetailRule) GetHaveSijializhi() bool {
	if m != nil {
		return m.HaveSijializhi
	}
	return false
}

func (m *GameDetailRule) GetHaveJiuzhongjiupai() bool {
	if m != nil {
		return m.HaveJiuzhongjiupai
	}
	return false
}

func (m *GameDetailRule) GetHaveSanjiahele() bool {
	if m != nil {
		return m.HaveSanjiahele
	}
	return false
}

func (m *GameDetailRule) GetHaveToutiao() bool {
	if m != nil {
		return m.HaveToutiao
	}
	return false
}

func (m *GameDetailRule) GetHaveHelelianzhuang() bool {
	if m != nil {
		return m.HaveHelelianzhuang
	}
	return false
}

func (m *GameDetailRule) GetHaveHelezhongju() bool {
	if m != nil {
		return m.HaveHelezhongju
	}
	return false
}

func (m *GameDetailRule) GetHaveTingpailianzhuang() bool {
	if m != nil {
		return m.HaveTingpailianzhuang
	}
	return false
}

func (m *GameDetailRule) GetHaveTingpaizhongju() bool {
	if m != nil {
		return m.HaveTingpaizhongju
	}
	return false
}

func (m *GameDetailRule) GetHaveYifa() bool {
	if m != nil {
		return m.HaveYifa
	}
	return false
}

func (m *GameDetailRule) GetHaveNanruxiru() bool {
	if m != nil {
		return m.HaveNanruxiru
	}
	return false
}

func (m *GameDetailRule) GetJingsuanyuandian() uint32 {
	if m != nil {
		return m.Jingsuanyuandian
	}
	return 0
}

func (m *GameDetailRule) GetShunweima_2() int32 {
	if m != nil {
		return m.Shunweima_2
	}
	return 0
}

func (m *GameDetailRule) GetShunweima_3() int32 {
	if m != nil {
		return m.Shunweima_3
	}
	return 0
}

func (m *GameDetailRule) GetShunweima_4() int32 {
	if m != nil {
		return m.Shunweima_4
	}
	return 0
}

func (m *GameDetailRule) GetBianjietishi() bool {
	if m != nil {
		return m.Bianjietishi
	}
	return false
}

func (m *GameDetailRule) GetAiLevel() uint32 {
	if m != nil {
		return m.AiLevel
	}
	return 0
}

func (m *GameDetailRule) GetHaveZimosun() bool {
	if m != nil {
		return m.HaveZimosun
	}
	return false
}

func (m *GameDetailRule) GetDisableMultiYukaman() bool {
	if m != nil {
		return m.DisableMultiYukaman
	}
	return false
}

func (m *GameDetailRule) GetFanfu() uint32 {
	if m != nil {
		return m.Fanfu
	}
	return 0
}

func (m *GameDetailRule) GetGuyiMode() uint32 {
	if m != nil {
		return m.GuyiMode
	}
	return 0
}

type GameEnd struct {
	Scores []int32 `protobuf:"varint,1,rep,packed,name=scores" json:"scores,omitempty"`
}

func (m *GameEnd) Reset()                    { *m = GameEnd{} }
func (m *GameEnd) String() string            { return proto.CompactTextString(m) }
func (*GameEnd) ProtoMessage()               {}
func (*GameEnd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *GameEnd) GetScores() []int32 {
	if m != nil {
		return m.Scores
	}
	return nil
}

type GameEndAction struct {
	State uint32 `protobuf:"varint,1,opt,name=state" json:"state,omitempty"`
}

func (m *GameEndAction) Reset()                    { *m = GameEndAction{} }
func (m *GameEndAction) String() string            { return proto.CompactTextString(m) }
func (*GameEndAction) ProtoMessage()               {}
func (*GameEndAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *GameEndAction) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

type GameEndResult struct {
	Players []*GameEndResult_PlayerItem `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
}

func (m *GameEndResult) Reset()                    { *m = GameEndResult{} }
func (m *GameEndResult) String() string            { return proto.CompactTextString(m) }
func (*GameEndResult) ProtoMessage()               {}
func (*GameEndResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *GameEndResult) GetPlayers() []*GameEndResult_PlayerItem {
	if m != nil {
		return m.Players
	}
	return nil
}

type GameEndResult_PlayerItem struct {
	Seat         uint32 `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	TotalPoint   int32  `protobuf:"varint,2,opt,name=total_point,json=totalPoint" json:"total_point,omitempty"`
	PartPoint_1  int32  `protobuf:"varint,3,opt,name=part_point_1,json=partPoint1" json:"part_point_1,omitempty"`
	PartPoint_2  int32  `protobuf:"varint,4,opt,name=part_point_2,json=partPoint2" json:"part_point_2,omitempty"`
	GradingScore int32  `protobuf:"varint,5,opt,name=grading_score,json=gradingScore" json:"grading_score,omitempty"`
	Gold         int32  `protobuf:"varint,6,opt,name=gold" json:"gold,omitempty"`
}

func (m *GameEndResult_PlayerItem) Reset()                    { *m = GameEndResult_PlayerItem{} }
func (m *GameEndResult_PlayerItem) String() string            { return proto.CompactTextString(m) }
func (*GameEndResult_PlayerItem) ProtoMessage()               {}
func (*GameEndResult_PlayerItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64, 0} }

func (m *GameEndResult_PlayerItem) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *GameEndResult_PlayerItem) GetTotalPoint() int32 {
	if m != nil {
		return m.TotalPoint
	}
	return 0
}

func (m *GameEndResult_PlayerItem) GetPartPoint_1() int32 {
	if m != nil {
		return m.PartPoint_1
	}
	return 0
}

func (m *GameEndResult_PlayerItem) GetPartPoint_2() int32 {
	if m != nil {
		return m.PartPoint_2
	}
	return 0
}

func (m *GameEndResult_PlayerItem) GetGradingScore() int32 {
	if m != nil {
		return m.GradingScore
	}
	return 0
}

func (m *GameEndResult_PlayerItem) GetGold() int32 {
	if m != nil {
		return m.Gold
	}
	return 0
}

type GameFinalSnapshot struct {
	Uuid           string                            `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	State          uint32                            `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	Category       uint32                            `protobuf:"varint,3,opt,name=category" json:"category,omitempty"`
	Mode           *GameMode                         `protobuf:"bytes,4,opt,name=mode" json:"mode,omitempty"`
	Meta           *GameMetaData                     `protobuf:"bytes,5,opt,name=meta" json:"meta,omitempty"`
	CalculateParam *GameFinalSnapshot_CalculateParam `protobuf:"bytes,6,opt,name=calculate_param,json=calculateParam" json:"calculate_param,omitempty"`
	CreateTime     uint32                            `protobuf:"varint,7,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StartTime      uint32                            `protobuf:"varint,8,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	FinishTime     uint32                            `protobuf:"varint,9,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	Seats          []*GameFinalSnapshot_GameSeat     `protobuf:"bytes,10,rep,name=seats" json:"seats,omitempty"`
	Rounds         []*GameRoundSnapshot              `protobuf:"bytes,11,rep,name=rounds" json:"rounds,omitempty"`
	AccountViews   []*PlayerGameView                 `protobuf:"bytes,12,rep,name=account_views,json=accountViews" json:"account_views,omitempty"`
	FinalPlayers   []*GameFinalSnapshot_FinalPlayer  `protobuf:"bytes,13,rep,name=final_players,json=finalPlayers" json:"final_players,omitempty"`
}

func (m *GameFinalSnapshot) Reset()                    { *m = GameFinalSnapshot{} }
func (m *GameFinalSnapshot) String() string            { return proto.CompactTextString(m) }
func (*GameFinalSnapshot) ProtoMessage()               {}
func (*GameFinalSnapshot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *GameFinalSnapshot) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GameFinalSnapshot) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *GameFinalSnapshot) GetCategory() uint32 {
	if m != nil {
		return m.Category
	}
	return 0
}

func (m *GameFinalSnapshot) GetMode() *GameMode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *GameFinalSnapshot) GetMeta() *GameMetaData {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *GameFinalSnapshot) GetCalculateParam() *GameFinalSnapshot_CalculateParam {
	if m != nil {
		return m.CalculateParam
	}
	return nil
}

func (m *GameFinalSnapshot) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *GameFinalSnapshot) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GameFinalSnapshot) GetFinishTime() uint32 {
	if m != nil {
		return m.FinishTime
	}
	return 0
}

func (m *GameFinalSnapshot) GetSeats() []*GameFinalSnapshot_GameSeat {
	if m != nil {
		return m.Seats
	}
	return nil
}

func (m *GameFinalSnapshot) GetRounds() []*GameRoundSnapshot {
	if m != nil {
		return m.Rounds
	}
	return nil
}

func (m *GameFinalSnapshot) GetAccountViews() []*PlayerGameView {
	if m != nil {
		return m.AccountViews
	}
	return nil
}

func (m *GameFinalSnapshot) GetFinalPlayers() []*GameFinalSnapshot_FinalPlayer {
	if m != nil {
		return m.FinalPlayers
	}
	return nil
}

type GameFinalSnapshot_CalculateParam struct {
	InitPoint        uint32  `protobuf:"varint,1,opt,name=init_point,json=initPoint" json:"init_point,omitempty"`
	Jingsuanyuandian uint32  `protobuf:"varint,2,opt,name=jingsuanyuandian" json:"jingsuanyuandian,omitempty"`
	RankPoints       []int32 `protobuf:"varint,3,rep,packed,name=rank_points,json=rankPoints" json:"rank_points,omitempty"`
}

func (m *GameFinalSnapshot_CalculateParam) Reset()         { *m = GameFinalSnapshot_CalculateParam{} }
func (m *GameFinalSnapshot_CalculateParam) String() string { return proto.CompactTextString(m) }
func (*GameFinalSnapshot_CalculateParam) ProtoMessage()    {}
func (*GameFinalSnapshot_CalculateParam) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{65, 0}
}

func (m *GameFinalSnapshot_CalculateParam) GetInitPoint() uint32 {
	if m != nil {
		return m.InitPoint
	}
	return 0
}

func (m *GameFinalSnapshot_CalculateParam) GetJingsuanyuandian() uint32 {
	if m != nil {
		return m.Jingsuanyuandian
	}
	return 0
}

func (m *GameFinalSnapshot_CalculateParam) GetRankPoints() []int32 {
	if m != nil {
		return m.RankPoints
	}
	return nil
}

type GameFinalSnapshot_FinalPlayer struct {
	Seat         uint32 `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	TotalPoint   int32  `protobuf:"varint,2,opt,name=total_point,json=totalPoint" json:"total_point,omitempty"`
	PartPoint_1  int32  `protobuf:"varint,3,opt,name=part_point_1,json=partPoint1" json:"part_point_1,omitempty"`
	PartPoint_2  int32  `protobuf:"varint,4,opt,name=part_point_2,json=partPoint2" json:"part_point_2,omitempty"`
	GradingScore int32  `protobuf:"varint,5,opt,name=grading_score,json=gradingScore" json:"grading_score,omitempty"`
	Gold         int32  `protobuf:"varint,6,opt,name=gold" json:"gold,omitempty"`
}

func (m *GameFinalSnapshot_FinalPlayer) Reset()         { *m = GameFinalSnapshot_FinalPlayer{} }
func (m *GameFinalSnapshot_FinalPlayer) String() string { return proto.CompactTextString(m) }
func (*GameFinalSnapshot_FinalPlayer) ProtoMessage()    {}
func (*GameFinalSnapshot_FinalPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{65, 1}
}

func (m *GameFinalSnapshot_FinalPlayer) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *GameFinalSnapshot_FinalPlayer) GetTotalPoint() int32 {
	if m != nil {
		return m.TotalPoint
	}
	return 0
}

func (m *GameFinalSnapshot_FinalPlayer) GetPartPoint_1() int32 {
	if m != nil {
		return m.PartPoint_1
	}
	return 0
}

func (m *GameFinalSnapshot_FinalPlayer) GetPartPoint_2() int32 {
	if m != nil {
		return m.PartPoint_2
	}
	return 0
}

func (m *GameFinalSnapshot_FinalPlayer) GetGradingScore() int32 {
	if m != nil {
		return m.GradingScore
	}
	return 0
}

func (m *GameFinalSnapshot_FinalPlayer) GetGold() int32 {
	if m != nil {
		return m.Gold
	}
	return 0
}

type GameFinalSnapshot_GameSeat struct {
	Type           uint32           `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	AccountId      uint32           `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	NotifyEndpoint *NetworkEndpoint `protobuf:"bytes,3,opt,name=notify_endpoint,json=notifyEndpoint" json:"notify_endpoint,omitempty"`
	ClientAddress  string           `protobuf:"bytes,4,opt,name=client_address,json=clientAddress" json:"client_address,omitempty"`
	IsConnected    bool             `protobuf:"varint,5,opt,name=is_connected,json=isConnected" json:"is_connected,omitempty"`
}

func (m *GameFinalSnapshot_GameSeat) Reset()                    { *m = GameFinalSnapshot_GameSeat{} }
func (m *GameFinalSnapshot_GameSeat) String() string            { return proto.CompactTextString(m) }
func (*GameFinalSnapshot_GameSeat) ProtoMessage()               {}
func (*GameFinalSnapshot_GameSeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65, 2} }

func (m *GameFinalSnapshot_GameSeat) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GameFinalSnapshot_GameSeat) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *GameFinalSnapshot_GameSeat) GetNotifyEndpoint() *NetworkEndpoint {
	if m != nil {
		return m.NotifyEndpoint
	}
	return nil
}

func (m *GameFinalSnapshot_GameSeat) GetClientAddress() string {
	if m != nil {
		return m.ClientAddress
	}
	return ""
}

func (m *GameFinalSnapshot_GameSeat) GetIsConnected() bool {
	if m != nil {
		return m.IsConnected
	}
	return false
}

type GameLiveHead struct {
	Uuid       string            `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	StartTime  uint32            `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	GameConfig *GameConfig       `protobuf:"bytes,3,opt,name=game_config,json=gameConfig" json:"game_config,omitempty"`
	Players    []*PlayerGameView `protobuf:"bytes,4,rep,name=players" json:"players,omitempty"`
	SeatList   []uint32          `protobuf:"varint,5,rep,packed,name=seat_list,json=seatList" json:"seat_list,omitempty"`
}

func (m *GameLiveHead) Reset()                    { *m = GameLiveHead{} }
func (m *GameLiveHead) String() string            { return proto.CompactTextString(m) }
func (*GameLiveHead) ProtoMessage()               {}
func (*GameLiveHead) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *GameLiveHead) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GameLiveHead) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GameLiveHead) GetGameConfig() *GameConfig {
	if m != nil {
		return m.GameConfig
	}
	return nil
}

func (m *GameLiveHead) GetPlayers() []*PlayerGameView {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *GameLiveHead) GetSeatList() []uint32 {
	if m != nil {
		return m.SeatList
	}
	return nil
}

type GameLiveSegment struct {
	Actions []*GameLiveUnit `protobuf:"bytes,1,rep,name=actions" json:"actions,omitempty"`
}

func (m *GameLiveSegment) Reset()                    { *m = GameLiveSegment{} }
func (m *GameLiveSegment) String() string            { return proto.CompactTextString(m) }
func (*GameLiveSegment) ProtoMessage()               {}
func (*GameLiveSegment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *GameLiveSegment) GetActions() []*GameLiveUnit {
	if m != nil {
		return m.Actions
	}
	return nil
}

type GameLiveSegmentUri struct {
	SegmentId  uint32 `protobuf:"varint,1,opt,name=segment_id,json=segmentId" json:"segment_id,omitempty"`
	SegmentUri string `protobuf:"bytes,2,opt,name=segment_uri,json=segmentUri" json:"segment_uri,omitempty"`
}

func (m *GameLiveSegmentUri) Reset()                    { *m = GameLiveSegmentUri{} }
func (m *GameLiveSegmentUri) String() string            { return proto.CompactTextString(m) }
func (*GameLiveSegmentUri) ProtoMessage()               {}
func (*GameLiveSegmentUri) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *GameLiveSegmentUri) GetSegmentId() uint32 {
	if m != nil {
		return m.SegmentId
	}
	return 0
}

func (m *GameLiveSegmentUri) GetSegmentUri() string {
	if m != nil {
		return m.SegmentUri
	}
	return ""
}

type GameLiveUnit struct {
	Timestamp      uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	ActionCategory uint32 `protobuf:"varint,2,opt,name=action_category,json=actionCategory" json:"action_category,omitempty"`
	ActionData     []byte `protobuf:"bytes,3,opt,name=action_data,json=actionData,proto3" json:"action_data,omitempty"`
}

func (m *GameLiveUnit) Reset()                    { *m = GameLiveUnit{} }
func (m *GameLiveUnit) String() string            { return proto.CompactTextString(m) }
func (*GameLiveUnit) ProtoMessage()               {}
func (*GameLiveUnit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *GameLiveUnit) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GameLiveUnit) GetActionCategory() uint32 {
	if m != nil {
		return m.ActionCategory
	}
	return 0
}

func (m *GameLiveUnit) GetActionData() []byte {
	if m != nil {
		return m.ActionData
	}
	return nil
}

type GameMetaData struct {
	RoomId     uint32 `protobuf:"varint,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	ModeId     uint32 `protobuf:"varint,2,opt,name=mode_id,json=modeId" json:"mode_id,omitempty"`
	ContestUid uint32 `protobuf:"varint,3,opt,name=contest_uid,json=contestUid" json:"contest_uid,omitempty"`
}

func (m *GameMetaData) Reset()                    { *m = GameMetaData{} }
func (m *GameMetaData) String() string            { return proto.CompactTextString(m) }
func (*GameMetaData) ProtoMessage()               {}
func (*GameMetaData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *GameMetaData) GetRoomId() uint32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *GameMetaData) GetModeId() uint32 {
	if m != nil {
		return m.ModeId
	}
	return 0
}

func (m *GameMetaData) GetContestUid() uint32 {
	if m != nil {
		return m.ContestUid
	}
	return 0
}

type GameMode struct {
	Mode               uint32                     `protobuf:"varint,1,opt,name=mode" json:"mode,omitempty"`
	Ai                 bool                       `protobuf:"varint,4,opt,name=ai" json:"ai,omitempty"`
	Extendinfo         string                     `protobuf:"bytes,5,opt,name=extendinfo" json:"extendinfo,omitempty"`
	DetailRule         *GameDetailRule            `protobuf:"bytes,6,opt,name=detail_rule,json=detailRule" json:"detail_rule,omitempty"`
	TestingEnvironment *GameTestingEnvironmentSet `protobuf:"bytes,7,opt,name=testing_environment,json=testingEnvironment" json:"testing_environment,omitempty"`
}

func (m *GameMode) Reset()                    { *m = GameMode{} }
func (m *GameMode) String() string            { return proto.CompactTextString(m) }
func (*GameMode) ProtoMessage()               {}
func (*GameMode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *GameMode) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *GameMode) GetAi() bool {
	if m != nil {
		return m.Ai
	}
	return false
}

func (m *GameMode) GetExtendinfo() string {
	if m != nil {
		return m.Extendinfo
	}
	return ""
}

func (m *GameMode) GetDetailRule() *GameDetailRule {
	if m != nil {
		return m.DetailRule
	}
	return nil
}

func (m *GameMode) GetTestingEnvironment() *GameTestingEnvironmentSet {
	if m != nil {
		return m.TestingEnvironment
	}
	return nil
}

type GameNewRoundState struct {
	SeatStates []uint32 `protobuf:"varint,1,rep,packed,name=seat_states,json=seatStates" json:"seat_states,omitempty"`
}

func (m *GameNewRoundState) Reset()                    { *m = GameNewRoundState{} }
func (m *GameNewRoundState) String() string            { return proto.CompactTextString(m) }
func (*GameNewRoundState) ProtoMessage()               {}
func (*GameNewRoundState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *GameNewRoundState) GetSeatStates() []uint32 {
	if m != nil {
		return m.SeatStates
	}
	return nil
}

type GameNoopAction struct {
}

func (m *GameNoopAction) Reset()                    { *m = GameNoopAction{} }
func (m *GameNoopAction) String() string            { return proto.CompactTextString(m) }
func (*GameNoopAction) ProtoMessage()               {}
func (*GameNoopAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

type GameRestore struct {
	Snapshot          *GameSnapshot      `protobuf:"bytes,1,opt,name=snapshot" json:"snapshot,omitempty"`
	Actions           []*ActionPrototype `protobuf:"bytes,2,rep,name=actions" json:"actions,omitempty"`
	PassedWaitingTime uint32             `protobuf:"varint,3,opt,name=passed_waiting_time,json=passedWaitingTime" json:"passed_waiting_time,omitempty"`
	GameState         uint32             `protobuf:"varint,4,opt,name=game_state,json=gameState" json:"game_state,omitempty"`
	StartTime         uint32             `protobuf:"varint,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	LastPauseTimeMs   uint32             `protobuf:"varint,6,opt,name=last_pause_time_ms,json=lastPauseTimeMs" json:"last_pause_time_ms,omitempty"`
}

func (m *GameRestore) Reset()                    { *m = GameRestore{} }
func (m *GameRestore) String() string            { return proto.CompactTextString(m) }
func (*GameRestore) ProtoMessage()               {}
func (*GameRestore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *GameRestore) GetSnapshot() *GameSnapshot {
	if m != nil {
		return m.Snapshot
	}
	return nil
}

func (m *GameRestore) GetActions() []*ActionPrototype {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *GameRestore) GetPassedWaitingTime() uint32 {
	if m != nil {
		return m.PassedWaitingTime
	}
	return 0
}

func (m *GameRestore) GetGameState() uint32 {
	if m != nil {
		return m.GameState
	}
	return 0
}

func (m *GameRestore) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GameRestore) GetLastPauseTimeMs() uint32 {
	if m != nil {
		return m.LastPauseTimeMs
	}
	return 0
}

type GameRoundHuData struct {
	Hupai          *GameRoundHuData_HuPai `protobuf:"bytes,1,opt,name=hupai" json:"hupai,omitempty"`
	Fans           []*GameRoundHuData_Fan `protobuf:"bytes,2,rep,name=fans" json:"fans,omitempty"`
	Score          uint32                 `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	Xun            uint32                 `protobuf:"varint,4,opt,name=xun" json:"xun,omitempty"`
	TitleId        uint32                 `protobuf:"varint,5,opt,name=title_id,json=titleId" json:"title_id,omitempty"`
	FanSum         uint32                 `protobuf:"varint,6,opt,name=fan_sum,json=fanSum" json:"fan_sum,omitempty"`
	FuSum          uint32                 `protobuf:"varint,7,opt,name=fu_sum,json=fuSum" json:"fu_sum,omitempty"`
	YakumanCount   uint32                 `protobuf:"varint,8,opt,name=yakuman_count,json=yakumanCount" json:"yakuman_count,omitempty"`
	BiaoDoraCount  uint32                 `protobuf:"varint,9,opt,name=biao_dora_count,json=biaoDoraCount" json:"biao_dora_count,omitempty"`
	RedDoraCount   uint32                 `protobuf:"varint,10,opt,name=red_dora_count,json=redDoraCount" json:"red_dora_count,omitempty"`
	LiDoraCount    uint32                 `protobuf:"varint,11,opt,name=li_dora_count,json=liDoraCount" json:"li_dora_count,omitempty"`
	BabeiCount     uint32                 `protobuf:"varint,12,opt,name=babei_count,json=babeiCount" json:"babei_count,omitempty"`
	XuanShangCount uint32                 `protobuf:"varint,13,opt,name=xuan_shang_count,json=xuanShangCount" json:"xuan_shang_count,omitempty"`
}

func (m *GameRoundHuData) Reset()                    { *m = GameRoundHuData{} }
func (m *GameRoundHuData) String() string            { return proto.CompactTextString(m) }
func (*GameRoundHuData) ProtoMessage()               {}
func (*GameRoundHuData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *GameRoundHuData) GetHupai() *GameRoundHuData_HuPai {
	if m != nil {
		return m.Hupai
	}
	return nil
}

func (m *GameRoundHuData) GetFans() []*GameRoundHuData_Fan {
	if m != nil {
		return m.Fans
	}
	return nil
}

func (m *GameRoundHuData) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *GameRoundHuData) GetXun() uint32 {
	if m != nil {
		return m.Xun
	}
	return 0
}

func (m *GameRoundHuData) GetTitleId() uint32 {
	if m != nil {
		return m.TitleId
	}
	return 0
}

func (m *GameRoundHuData) GetFanSum() uint32 {
	if m != nil {
		return m.FanSum
	}
	return 0
}

func (m *GameRoundHuData) GetFuSum() uint32 {
	if m != nil {
		return m.FuSum
	}
	return 0
}

func (m *GameRoundHuData) GetYakumanCount() uint32 {
	if m != nil {
		return m.YakumanCount
	}
	return 0
}

func (m *GameRoundHuData) GetBiaoDoraCount() uint32 {
	if m != nil {
		return m.BiaoDoraCount
	}
	return 0
}

func (m *GameRoundHuData) GetRedDoraCount() uint32 {
	if m != nil {
		return m.RedDoraCount
	}
	return 0
}

func (m *GameRoundHuData) GetLiDoraCount() uint32 {
	if m != nil {
		return m.LiDoraCount
	}
	return 0
}

func (m *GameRoundHuData) GetBabeiCount() uint32 {
	if m != nil {
		return m.BabeiCount
	}
	return 0
}

func (m *GameRoundHuData) GetXuanShangCount() uint32 {
	if m != nil {
		return m.XuanShangCount
	}
	return 0
}

type GameRoundHuData_Fan struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Fan   uint32 `protobuf:"varint,3,opt,name=fan" json:"fan,omitempty"`
}

func (m *GameRoundHuData_Fan) Reset()                    { *m = GameRoundHuData_Fan{} }
func (m *GameRoundHuData_Fan) String() string            { return proto.CompactTextString(m) }
func (*GameRoundHuData_Fan) ProtoMessage()               {}
func (*GameRoundHuData_Fan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75, 0} }

func (m *GameRoundHuData_Fan) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GameRoundHuData_Fan) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GameRoundHuData_Fan) GetFan() uint32 {
	if m != nil {
		return m.Fan
	}
	return 0
}

type GameRoundHuData_HuPai struct {
	Tile string `protobuf:"bytes,1,opt,name=tile" json:"tile,omitempty"`
	Seat uint32 `protobuf:"varint,2,opt,name=seat" json:"seat,omitempty"`
	Liqi uint32 `protobuf:"varint,3,opt,name=liqi" json:"liqi,omitempty"`
}

func (m *GameRoundHuData_HuPai) Reset()                    { *m = GameRoundHuData_HuPai{} }
func (m *GameRoundHuData_HuPai) String() string            { return proto.CompactTextString(m) }
func (*GameRoundHuData_HuPai) ProtoMessage()               {}
func (*GameRoundHuData_HuPai) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75, 1} }

func (m *GameRoundHuData_HuPai) GetTile() string {
	if m != nil {
		return m.Tile
	}
	return ""
}

func (m *GameRoundHuData_HuPai) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *GameRoundHuData_HuPai) GetLiqi() uint32 {
	if m != nil {
		return m.Liqi
	}
	return 0
}

type GameRoundPlayer struct {
	Score  int32                  `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	Rank   uint32                 `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	Result *GameRoundPlayerResult `protobuf:"bytes,3,opt,name=result" json:"result,omitempty"`
}

func (m *GameRoundPlayer) Reset()                    { *m = GameRoundPlayer{} }
func (m *GameRoundPlayer) String() string            { return proto.CompactTextString(m) }
func (*GameRoundPlayer) ProtoMessage()               {}
func (*GameRoundPlayer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *GameRoundPlayer) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *GameRoundPlayer) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *GameRoundPlayer) GetResult() *GameRoundPlayerResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type GameRoundPlayerResult struct {
	Type           uint32           `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Hands          []string         `protobuf:"bytes,2,rep,name=hands" json:"hands,omitempty"`
	Ming           []string         `protobuf:"bytes,3,rep,name=ming" json:"ming,omitempty"`
	LiqiType       uint32           `protobuf:"varint,4,opt,name=liqi_type,json=liqiType" json:"liqi_type,omitempty"`
	IsFulu         bool             `protobuf:"varint,5,opt,name=is_fulu,json=isFulu" json:"is_fulu,omitempty"`
	IsLiujumanguan bool             `protobuf:"varint,6,opt,name=is_liujumanguan,json=isLiujumanguan" json:"is_liujumanguan,omitempty"`
	LianZhuang     uint32           `protobuf:"varint,7,opt,name=lian_zhuang,json=lianZhuang" json:"lian_zhuang,omitempty"`
	Hu             *GameRoundHuData `protobuf:"bytes,8,opt,name=hu" json:"hu,omitempty"`
}

func (m *GameRoundPlayerResult) Reset()                    { *m = GameRoundPlayerResult{} }
func (m *GameRoundPlayerResult) String() string            { return proto.CompactTextString(m) }
func (*GameRoundPlayerResult) ProtoMessage()               {}
func (*GameRoundPlayerResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *GameRoundPlayerResult) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GameRoundPlayerResult) GetHands() []string {
	if m != nil {
		return m.Hands
	}
	return nil
}

func (m *GameRoundPlayerResult) GetMing() []string {
	if m != nil {
		return m.Ming
	}
	return nil
}

func (m *GameRoundPlayerResult) GetLiqiType() uint32 {
	if m != nil {
		return m.LiqiType
	}
	return 0
}

func (m *GameRoundPlayerResult) GetIsFulu() bool {
	if m != nil {
		return m.IsFulu
	}
	return false
}

func (m *GameRoundPlayerResult) GetIsLiujumanguan() bool {
	if m != nil {
		return m.IsLiujumanguan
	}
	return false
}

func (m *GameRoundPlayerResult) GetLianZhuang() uint32 {
	if m != nil {
		return m.LianZhuang
	}
	return 0
}

func (m *GameRoundPlayerResult) GetHu() *GameRoundHuData {
	if m != nil {
		return m.Hu
	}
	return nil
}

type GameRoundSnapshot struct {
	Ju      uint32             `protobuf:"varint,1,opt,name=ju" json:"ju,omitempty"`
	Ben     uint32             `protobuf:"varint,2,opt,name=ben" json:"ben,omitempty"`
	Players []*GameRoundPlayer `protobuf:"bytes,3,rep,name=players" json:"players,omitempty"`
}

func (m *GameRoundSnapshot) Reset()                    { *m = GameRoundSnapshot{} }
func (m *GameRoundSnapshot) String() string            { return proto.CompactTextString(m) }
func (*GameRoundSnapshot) ProtoMessage()               {}
func (*GameRoundSnapshot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *GameRoundSnapshot) GetJu() uint32 {
	if m != nil {
		return m.Ju
	}
	return 0
}

func (m *GameRoundSnapshot) GetBen() uint32 {
	if m != nil {
		return m.Ben
	}
	return 0
}

func (m *GameRoundSnapshot) GetPlayers() []*GameRoundPlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

type GameSnapshot struct {
	Chang         uint32                         `protobuf:"varint,1,opt,name=chang" json:"chang,omitempty"`
	Ju            uint32                         `protobuf:"varint,2,opt,name=ju" json:"ju,omitempty"`
	Ben           uint32                         `protobuf:"varint,3,opt,name=ben" json:"ben,omitempty"`
	IndexPlayer   uint32                         `protobuf:"varint,4,opt,name=index_player,json=indexPlayer" json:"index_player,omitempty"`
	LeftTileCount uint32                         `protobuf:"varint,5,opt,name=left_tile_count,json=leftTileCount" json:"left_tile_count,omitempty"`
	Hands         []string                       `protobuf:"bytes,6,rep,name=hands" json:"hands,omitempty"`
	Doras         []string                       `protobuf:"bytes,7,rep,name=doras" json:"doras,omitempty"`
	Liqibang      uint32                         `protobuf:"varint,8,opt,name=liqibang" json:"liqibang,omitempty"`
	Players       []*GameSnapshot_PlayerSnapshot `protobuf:"bytes,9,rep,name=players" json:"players,omitempty"`
	Zhenting      bool                           `protobuf:"varint,10,opt,name=zhenting" json:"zhenting,omitempty"`
}

func (m *GameSnapshot) Reset()                    { *m = GameSnapshot{} }
func (m *GameSnapshot) String() string            { return proto.CompactTextString(m) }
func (*GameSnapshot) ProtoMessage()               {}
func (*GameSnapshot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *GameSnapshot) GetChang() uint32 {
	if m != nil {
		return m.Chang
	}
	return 0
}

func (m *GameSnapshot) GetJu() uint32 {
	if m != nil {
		return m.Ju
	}
	return 0
}

func (m *GameSnapshot) GetBen() uint32 {
	if m != nil {
		return m.Ben
	}
	return 0
}

func (m *GameSnapshot) GetIndexPlayer() uint32 {
	if m != nil {
		return m.IndexPlayer
	}
	return 0
}

func (m *GameSnapshot) GetLeftTileCount() uint32 {
	if m != nil {
		return m.LeftTileCount
	}
	return 0
}

func (m *GameSnapshot) GetHands() []string {
	if m != nil {
		return m.Hands
	}
	return nil
}

func (m *GameSnapshot) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

func (m *GameSnapshot) GetLiqibang() uint32 {
	if m != nil {
		return m.Liqibang
	}
	return 0
}

func (m *GameSnapshot) GetPlayers() []*GameSnapshot_PlayerSnapshot {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *GameSnapshot) GetZhenting() bool {
	if m != nil {
		return m.Zhenting
	}
	return false
}

type GameSnapshot_PlayerSnapshot struct {
	Score        int32                               `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	Liqiposition int32                               `protobuf:"varint,2,opt,name=liqiposition" json:"liqiposition,omitempty"`
	Tilenum      uint32                              `protobuf:"varint,3,opt,name=tilenum" json:"tilenum,omitempty"`
	Qipais       []string                            `protobuf:"bytes,4,rep,name=qipais" json:"qipais,omitempty"`
	Mings        []*GameSnapshot_PlayerSnapshot_Fulu `protobuf:"bytes,5,rep,name=mings" json:"mings,omitempty"`
}

func (m *GameSnapshot_PlayerSnapshot) Reset()                    { *m = GameSnapshot_PlayerSnapshot{} }
func (m *GameSnapshot_PlayerSnapshot) String() string            { return proto.CompactTextString(m) }
func (*GameSnapshot_PlayerSnapshot) ProtoMessage()               {}
func (*GameSnapshot_PlayerSnapshot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79, 0} }

func (m *GameSnapshot_PlayerSnapshot) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *GameSnapshot_PlayerSnapshot) GetLiqiposition() int32 {
	if m != nil {
		return m.Liqiposition
	}
	return 0
}

func (m *GameSnapshot_PlayerSnapshot) GetTilenum() uint32 {
	if m != nil {
		return m.Tilenum
	}
	return 0
}

func (m *GameSnapshot_PlayerSnapshot) GetQipais() []string {
	if m != nil {
		return m.Qipais
	}
	return nil
}

func (m *GameSnapshot_PlayerSnapshot) GetMings() []*GameSnapshot_PlayerSnapshot_Fulu {
	if m != nil {
		return m.Mings
	}
	return nil
}

type GameSnapshot_PlayerSnapshot_Fulu struct {
	Type uint32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Tile []string `protobuf:"bytes,2,rep,name=tile" json:"tile,omitempty"`
	From []uint32 `protobuf:"varint,3,rep,packed,name=from" json:"from,omitempty"`
}

func (m *GameSnapshot_PlayerSnapshot_Fulu) Reset()         { *m = GameSnapshot_PlayerSnapshot_Fulu{} }
func (m *GameSnapshot_PlayerSnapshot_Fulu) String() string { return proto.CompactTextString(m) }
func (*GameSnapshot_PlayerSnapshot_Fulu) ProtoMessage()    {}
func (*GameSnapshot_PlayerSnapshot_Fulu) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{79, 0, 0}
}

func (m *GameSnapshot_PlayerSnapshot_Fulu) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GameSnapshot_PlayerSnapshot_Fulu) GetTile() []string {
	if m != nil {
		return m.Tile
	}
	return nil
}

func (m *GameSnapshot_PlayerSnapshot_Fulu) GetFrom() []uint32 {
	if m != nil {
		return m.From
	}
	return nil
}

type GameTestingEnvironmentSet struct {
	Paixing   uint32 `protobuf:"varint,1,opt,name=paixing" json:"paixing,omitempty"`
	LeftCount uint32 `protobuf:"varint,2,opt,name=left_count,json=leftCount" json:"left_count,omitempty"`
}

func (m *GameTestingEnvironmentSet) Reset()                    { *m = GameTestingEnvironmentSet{} }
func (m *GameTestingEnvironmentSet) String() string            { return proto.CompactTextString(m) }
func (*GameTestingEnvironmentSet) ProtoMessage()               {}
func (*GameTestingEnvironmentSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *GameTestingEnvironmentSet) GetPaixing() uint32 {
	if m != nil {
		return m.Paixing
	}
	return 0
}

func (m *GameTestingEnvironmentSet) GetLeftCount() uint32 {
	if m != nil {
		return m.LeftCount
	}
	return 0
}

type HuleInfo struct {
	Hand          []string   `protobuf:"bytes,1,rep,name=hand" json:"hand,omitempty"`
	Ming          []string   `protobuf:"bytes,2,rep,name=ming" json:"ming,omitempty"`
	HuTile        string     `protobuf:"bytes,3,opt,name=hu_tile,json=huTile" json:"hu_tile,omitempty"`
	Seat          uint32     `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	Zimo          bool       `protobuf:"varint,5,opt,name=zimo" json:"zimo,omitempty"`
	Qinjia        bool       `protobuf:"varint,6,opt,name=qinjia" json:"qinjia,omitempty"`
	Liqi          bool       `protobuf:"varint,7,opt,name=liqi" json:"liqi,omitempty"`
	Doras         []string   `protobuf:"bytes,8,rep,name=doras" json:"doras,omitempty"`
	LiDoras       []string   `protobuf:"bytes,9,rep,name=li_doras,json=liDoras" json:"li_doras,omitempty"`
	Yiman         bool       `protobuf:"varint,10,opt,name=yiman" json:"yiman,omitempty"`
	Count         uint32     `protobuf:"varint,11,opt,name=count" json:"count,omitempty"`
	Fans          []*FanInfo `protobuf:"bytes,12,rep,name=fans" json:"fans,omitempty"`
	Fu            uint32     `protobuf:"varint,13,opt,name=fu" json:"fu,omitempty"`
	Title         string     `protobuf:"bytes,14,opt,name=title" json:"title,omitempty"`
	PointRong     uint32     `protobuf:"varint,15,opt,name=point_rong,json=pointRong" json:"point_rong,omitempty"`
	PointZimoQin  uint32     `protobuf:"varint,16,opt,name=point_zimo_qin,json=pointZimoQin" json:"point_zimo_qin,omitempty"`
	PointZimoXian uint32     `protobuf:"varint,17,opt,name=point_zimo_xian,json=pointZimoXian" json:"point_zimo_xian,omitempty"`
	TitleId       uint32     `protobuf:"varint,18,opt,name=title_id,json=titleId" json:"title_id,omitempty"`
	PointSum      uint32     `protobuf:"varint,19,opt,name=point_sum,json=pointSum" json:"point_sum,omitempty"`
}

func (m *HuleInfo) Reset()                    { *m = HuleInfo{} }
func (m *HuleInfo) String() string            { return proto.CompactTextString(m) }
func (*HuleInfo) ProtoMessage()               {}
func (*HuleInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *HuleInfo) GetHand() []string {
	if m != nil {
		return m.Hand
	}
	return nil
}

func (m *HuleInfo) GetMing() []string {
	if m != nil {
		return m.Ming
	}
	return nil
}

func (m *HuleInfo) GetHuTile() string {
	if m != nil {
		return m.HuTile
	}
	return ""
}

func (m *HuleInfo) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *HuleInfo) GetZimo() bool {
	if m != nil {
		return m.Zimo
	}
	return false
}

func (m *HuleInfo) GetQinjia() bool {
	if m != nil {
		return m.Qinjia
	}
	return false
}

func (m *HuleInfo) GetLiqi() bool {
	if m != nil {
		return m.Liqi
	}
	return false
}

func (m *HuleInfo) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

func (m *HuleInfo) GetLiDoras() []string {
	if m != nil {
		return m.LiDoras
	}
	return nil
}

func (m *HuleInfo) GetYiman() bool {
	if m != nil {
		return m.Yiman
	}
	return false
}

func (m *HuleInfo) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *HuleInfo) GetFans() []*FanInfo {
	if m != nil {
		return m.Fans
	}
	return nil
}

func (m *HuleInfo) GetFu() uint32 {
	if m != nil {
		return m.Fu
	}
	return 0
}

func (m *HuleInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *HuleInfo) GetPointRong() uint32 {
	if m != nil {
		return m.PointRong
	}
	return 0
}

func (m *HuleInfo) GetPointZimoQin() uint32 {
	if m != nil {
		return m.PointZimoQin
	}
	return 0
}

func (m *HuleInfo) GetPointZimoXian() uint32 {
	if m != nil {
		return m.PointZimoXian
	}
	return 0
}

func (m *HuleInfo) GetTitleId() uint32 {
	if m != nil {
		return m.TitleId
	}
	return 0
}

func (m *HuleInfo) GetPointSum() uint32 {
	if m != nil {
		return m.PointSum
	}
	return 0
}

type Item struct {
	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	Stack  uint32 `protobuf:"varint,2,opt,name=stack" json:"stack,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *Item) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *Item) GetStack() uint32 {
	if m != nil {
		return m.Stack
	}
	return 0
}

type LiQiSuccess struct {
	Seat     uint32 `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Score    int32  `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	Liqibang uint32 `protobuf:"varint,3,opt,name=liqibang" json:"liqibang,omitempty"`
}

func (m *LiQiSuccess) Reset()                    { *m = LiQiSuccess{} }
func (m *LiQiSuccess) String() string            { return proto.CompactTextString(m) }
func (*LiQiSuccess) ProtoMessage()               {}
func (*LiQiSuccess) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *LiQiSuccess) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *LiQiSuccess) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *LiQiSuccess) GetLiqibang() uint32 {
	if m != nil {
		return m.Liqibang
	}
	return 0
}

type Mail struct {
	MailId         uint32        `protobuf:"varint,1,opt,name=mail_id,json=mailId" json:"mail_id,omitempty"`
	State          uint32        `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	TakeAttachment bool          `protobuf:"varint,3,opt,name=take_attachment,json=takeAttachment" json:"take_attachment,omitempty"`
	Title          string        `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Content        string        `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	Attachments    []*RewardSlot `protobuf:"bytes,6,rep,name=attachments" json:"attachments,omitempty"`
	CreateTime     uint32        `protobuf:"varint,7,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	ExpireTime     uint32        `protobuf:"varint,8,opt,name=expire_time,json=expireTime" json:"expire_time,omitempty"`
	ReferenceId    uint32        `protobuf:"varint,9,opt,name=reference_id,json=referenceId" json:"reference_id,omitempty"`
}

func (m *Mail) Reset()                    { *m = Mail{} }
func (m *Mail) String() string            { return proto.CompactTextString(m) }
func (*Mail) ProtoMessage()               {}
func (*Mail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *Mail) GetMailId() uint32 {
	if m != nil {
		return m.MailId
	}
	return 0
}

func (m *Mail) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *Mail) GetTakeAttachment() bool {
	if m != nil {
		return m.TakeAttachment
	}
	return false
}

func (m *Mail) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Mail) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Mail) GetAttachments() []*RewardSlot {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *Mail) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Mail) GetExpireTime() uint32 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *Mail) GetReferenceId() uint32 {
	if m != nil {
		return m.ReferenceId
	}
	return 0
}

type NetworkEndpoint struct {
	Family  string `protobuf:"bytes,1,opt,name=family" json:"family,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Port    uint32 `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
}

func (m *NetworkEndpoint) Reset()                    { *m = NetworkEndpoint{} }
func (m *NetworkEndpoint) String() string            { return proto.CompactTextString(m) }
func (*NetworkEndpoint) ProtoMessage()               {}
func (*NetworkEndpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *NetworkEndpoint) GetFamily() string {
	if m != nil {
		return m.Family
	}
	return ""
}

func (m *NetworkEndpoint) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *NetworkEndpoint) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type NoTilePlayerInfo struct {
	Tingpai bool           `protobuf:"varint,3,opt,name=tingpai" json:"tingpai,omitempty"`
	Hand    []string       `protobuf:"bytes,4,rep,name=hand" json:"hand,omitempty"`
	Tings   []*TingPaiInfo `protobuf:"bytes,5,rep,name=tings" json:"tings,omitempty"`
}

func (m *NoTilePlayerInfo) Reset()                    { *m = NoTilePlayerInfo{} }
func (m *NoTilePlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*NoTilePlayerInfo) ProtoMessage()               {}
func (*NoTilePlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *NoTilePlayerInfo) GetTingpai() bool {
	if m != nil {
		return m.Tingpai
	}
	return false
}

func (m *NoTilePlayerInfo) GetHand() []string {
	if m != nil {
		return m.Hand
	}
	return nil
}

func (m *NoTilePlayerInfo) GetTings() []*TingPaiInfo {
	if m != nil {
		return m.Tings
	}
	return nil
}

type NoTileScoreInfo struct {
	Seat        uint32   `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	OldScores   []int32  `protobuf:"varint,2,rep,packed,name=old_scores,json=oldScores" json:"old_scores,omitempty"`
	DeltaScores []int32  `protobuf:"varint,3,rep,packed,name=delta_scores,json=deltaScores" json:"delta_scores,omitempty"`
	Hand        []string `protobuf:"bytes,4,rep,name=hand" json:"hand,omitempty"`
	Ming        []string `protobuf:"bytes,5,rep,name=ming" json:"ming,omitempty"`
	Doras       []string `protobuf:"bytes,6,rep,name=doras" json:"doras,omitempty"`
	Score       uint32   `protobuf:"varint,7,opt,name=score" json:"score,omitempty"`
}

func (m *NoTileScoreInfo) Reset()                    { *m = NoTileScoreInfo{} }
func (m *NoTileScoreInfo) String() string            { return proto.CompactTextString(m) }
func (*NoTileScoreInfo) ProtoMessage()               {}
func (*NoTileScoreInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *NoTileScoreInfo) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *NoTileScoreInfo) GetOldScores() []int32 {
	if m != nil {
		return m.OldScores
	}
	return nil
}

func (m *NoTileScoreInfo) GetDeltaScores() []int32 {
	if m != nil {
		return m.DeltaScores
	}
	return nil
}

func (m *NoTileScoreInfo) GetHand() []string {
	if m != nil {
		return m.Hand
	}
	return nil
}

func (m *NoTileScoreInfo) GetMing() []string {
	if m != nil {
		return m.Ming
	}
	return nil
}

func (m *NoTileScoreInfo) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

func (m *NoTileScoreInfo) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type NotifyAccountLevelChange struct {
	Origin *AccountLevel `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Final  *AccountLevel `protobuf:"bytes,2,opt,name=final" json:"final,omitempty"`
	Type   uint32        `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
}

func (m *NotifyAccountLevelChange) Reset()                    { *m = NotifyAccountLevelChange{} }
func (m *NotifyAccountLevelChange) String() string            { return proto.CompactTextString(m) }
func (*NotifyAccountLevelChange) ProtoMessage()               {}
func (*NotifyAccountLevelChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{88} }

func (m *NotifyAccountLevelChange) GetOrigin() *AccountLevel {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *NotifyAccountLevelChange) GetFinal() *AccountLevel {
	if m != nil {
		return m.Final
	}
	return nil
}

func (m *NotifyAccountLevelChange) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type NotifyAccountLogout struct {
}

func (m *NotifyAccountLogout) Reset()                    { *m = NotifyAccountLogout{} }
func (m *NotifyAccountLogout) String() string            { return proto.CompactTextString(m) }
func (*NotifyAccountLogout) ProtoMessage()               {}
func (*NotifyAccountLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

type NotifyAccountUpdate struct {
	Update *AccountUpdate `protobuf:"bytes,1,opt,name=update" json:"update,omitempty"`
}

func (m *NotifyAccountUpdate) Reset()                    { *m = NotifyAccountUpdate{} }
func (m *NotifyAccountUpdate) String() string            { return proto.CompactTextString(m) }
func (*NotifyAccountUpdate) ProtoMessage()               {}
func (*NotifyAccountUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{90} }

func (m *NotifyAccountUpdate) GetUpdate() *AccountUpdate {
	if m != nil {
		return m.Update
	}
	return nil
}

type NotifyActivityChange struct {
	NewActivities []*Activity `protobuf:"bytes,1,rep,name=new_activities,json=newActivities" json:"new_activities,omitempty"`
	EndActivities []uint32    `protobuf:"varint,2,rep,packed,name=end_activities,json=endActivities" json:"end_activities,omitempty"`
}

func (m *NotifyActivityChange) Reset()                    { *m = NotifyActivityChange{} }
func (m *NotifyActivityChange) String() string            { return proto.CompactTextString(m) }
func (*NotifyActivityChange) ProtoMessage()               {}
func (*NotifyActivityChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

func (m *NotifyActivityChange) GetNewActivities() []*Activity {
	if m != nil {
		return m.NewActivities
	}
	return nil
}

func (m *NotifyActivityChange) GetEndActivities() []uint32 {
	if m != nil {
		return m.EndActivities
	}
	return nil
}

type NotifyActivityPoint struct {
	ActivityPoints []*NotifyActivityPoint_ActivityPoint `protobuf:"bytes,1,rep,name=activity_points,json=activityPoints" json:"activity_points,omitempty"`
}

func (m *NotifyActivityPoint) Reset()                    { *m = NotifyActivityPoint{} }
func (m *NotifyActivityPoint) String() string            { return proto.CompactTextString(m) }
func (*NotifyActivityPoint) ProtoMessage()               {}
func (*NotifyActivityPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *NotifyActivityPoint) GetActivityPoints() []*NotifyActivityPoint_ActivityPoint {
	if m != nil {
		return m.ActivityPoints
	}
	return nil
}

type NotifyActivityPoint_ActivityPoint struct {
	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId" json:"activity_id,omitempty"`
	Point      uint32 `protobuf:"varint,2,opt,name=point" json:"point,omitempty"`
}

func (m *NotifyActivityPoint_ActivityPoint) Reset()         { *m = NotifyActivityPoint_ActivityPoint{} }
func (m *NotifyActivityPoint_ActivityPoint) String() string { return proto.CompactTextString(m) }
func (*NotifyActivityPoint_ActivityPoint) ProtoMessage()    {}
func (*NotifyActivityPoint_ActivityPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{92, 0}
}

func (m *NotifyActivityPoint_ActivityPoint) GetActivityId() uint32 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *NotifyActivityPoint_ActivityPoint) GetPoint() uint32 {
	if m != nil {
		return m.Point
	}
	return 0
}

type NotifyActivityReward struct {
	ActivityReward []*NotifyActivityReward_ActivityReward `protobuf:"bytes,1,rep,name=activity_reward,json=activityReward" json:"activity_reward,omitempty"`
}

func (m *NotifyActivityReward) Reset()                    { *m = NotifyActivityReward{} }
func (m *NotifyActivityReward) String() string            { return proto.CompactTextString(m) }
func (*NotifyActivityReward) ProtoMessage()               {}
func (*NotifyActivityReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *NotifyActivityReward) GetActivityReward() []*NotifyActivityReward_ActivityReward {
	if m != nil {
		return m.ActivityReward
	}
	return nil
}

type NotifyActivityReward_ActivityReward struct {
	ActivityId uint32        `protobuf:"varint,1,opt,name=activity_id,json=activityId" json:"activity_id,omitempty"`
	Rewards    []*RewardSlot `protobuf:"bytes,2,rep,name=rewards" json:"rewards,omitempty"`
}

func (m *NotifyActivityReward_ActivityReward) Reset()         { *m = NotifyActivityReward_ActivityReward{} }
func (m *NotifyActivityReward_ActivityReward) String() string { return proto.CompactTextString(m) }
func (*NotifyActivityReward_ActivityReward) ProtoMessage()    {}
func (*NotifyActivityReward_ActivityReward) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{93, 0}
}

func (m *NotifyActivityReward_ActivityReward) GetActivityId() uint32 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *NotifyActivityReward_ActivityReward) GetRewards() []*RewardSlot {
	if m != nil {
		return m.Rewards
	}
	return nil
}

type NotifyActivityTaskUpdate struct {
	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses" json:"progresses,omitempty"`
}

func (m *NotifyActivityTaskUpdate) Reset()                    { *m = NotifyActivityTaskUpdate{} }
func (m *NotifyActivityTaskUpdate) String() string            { return proto.CompactTextString(m) }
func (*NotifyActivityTaskUpdate) ProtoMessage()               {}
func (*NotifyActivityTaskUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *NotifyActivityTaskUpdate) GetProgresses() []*TaskProgress {
	if m != nil {
		return m.Progresses
	}
	return nil
}

type NotifyAnnouncementUpdate struct {
	Announcements []*Announcement `protobuf:"bytes,1,rep,name=announcements" json:"announcements,omitempty"`
	Sort          []uint32        `protobuf:"varint,2,rep,packed,name=sort" json:"sort,omitempty"`
}

func (m *NotifyAnnouncementUpdate) Reset()                    { *m = NotifyAnnouncementUpdate{} }
func (m *NotifyAnnouncementUpdate) String() string            { return proto.CompactTextString(m) }
func (*NotifyAnnouncementUpdate) ProtoMessage()               {}
func (*NotifyAnnouncementUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *NotifyAnnouncementUpdate) GetAnnouncements() []*Announcement {
	if m != nil {
		return m.Announcements
	}
	return nil
}

func (m *NotifyAnnouncementUpdate) GetSort() []uint32 {
	if m != nil {
		return m.Sort
	}
	return nil
}

type NotifyAnotherLogin struct {
}

func (m *NotifyAnotherLogin) Reset()                    { *m = NotifyAnotherLogin{} }
func (m *NotifyAnotherLogin) String() string            { return proto.CompactTextString(m) }
func (*NotifyAnotherLogin) ProtoMessage()               {}
func (*NotifyAnotherLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

type NotifyClientMessage struct {
	Sender  *PlayerBaseView `protobuf:"bytes,1,opt,name=sender" json:"sender,omitempty"`
	Type    uint32          `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Content string          `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
}

func (m *NotifyClientMessage) Reset()                    { *m = NotifyClientMessage{} }
func (m *NotifyClientMessage) String() string            { return proto.CompactTextString(m) }
func (*NotifyClientMessage) ProtoMessage()               {}
func (*NotifyClientMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *NotifyClientMessage) GetSender() *PlayerBaseView {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *NotifyClientMessage) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *NotifyClientMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type NotifyCustomContestAccountMsg struct {
	UniqueId  uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	AccountId uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Sender    string `protobuf:"bytes,3,opt,name=sender" json:"sender,omitempty"`
	Content   string `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
}

func (m *NotifyCustomContestAccountMsg) Reset()                    { *m = NotifyCustomContestAccountMsg{} }
func (m *NotifyCustomContestAccountMsg) String() string            { return proto.CompactTextString(m) }
func (*NotifyCustomContestAccountMsg) ProtoMessage()               {}
func (*NotifyCustomContestAccountMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{98} }

func (m *NotifyCustomContestAccountMsg) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

func (m *NotifyCustomContestAccountMsg) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *NotifyCustomContestAccountMsg) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *NotifyCustomContestAccountMsg) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type NotifyCustomContestState struct {
	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	State    uint32 `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
}

func (m *NotifyCustomContestState) Reset()                    { *m = NotifyCustomContestState{} }
func (m *NotifyCustomContestState) String() string            { return proto.CompactTextString(m) }
func (*NotifyCustomContestState) ProtoMessage()               {}
func (*NotifyCustomContestState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{99} }

func (m *NotifyCustomContestState) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

func (m *NotifyCustomContestState) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

type NotifyCustomContestSystemMsg struct {
	UniqueId  uint32                      `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	Type      uint32                      `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Uuid      string                      `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	GameStart *CustomizedContestGameStart `protobuf:"bytes,4,opt,name=game_start,json=gameStart" json:"game_start,omitempty"`
	GameEnd   *CustomizedContestGameEnd   `protobuf:"bytes,5,opt,name=game_end,json=gameEnd" json:"game_end,omitempty"`
}

func (m *NotifyCustomContestSystemMsg) Reset()                    { *m = NotifyCustomContestSystemMsg{} }
func (m *NotifyCustomContestSystemMsg) String() string            { return proto.CompactTextString(m) }
func (*NotifyCustomContestSystemMsg) ProtoMessage()               {}
func (*NotifyCustomContestSystemMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{100} }

func (m *NotifyCustomContestSystemMsg) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

func (m *NotifyCustomContestSystemMsg) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *NotifyCustomContestSystemMsg) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *NotifyCustomContestSystemMsg) GetGameStart() *CustomizedContestGameStart {
	if m != nil {
		return m.GameStart
	}
	return nil
}

func (m *NotifyCustomContestSystemMsg) GetGameEnd() *CustomizedContestGameEnd {
	if m != nil {
		return m.GameEnd
	}
	return nil
}

type NotifyDailyTaskUpdate struct {
	Progresses []*TaskProgress `protobuf:"bytes,1,rep,name=progresses" json:"progresses,omitempty"`
}

func (m *NotifyDailyTaskUpdate) Reset()                    { *m = NotifyDailyTaskUpdate{} }
func (m *NotifyDailyTaskUpdate) String() string            { return proto.CompactTextString(m) }
func (*NotifyDailyTaskUpdate) ProtoMessage()               {}
func (*NotifyDailyTaskUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{101} }

func (m *NotifyDailyTaskUpdate) GetProgresses() []*TaskProgress {
	if m != nil {
		return m.Progresses
	}
	return nil
}

type NotifyDeleteMail struct {
	MailIdList []uint32 `protobuf:"varint,1,rep,packed,name=mail_id_list,json=mailIdList" json:"mail_id_list,omitempty"`
}

func (m *NotifyDeleteMail) Reset()                    { *m = NotifyDeleteMail{} }
func (m *NotifyDeleteMail) String() string            { return proto.CompactTextString(m) }
func (*NotifyDeleteMail) ProtoMessage()               {}
func (*NotifyDeleteMail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{102} }

func (m *NotifyDeleteMail) GetMailIdList() []uint32 {
	if m != nil {
		return m.MailIdList
	}
	return nil
}

type NotifyFriendChange struct {
	AccountId uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Type      uint32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Friend    *Friend `protobuf:"bytes,3,opt,name=friend" json:"friend,omitempty"`
}

func (m *NotifyFriendChange) Reset()                    { *m = NotifyFriendChange{} }
func (m *NotifyFriendChange) String() string            { return proto.CompactTextString(m) }
func (*NotifyFriendChange) ProtoMessage()               {}
func (*NotifyFriendChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{103} }

func (m *NotifyFriendChange) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *NotifyFriendChange) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *NotifyFriendChange) GetFriend() *Friend {
	if m != nil {
		return m.Friend
	}
	return nil
}

type NotifyFriendStateChange struct {
	TargetId    uint32              `protobuf:"varint,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	ActiveState *AccountActiveState `protobuf:"bytes,2,opt,name=active_state,json=activeState" json:"active_state,omitempty"`
}

func (m *NotifyFriendStateChange) Reset()                    { *m = NotifyFriendStateChange{} }
func (m *NotifyFriendStateChange) String() string            { return proto.CompactTextString(m) }
func (*NotifyFriendStateChange) ProtoMessage()               {}
func (*NotifyFriendStateChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{104} }

func (m *NotifyFriendStateChange) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *NotifyFriendStateChange) GetActiveState() *AccountActiveState {
	if m != nil {
		return m.ActiveState
	}
	return nil
}

type NotifyFriendViewChange struct {
	TargetId uint32          `protobuf:"varint,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Base     *PlayerBaseView `protobuf:"bytes,2,opt,name=base" json:"base,omitempty"`
}

func (m *NotifyFriendViewChange) Reset()                    { *m = NotifyFriendViewChange{} }
func (m *NotifyFriendViewChange) String() string            { return proto.CompactTextString(m) }
func (*NotifyFriendViewChange) ProtoMessage()               {}
func (*NotifyFriendViewChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

func (m *NotifyFriendViewChange) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *NotifyFriendViewChange) GetBase() *PlayerBaseView {
	if m != nil {
		return m.Base
	}
	return nil
}

type NotifyGameBroadcast struct {
	Seat    uint32 `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
}

func (m *NotifyGameBroadcast) Reset()                    { *m = NotifyGameBroadcast{} }
func (m *NotifyGameBroadcast) String() string            { return proto.CompactTextString(m) }
func (*NotifyGameBroadcast) ProtoMessage()               {}
func (*NotifyGameBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{106} }

func (m *NotifyGameBroadcast) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *NotifyGameBroadcast) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type NotifyGameEndResult struct {
	Result *GameEndResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *NotifyGameEndResult) Reset()                    { *m = NotifyGameEndResult{} }
func (m *NotifyGameEndResult) String() string            { return proto.CompactTextString(m) }
func (*NotifyGameEndResult) ProtoMessage()               {}
func (*NotifyGameEndResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{107} }

func (m *NotifyGameEndResult) GetResult() *GameEndResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type NotifyGameFinishReward struct {
	ModeId        uint32                                `protobuf:"varint,1,opt,name=mode_id,json=modeId" json:"mode_id,omitempty"`
	LevelChange   *NotifyGameFinishReward_LevelChange   `protobuf:"bytes,2,opt,name=level_change,json=levelChange" json:"level_change,omitempty"`
	MatchChest    *NotifyGameFinishReward_MatchChest    `protobuf:"bytes,3,opt,name=match_chest,json=matchChest" json:"match_chest,omitempty"`
	MainCharacter *NotifyGameFinishReward_MainCharacter `protobuf:"bytes,4,opt,name=main_character,json=mainCharacter" json:"main_character,omitempty"`
	CharacterGift *NotifyGameFinishReward_CharacterGift `protobuf:"bytes,5,opt,name=character_gift,json=characterGift" json:"character_gift,omitempty"`
}

func (m *NotifyGameFinishReward) Reset()                    { *m = NotifyGameFinishReward{} }
func (m *NotifyGameFinishReward) String() string            { return proto.CompactTextString(m) }
func (*NotifyGameFinishReward) ProtoMessage()               {}
func (*NotifyGameFinishReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *NotifyGameFinishReward) GetModeId() uint32 {
	if m != nil {
		return m.ModeId
	}
	return 0
}

func (m *NotifyGameFinishReward) GetLevelChange() *NotifyGameFinishReward_LevelChange {
	if m != nil {
		return m.LevelChange
	}
	return nil
}

func (m *NotifyGameFinishReward) GetMatchChest() *NotifyGameFinishReward_MatchChest {
	if m != nil {
		return m.MatchChest
	}
	return nil
}

func (m *NotifyGameFinishReward) GetMainCharacter() *NotifyGameFinishReward_MainCharacter {
	if m != nil {
		return m.MainCharacter
	}
	return nil
}

func (m *NotifyGameFinishReward) GetCharacterGift() *NotifyGameFinishReward_CharacterGift {
	if m != nil {
		return m.CharacterGift
	}
	return nil
}

type NotifyGameFinishReward_CharacterGift struct {
	Origin   uint32 `protobuf:"varint,1,opt,name=origin" json:"origin,omitempty"`
	Final    uint32 `protobuf:"varint,2,opt,name=final" json:"final,omitempty"`
	Add      uint32 `protobuf:"varint,3,opt,name=add" json:"add,omitempty"`
	IsGraded bool   `protobuf:"varint,4,opt,name=is_graded,json=isGraded" json:"is_graded,omitempty"`
}

func (m *NotifyGameFinishReward_CharacterGift) Reset()         { *m = NotifyGameFinishReward_CharacterGift{} }
func (m *NotifyGameFinishReward_CharacterGift) String() string { return proto.CompactTextString(m) }
func (*NotifyGameFinishReward_CharacterGift) ProtoMessage()    {}
func (*NotifyGameFinishReward_CharacterGift) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{108, 0}
}

func (m *NotifyGameFinishReward_CharacterGift) GetOrigin() uint32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

func (m *NotifyGameFinishReward_CharacterGift) GetFinal() uint32 {
	if m != nil {
		return m.Final
	}
	return 0
}

func (m *NotifyGameFinishReward_CharacterGift) GetAdd() uint32 {
	if m != nil {
		return m.Add
	}
	return 0
}

func (m *NotifyGameFinishReward_CharacterGift) GetIsGraded() bool {
	if m != nil {
		return m.IsGraded
	}
	return false
}

type NotifyGameFinishReward_LevelChange struct {
	Origin *AccountLevel `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Final  *AccountLevel `protobuf:"bytes,2,opt,name=final" json:"final,omitempty"`
	Type   uint32        `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
}

func (m *NotifyGameFinishReward_LevelChange) Reset()         { *m = NotifyGameFinishReward_LevelChange{} }
func (m *NotifyGameFinishReward_LevelChange) String() string { return proto.CompactTextString(m) }
func (*NotifyGameFinishReward_LevelChange) ProtoMessage()    {}
func (*NotifyGameFinishReward_LevelChange) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{108, 1}
}

func (m *NotifyGameFinishReward_LevelChange) GetOrigin() *AccountLevel {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *NotifyGameFinishReward_LevelChange) GetFinal() *AccountLevel {
	if m != nil {
		return m.Final
	}
	return nil
}

func (m *NotifyGameFinishReward_LevelChange) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type NotifyGameFinishReward_MainCharacter struct {
	Level uint32 `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Exp   uint32 `protobuf:"varint,2,opt,name=exp" json:"exp,omitempty"`
	Add   uint32 `protobuf:"varint,3,opt,name=add" json:"add,omitempty"`
}

func (m *NotifyGameFinishReward_MainCharacter) Reset()         { *m = NotifyGameFinishReward_MainCharacter{} }
func (m *NotifyGameFinishReward_MainCharacter) String() string { return proto.CompactTextString(m) }
func (*NotifyGameFinishReward_MainCharacter) ProtoMessage()    {}
func (*NotifyGameFinishReward_MainCharacter) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{108, 2}
}

func (m *NotifyGameFinishReward_MainCharacter) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *NotifyGameFinishReward_MainCharacter) GetExp() uint32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *NotifyGameFinishReward_MainCharacter) GetAdd() uint32 {
	if m != nil {
		return m.Add
	}
	return 0
}

type NotifyGameFinishReward_MatchChest struct {
	ChestId  uint32        `protobuf:"varint,1,opt,name=chest_id,json=chestId" json:"chest_id,omitempty"`
	Origin   uint32        `protobuf:"varint,2,opt,name=origin" json:"origin,omitempty"`
	Final    uint32        `protobuf:"varint,3,opt,name=final" json:"final,omitempty"`
	IsGraded bool          `protobuf:"varint,4,opt,name=is_graded,json=isGraded" json:"is_graded,omitempty"`
	Rewards  []*RewardSlot `protobuf:"bytes,5,rep,name=rewards" json:"rewards,omitempty"`
}

func (m *NotifyGameFinishReward_MatchChest) Reset()         { *m = NotifyGameFinishReward_MatchChest{} }
func (m *NotifyGameFinishReward_MatchChest) String() string { return proto.CompactTextString(m) }
func (*NotifyGameFinishReward_MatchChest) ProtoMessage()    {}
func (*NotifyGameFinishReward_MatchChest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{108, 3}
}

func (m *NotifyGameFinishReward_MatchChest) GetChestId() uint32 {
	if m != nil {
		return m.ChestId
	}
	return 0
}

func (m *NotifyGameFinishReward_MatchChest) GetOrigin() uint32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

func (m *NotifyGameFinishReward_MatchChest) GetFinal() uint32 {
	if m != nil {
		return m.Final
	}
	return 0
}

func (m *NotifyGameFinishReward_MatchChest) GetIsGraded() bool {
	if m != nil {
		return m.IsGraded
	}
	return false
}

func (m *NotifyGameFinishReward_MatchChest) GetRewards() []*RewardSlot {
	if m != nil {
		return m.Rewards
	}
	return nil
}

type NotifyGamePause struct {
	Paused bool `protobuf:"varint,1,opt,name=paused" json:"paused,omitempty"`
}

func (m *NotifyGamePause) Reset()                    { *m = NotifyGamePause{} }
func (m *NotifyGamePause) String() string            { return proto.CompactTextString(m) }
func (*NotifyGamePause) ProtoMessage()               {}
func (*NotifyGamePause) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{109} }

func (m *NotifyGamePause) GetPaused() bool {
	if m != nil {
		return m.Paused
	}
	return false
}

type NotifyGameTerminate struct {
	Reason string `protobuf:"bytes,1,opt,name=reason" json:"reason,omitempty"`
}

func (m *NotifyGameTerminate) Reset()                    { *m = NotifyGameTerminate{} }
func (m *NotifyGameTerminate) String() string            { return proto.CompactTextString(m) }
func (*NotifyGameTerminate) ProtoMessage()               {}
func (*NotifyGameTerminate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *NotifyGameTerminate) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type NotifyGiftSendRefresh struct {
}

func (m *NotifyGiftSendRefresh) Reset()                    { *m = NotifyGiftSendRefresh{} }
func (m *NotifyGiftSendRefresh) String() string            { return proto.CompactTextString(m) }
func (*NotifyGiftSendRefresh) ProtoMessage()               {}
func (*NotifyGiftSendRefresh) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

type NotifyLeaderboardPoint struct {
	LeaderboardPoints []*NotifyLeaderboardPoint_LeaderboardPoint `protobuf:"bytes,1,rep,name=leaderboard_points,json=leaderboardPoints" json:"leaderboard_points,omitempty"`
}

func (m *NotifyLeaderboardPoint) Reset()                    { *m = NotifyLeaderboardPoint{} }
func (m *NotifyLeaderboardPoint) String() string            { return proto.CompactTextString(m) }
func (*NotifyLeaderboardPoint) ProtoMessage()               {}
func (*NotifyLeaderboardPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *NotifyLeaderboardPoint) GetLeaderboardPoints() []*NotifyLeaderboardPoint_LeaderboardPoint {
	if m != nil {
		return m.LeaderboardPoints
	}
	return nil
}

type NotifyLeaderboardPoint_LeaderboardPoint struct {
	LeaderboardId uint32 `protobuf:"varint,1,opt,name=leaderboard_id,json=leaderboardId" json:"leaderboard_id,omitempty"`
	Point         uint32 `protobuf:"varint,2,opt,name=point" json:"point,omitempty"`
}

func (m *NotifyLeaderboardPoint_LeaderboardPoint) Reset() {
	*m = NotifyLeaderboardPoint_LeaderboardPoint{}
}
func (m *NotifyLeaderboardPoint_LeaderboardPoint) String() string { return proto.CompactTextString(m) }
func (*NotifyLeaderboardPoint_LeaderboardPoint) ProtoMessage()    {}
func (*NotifyLeaderboardPoint_LeaderboardPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{112, 0}
}

func (m *NotifyLeaderboardPoint_LeaderboardPoint) GetLeaderboardId() uint32 {
	if m != nil {
		return m.LeaderboardId
	}
	return 0
}

func (m *NotifyLeaderboardPoint_LeaderboardPoint) GetPoint() uint32 {
	if m != nil {
		return m.Point
	}
	return 0
}

type NotifyMatchGameStart struct {
	GameUrl      string `protobuf:"bytes,1,opt,name=game_url,json=gameUrl" json:"game_url,omitempty"`
	ConnectToken string `protobuf:"bytes,2,opt,name=connect_token,json=connectToken" json:"connect_token,omitempty"`
	GameUuid     string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid" json:"game_uuid,omitempty"`
	MatchModeId  uint32 `protobuf:"varint,4,opt,name=match_mode_id,json=matchModeId" json:"match_mode_id,omitempty"`
	Location     string `protobuf:"bytes,5,opt,name=location" json:"location,omitempty"`
}

func (m *NotifyMatchGameStart) Reset()                    { *m = NotifyMatchGameStart{} }
func (m *NotifyMatchGameStart) String() string            { return proto.CompactTextString(m) }
func (*NotifyMatchGameStart) ProtoMessage()               {}
func (*NotifyMatchGameStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *NotifyMatchGameStart) GetGameUrl() string {
	if m != nil {
		return m.GameUrl
	}
	return ""
}

func (m *NotifyMatchGameStart) GetConnectToken() string {
	if m != nil {
		return m.ConnectToken
	}
	return ""
}

func (m *NotifyMatchGameStart) GetGameUuid() string {
	if m != nil {
		return m.GameUuid
	}
	return ""
}

func (m *NotifyMatchGameStart) GetMatchModeId() uint32 {
	if m != nil {
		return m.MatchModeId
	}
	return 0
}

func (m *NotifyMatchGameStart) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type NotifyMatchTimeout struct {
}

func (m *NotifyMatchTimeout) Reset()                    { *m = NotifyMatchTimeout{} }
func (m *NotifyMatchTimeout) String() string            { return proto.CompactTextString(m) }
func (*NotifyMatchTimeout) ProtoMessage()               {}
func (*NotifyMatchTimeout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

type NotifyNewComment struct {
}

func (m *NotifyNewComment) Reset()                    { *m = NotifyNewComment{} }
func (m *NotifyNewComment) String() string            { return proto.CompactTextString(m) }
func (*NotifyNewComment) ProtoMessage()               {}
func (*NotifyNewComment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

type NotifyNewFriendApply struct {
	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ApplyTime uint32 `protobuf:"varint,2,opt,name=apply_time,json=applyTime" json:"apply_time,omitempty"`
	RemovedId uint32 `protobuf:"varint,3,opt,name=removed_id,json=removedId" json:"removed_id,omitempty"`
}

func (m *NotifyNewFriendApply) Reset()                    { *m = NotifyNewFriendApply{} }
func (m *NotifyNewFriendApply) String() string            { return proto.CompactTextString(m) }
func (*NotifyNewFriendApply) ProtoMessage()               {}
func (*NotifyNewFriendApply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

func (m *NotifyNewFriendApply) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *NotifyNewFriendApply) GetApplyTime() uint32 {
	if m != nil {
		return m.ApplyTime
	}
	return 0
}

func (m *NotifyNewFriendApply) GetRemovedId() uint32 {
	if m != nil {
		return m.RemovedId
	}
	return 0
}

type NotifyNewGame struct {
	GameUuid   string   `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid" json:"game_uuid,omitempty"`
	PlayerList []string `protobuf:"bytes,2,rep,name=player_list,json=playerList" json:"player_list,omitempty"`
}

func (m *NotifyNewGame) Reset()                    { *m = NotifyNewGame{} }
func (m *NotifyNewGame) String() string            { return proto.CompactTextString(m) }
func (*NotifyNewGame) ProtoMessage()               {}
func (*NotifyNewGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *NotifyNewGame) GetGameUuid() string {
	if m != nil {
		return m.GameUuid
	}
	return ""
}

func (m *NotifyNewGame) GetPlayerList() []string {
	if m != nil {
		return m.PlayerList
	}
	return nil
}

type NotifyNewMail struct {
	Mail *Mail `protobuf:"bytes,1,opt,name=mail" json:"mail,omitempty"`
}

func (m *NotifyNewMail) Reset()                    { *m = NotifyNewMail{} }
func (m *NotifyNewMail) String() string            { return proto.CompactTextString(m) }
func (*NotifyNewMail) ProtoMessage()               {}
func (*NotifyNewMail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *NotifyNewMail) GetMail() *Mail {
	if m != nil {
		return m.Mail
	}
	return nil
}

type NotifyPayResult struct {
	PayResult uint32 `protobuf:"varint,1,opt,name=pay_result,json=payResult" json:"pay_result,omitempty"`
	OrderId   string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	GoodsId   uint32 `protobuf:"varint,3,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
}

func (m *NotifyPayResult) Reset()                    { *m = NotifyPayResult{} }
func (m *NotifyPayResult) String() string            { return proto.CompactTextString(m) }
func (*NotifyPayResult) ProtoMessage()               {}
func (*NotifyPayResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *NotifyPayResult) GetPayResult() uint32 {
	if m != nil {
		return m.PayResult
	}
	return 0
}

func (m *NotifyPayResult) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *NotifyPayResult) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

type NotifyPlayerConnectionState struct {
	Seat  uint32          `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	State GamePlayerState `protobuf:"varint,2,opt,name=state,enum=lq.GamePlayerState" json:"state,omitempty"`
}

func (m *NotifyPlayerConnectionState) Reset()                    { *m = NotifyPlayerConnectionState{} }
func (m *NotifyPlayerConnectionState) String() string            { return proto.CompactTextString(m) }
func (*NotifyPlayerConnectionState) ProtoMessage()               {}
func (*NotifyPlayerConnectionState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *NotifyPlayerConnectionState) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *NotifyPlayerConnectionState) GetState() GamePlayerState {
	if m != nil {
		return m.State
	}
	return GamePlayerState_NULL
}

type NotifyPlayerLoadGameReady struct {
	ReadyIdList []uint32 `protobuf:"varint,1,rep,packed,name=ready_id_list,json=readyIdList" json:"ready_id_list,omitempty"`
}

func (m *NotifyPlayerLoadGameReady) Reset()                    { *m = NotifyPlayerLoadGameReady{} }
func (m *NotifyPlayerLoadGameReady) String() string            { return proto.CompactTextString(m) }
func (*NotifyPlayerLoadGameReady) ProtoMessage()               {}
func (*NotifyPlayerLoadGameReady) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{121} }

func (m *NotifyPlayerLoadGameReady) GetReadyIdList() []uint32 {
	if m != nil {
		return m.ReadyIdList
	}
	return nil
}

type NotifyReviveCoinUpdate struct {
	HasGained bool `protobuf:"varint,1,opt,name=has_gained,json=hasGained" json:"has_gained,omitempty"`
}

func (m *NotifyReviveCoinUpdate) Reset()                    { *m = NotifyReviveCoinUpdate{} }
func (m *NotifyReviveCoinUpdate) String() string            { return proto.CompactTextString(m) }
func (*NotifyReviveCoinUpdate) ProtoMessage()               {}
func (*NotifyReviveCoinUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{122} }

func (m *NotifyReviveCoinUpdate) GetHasGained() bool {
	if m != nil {
		return m.HasGained
	}
	return false
}

type NotifyRollingNotice struct {
	Notice *RollingNotice `protobuf:"bytes,1,opt,name=notice" json:"notice,omitempty"`
}

func (m *NotifyRollingNotice) Reset()                    { *m = NotifyRollingNotice{} }
func (m *NotifyRollingNotice) String() string            { return proto.CompactTextString(m) }
func (*NotifyRollingNotice) ProtoMessage()               {}
func (*NotifyRollingNotice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{123} }

func (m *NotifyRollingNotice) GetNotice() *RollingNotice {
	if m != nil {
		return m.Notice
	}
	return nil
}

type NotifyRoomGameStart struct {
	GameUrl      string `protobuf:"bytes,1,opt,name=game_url,json=gameUrl" json:"game_url,omitempty"`
	ConnectToken string `protobuf:"bytes,2,opt,name=connect_token,json=connectToken" json:"connect_token,omitempty"`
	GameUuid     string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid" json:"game_uuid,omitempty"`
	Location     string `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
}

func (m *NotifyRoomGameStart) Reset()                    { *m = NotifyRoomGameStart{} }
func (m *NotifyRoomGameStart) String() string            { return proto.CompactTextString(m) }
func (*NotifyRoomGameStart) ProtoMessage()               {}
func (*NotifyRoomGameStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{124} }

func (m *NotifyRoomGameStart) GetGameUrl() string {
	if m != nil {
		return m.GameUrl
	}
	return ""
}

func (m *NotifyRoomGameStart) GetConnectToken() string {
	if m != nil {
		return m.ConnectToken
	}
	return ""
}

func (m *NotifyRoomGameStart) GetGameUuid() string {
	if m != nil {
		return m.GameUuid
	}
	return ""
}

func (m *NotifyRoomGameStart) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type NotifyRoomKickOut struct {
}

func (m *NotifyRoomKickOut) Reset()                    { *m = NotifyRoomKickOut{} }
func (m *NotifyRoomKickOut) String() string            { return proto.CompactTextString(m) }
func (*NotifyRoomKickOut) ProtoMessage()               {}
func (*NotifyRoomKickOut) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

type NotifyRoomPlayerReady struct {
	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Ready     bool   `protobuf:"varint,2,opt,name=ready" json:"ready,omitempty"`
}

func (m *NotifyRoomPlayerReady) Reset()                    { *m = NotifyRoomPlayerReady{} }
func (m *NotifyRoomPlayerReady) String() string            { return proto.CompactTextString(m) }
func (*NotifyRoomPlayerReady) ProtoMessage()               {}
func (*NotifyRoomPlayerReady) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{126} }

func (m *NotifyRoomPlayerReady) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *NotifyRoomPlayerReady) GetReady() bool {
	if m != nil {
		return m.Ready
	}
	return false
}

type NotifyRoomPlayerUpdate struct {
	UpdateList []*PlayerBaseView `protobuf:"bytes,1,rep,name=update_list,json=updateList" json:"update_list,omitempty"`
	RemoveList []uint32          `protobuf:"varint,2,rep,packed,name=remove_list,json=removeList" json:"remove_list,omitempty"`
	OwnerId    uint32            `protobuf:"varint,3,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	RobotCount uint32            `protobuf:"varint,4,opt,name=robot_count,json=robotCount" json:"robot_count,omitempty"`
}

func (m *NotifyRoomPlayerUpdate) Reset()                    { *m = NotifyRoomPlayerUpdate{} }
func (m *NotifyRoomPlayerUpdate) String() string            { return proto.CompactTextString(m) }
func (*NotifyRoomPlayerUpdate) ProtoMessage()               {}
func (*NotifyRoomPlayerUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{127} }

func (m *NotifyRoomPlayerUpdate) GetUpdateList() []*PlayerBaseView {
	if m != nil {
		return m.UpdateList
	}
	return nil
}

func (m *NotifyRoomPlayerUpdate) GetRemoveList() []uint32 {
	if m != nil {
		return m.RemoveList
	}
	return nil
}

func (m *NotifyRoomPlayerUpdate) GetOwnerId() uint32 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *NotifyRoomPlayerUpdate) GetRobotCount() uint32 {
	if m != nil {
		return m.RobotCount
	}
	return 0
}

type NotifyServerSetting struct {
	Settings *ServerSettings `protobuf:"bytes,1,opt,name=settings" json:"settings,omitempty"`
}

func (m *NotifyServerSetting) Reset()                    { *m = NotifyServerSetting{} }
func (m *NotifyServerSetting) String() string            { return proto.CompactTextString(m) }
func (*NotifyServerSetting) ProtoMessage()               {}
func (*NotifyServerSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *NotifyServerSetting) GetSettings() *ServerSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type NotifyShopUpdate struct {
	ShopInfo *ShopInfo `protobuf:"bytes,1,opt,name=shop_info,json=shopInfo" json:"shop_info,omitempty"`
}

func (m *NotifyShopUpdate) Reset()                    { *m = NotifyShopUpdate{} }
func (m *NotifyShopUpdate) String() string            { return proto.CompactTextString(m) }
func (*NotifyShopUpdate) ProtoMessage()               {}
func (*NotifyShopUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{129} }

func (m *NotifyShopUpdate) GetShopInfo() *ShopInfo {
	if m != nil {
		return m.ShopInfo
	}
	return nil
}

type NotifyVipLevelChange struct {
	GiftLimit           uint32  `protobuf:"varint,1,opt,name=gift_limit,json=giftLimit" json:"gift_limit,omitempty"`
	FriendMaxCount      uint32  `protobuf:"varint,2,opt,name=friend_max_count,json=friendMaxCount" json:"friend_max_count,omitempty"`
	ZhpFreeRefreshLimit uint32  `protobuf:"varint,3,opt,name=zhp_free_refresh_limit,json=zhpFreeRefreshLimit" json:"zhp_free_refresh_limit,omitempty"`
	ZhpCostRefreshLimit uint32  `protobuf:"varint,4,opt,name=zhp_cost_refresh_limit,json=zhpCostRefreshLimit" json:"zhp_cost_refresh_limit,omitempty"`
	BuddyBonus          float32 `protobuf:"fixed32,5,opt,name=buddy_bonus,json=buddyBonus" json:"buddy_bonus,omitempty"`
	RecordCollectLimit  uint32  `protobuf:"varint,6,opt,name=record_collect_limit,json=recordCollectLimit" json:"record_collect_limit,omitempty"`
}

func (m *NotifyVipLevelChange) Reset()                    { *m = NotifyVipLevelChange{} }
func (m *NotifyVipLevelChange) String() string            { return proto.CompactTextString(m) }
func (*NotifyVipLevelChange) ProtoMessage()               {}
func (*NotifyVipLevelChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{130} }

func (m *NotifyVipLevelChange) GetGiftLimit() uint32 {
	if m != nil {
		return m.GiftLimit
	}
	return 0
}

func (m *NotifyVipLevelChange) GetFriendMaxCount() uint32 {
	if m != nil {
		return m.FriendMaxCount
	}
	return 0
}

func (m *NotifyVipLevelChange) GetZhpFreeRefreshLimit() uint32 {
	if m != nil {
		return m.ZhpFreeRefreshLimit
	}
	return 0
}

func (m *NotifyVipLevelChange) GetZhpCostRefreshLimit() uint32 {
	if m != nil {
		return m.ZhpCostRefreshLimit
	}
	return 0
}

func (m *NotifyVipLevelChange) GetBuddyBonus() float32 {
	if m != nil {
		return m.BuddyBonus
	}
	return 0
}

func (m *NotifyVipLevelChange) GetRecordCollectLimit() uint32 {
	if m != nil {
		return m.RecordCollectLimit
	}
	return 0
}

type OpenResult struct {
	Reward  *RewardSlot `protobuf:"bytes,1,opt,name=reward" json:"reward,omitempty"`
	Replace *RewardSlot `protobuf:"bytes,2,opt,name=replace" json:"replace,omitempty"`
}

func (m *OpenResult) Reset()                    { *m = OpenResult{} }
func (m *OpenResult) String() string            { return proto.CompactTextString(m) }
func (*OpenResult) ProtoMessage()               {}
func (*OpenResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

func (m *OpenResult) GetReward() *RewardSlot {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *OpenResult) GetReplace() *RewardSlot {
	if m != nil {
		return m.Replace
	}
	return nil
}

type OptionalOperation struct {
	Type        uint32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Combination []string `protobuf:"bytes,2,rep,name=combination" json:"combination,omitempty"`
}

func (m *OptionalOperation) Reset()                    { *m = OptionalOperation{} }
func (m *OptionalOperation) String() string            { return proto.CompactTextString(m) }
func (*OptionalOperation) ProtoMessage()               {}
func (*OptionalOperation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132} }

func (m *OptionalOperation) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *OptionalOperation) GetCombination() []string {
	if m != nil {
		return m.Combination
	}
	return nil
}

type OptionalOperationList struct {
	Seat          uint32               `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	OperationList []*OptionalOperation `protobuf:"bytes,2,rep,name=operation_list,json=operationList" json:"operation_list,omitempty"`
	TimeAdd       uint32               `protobuf:"varint,4,opt,name=time_add,json=timeAdd" json:"time_add,omitempty"`
	TimeFixed     uint32               `protobuf:"varint,5,opt,name=time_fixed,json=timeFixed" json:"time_fixed,omitempty"`
}

func (m *OptionalOperationList) Reset()                    { *m = OptionalOperationList{} }
func (m *OptionalOperationList) String() string            { return proto.CompactTextString(m) }
func (*OptionalOperationList) ProtoMessage()               {}
func (*OptionalOperationList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{133} }

func (m *OptionalOperationList) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *OptionalOperationList) GetOperationList() []*OptionalOperation {
	if m != nil {
		return m.OperationList
	}
	return nil
}

func (m *OptionalOperationList) GetTimeAdd() uint32 {
	if m != nil {
		return m.TimeAdd
	}
	return 0
}

func (m *OptionalOperationList) GetTimeFixed() uint32 {
	if m != nil {
		return m.TimeFixed
	}
	return 0
}

type PaymentSetting struct {
	OpenPayment         uint32                     `protobuf:"varint,1,opt,name=open_payment,json=openPayment" json:"open_payment,omitempty"`
	PaymentInfoShowType uint32                     `protobuf:"varint,2,opt,name=payment_info_show_type,json=paymentInfoShowType" json:"payment_info_show_type,omitempty"`
	PaymentInfo         string                     `protobuf:"bytes,3,opt,name=payment_info,json=paymentInfo" json:"payment_info,omitempty"`
	Wechat              *PaymentSetting_WechatData `protobuf:"bytes,4,opt,name=wechat" json:"wechat,omitempty"`
	Alipay              *PaymentSetting_AlipayData `protobuf:"bytes,5,opt,name=alipay" json:"alipay,omitempty"`
}

func (m *PaymentSetting) Reset()                    { *m = PaymentSetting{} }
func (m *PaymentSetting) String() string            { return proto.CompactTextString(m) }
func (*PaymentSetting) ProtoMessage()               {}
func (*PaymentSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

func (m *PaymentSetting) GetOpenPayment() uint32 {
	if m != nil {
		return m.OpenPayment
	}
	return 0
}

func (m *PaymentSetting) GetPaymentInfoShowType() uint32 {
	if m != nil {
		return m.PaymentInfoShowType
	}
	return 0
}

func (m *PaymentSetting) GetPaymentInfo() string {
	if m != nil {
		return m.PaymentInfo
	}
	return ""
}

func (m *PaymentSetting) GetWechat() *PaymentSetting_WechatData {
	if m != nil {
		return m.Wechat
	}
	return nil
}

func (m *PaymentSetting) GetAlipay() *PaymentSetting_AlipayData {
	if m != nil {
		return m.Alipay
	}
	return nil
}

type PaymentSetting_AlipayData struct {
	DisableCreate         bool   `protobuf:"varint,1,opt,name=disable_create,json=disableCreate" json:"disable_create,omitempty"`
	PaymentSourcePlatform uint32 `protobuf:"varint,2,opt,name=payment_source_platform,json=paymentSourcePlatform" json:"payment_source_platform,omitempty"`
}

func (m *PaymentSetting_AlipayData) Reset()                    { *m = PaymentSetting_AlipayData{} }
func (m *PaymentSetting_AlipayData) String() string            { return proto.CompactTextString(m) }
func (*PaymentSetting_AlipayData) ProtoMessage()               {}
func (*PaymentSetting_AlipayData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134, 0} }

func (m *PaymentSetting_AlipayData) GetDisableCreate() bool {
	if m != nil {
		return m.DisableCreate
	}
	return false
}

func (m *PaymentSetting_AlipayData) GetPaymentSourcePlatform() uint32 {
	if m != nil {
		return m.PaymentSourcePlatform
	}
	return 0
}

type PaymentSetting_WechatData struct {
	DisableCreate         bool   `protobuf:"varint,1,opt,name=disable_create,json=disableCreate" json:"disable_create,omitempty"`
	PaymentSourcePlatform uint32 `protobuf:"varint,2,opt,name=payment_source_platform,json=paymentSourcePlatform" json:"payment_source_platform,omitempty"`
	EnableCredit          bool   `protobuf:"varint,3,opt,name=enable_credit,json=enableCredit" json:"enable_credit,omitempty"`
}

func (m *PaymentSetting_WechatData) Reset()                    { *m = PaymentSetting_WechatData{} }
func (m *PaymentSetting_WechatData) String() string            { return proto.CompactTextString(m) }
func (*PaymentSetting_WechatData) ProtoMessage()               {}
func (*PaymentSetting_WechatData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134, 1} }

func (m *PaymentSetting_WechatData) GetDisableCreate() bool {
	if m != nil {
		return m.DisableCreate
	}
	return false
}

func (m *PaymentSetting_WechatData) GetPaymentSourcePlatform() uint32 {
	if m != nil {
		return m.PaymentSourcePlatform
	}
	return 0
}

func (m *PaymentSetting_WechatData) GetEnableCredit() bool {
	if m != nil {
		return m.EnableCredit
	}
	return false
}

type PlayerBaseView struct {
	AccountId uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AvatarId  uint32        `protobuf:"varint,2,opt,name=avatar_id,json=avatarId" json:"avatar_id,omitempty"`
	Title     uint32        `protobuf:"varint,3,opt,name=title" json:"title,omitempty"`
	Nickname  string        `protobuf:"bytes,4,opt,name=nickname" json:"nickname,omitempty"`
	Level     *AccountLevel `protobuf:"bytes,5,opt,name=level" json:"level,omitempty"`
	Level3    *AccountLevel `protobuf:"bytes,6,opt,name=level3" json:"level3,omitempty"`
}

func (m *PlayerBaseView) Reset()                    { *m = PlayerBaseView{} }
func (m *PlayerBaseView) String() string            { return proto.CompactTextString(m) }
func (*PlayerBaseView) ProtoMessage()               {}
func (*PlayerBaseView) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *PlayerBaseView) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *PlayerBaseView) GetAvatarId() uint32 {
	if m != nil {
		return m.AvatarId
	}
	return 0
}

func (m *PlayerBaseView) GetTitle() uint32 {
	if m != nil {
		return m.Title
	}
	return 0
}

func (m *PlayerBaseView) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *PlayerBaseView) GetLevel() *AccountLevel {
	if m != nil {
		return m.Level
	}
	return nil
}

func (m *PlayerBaseView) GetLevel3() *AccountLevel {
	if m != nil {
		return m.Level3
	}
	return nil
}

type PlayerGameView struct {
	AccountId uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AvatarId  uint32        `protobuf:"varint,2,opt,name=avatar_id,json=avatarId" json:"avatar_id,omitempty"`
	Title     uint32        `protobuf:"varint,3,opt,name=title" json:"title,omitempty"`
	Nickname  string        `protobuf:"bytes,4,opt,name=nickname" json:"nickname,omitempty"`
	Level     *AccountLevel `protobuf:"bytes,5,opt,name=level" json:"level,omitempty"`
	Character *Character    `protobuf:"bytes,6,opt,name=character" json:"character,omitempty"`
	Level3    *AccountLevel `protobuf:"bytes,7,opt,name=level3" json:"level3,omitempty"`
}

func (m *PlayerGameView) Reset()                    { *m = PlayerGameView{} }
func (m *PlayerGameView) String() string            { return proto.CompactTextString(m) }
func (*PlayerGameView) ProtoMessage()               {}
func (*PlayerGameView) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{136} }

func (m *PlayerGameView) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *PlayerGameView) GetAvatarId() uint32 {
	if m != nil {
		return m.AvatarId
	}
	return 0
}

func (m *PlayerGameView) GetTitle() uint32 {
	if m != nil {
		return m.Title
	}
	return 0
}

func (m *PlayerGameView) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *PlayerGameView) GetLevel() *AccountLevel {
	if m != nil {
		return m.Level
	}
	return nil
}

func (m *PlayerGameView) GetCharacter() *Character {
	if m != nil {
		return m.Character
	}
	return nil
}

func (m *PlayerGameView) GetLevel3() *AccountLevel {
	if m != nil {
		return m.Level3
	}
	return nil
}

type RecordAnGangAddGang struct {
	Seat       uint32                   `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Type       uint32                   `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Tiles      string                   `protobuf:"bytes,3,opt,name=tiles" json:"tiles,omitempty"`
	Doras      []string                 `protobuf:"bytes,6,rep,name=doras" json:"doras,omitempty"`
	Operations []*OptionalOperationList `protobuf:"bytes,7,rep,name=operations" json:"operations,omitempty"`
}

func (m *RecordAnGangAddGang) Reset()                    { *m = RecordAnGangAddGang{} }
func (m *RecordAnGangAddGang) String() string            { return proto.CompactTextString(m) }
func (*RecordAnGangAddGang) ProtoMessage()               {}
func (*RecordAnGangAddGang) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

func (m *RecordAnGangAddGang) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *RecordAnGangAddGang) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *RecordAnGangAddGang) GetTiles() string {
	if m != nil {
		return m.Tiles
	}
	return ""
}

func (m *RecordAnGangAddGang) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

func (m *RecordAnGangAddGang) GetOperations() []*OptionalOperationList {
	if m != nil {
		return m.Operations
	}
	return nil
}

type RecordBaBei struct {
	Seat       uint32                   `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Doras      []string                 `protobuf:"bytes,6,rep,name=doras" json:"doras,omitempty"`
	Operations []*OptionalOperationList `protobuf:"bytes,7,rep,name=operations" json:"operations,omitempty"`
	Moqie      bool                     `protobuf:"varint,8,opt,name=moqie" json:"moqie,omitempty"`
}

func (m *RecordBaBei) Reset()                    { *m = RecordBaBei{} }
func (m *RecordBaBei) String() string            { return proto.CompactTextString(m) }
func (*RecordBaBei) ProtoMessage()               {}
func (*RecordBaBei) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

func (m *RecordBaBei) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *RecordBaBei) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

func (m *RecordBaBei) GetOperations() []*OptionalOperationList {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *RecordBaBei) GetMoqie() bool {
	if m != nil {
		return m.Moqie
	}
	return false
}

type RecordChiPengGang struct {
	Seat      uint32                 `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Type      uint32                 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Tiles     []string               `protobuf:"bytes,3,rep,name=tiles" json:"tiles,omitempty"`
	Froms     []uint32               `protobuf:"varint,4,rep,packed,name=froms" json:"froms,omitempty"`
	Liqi      *LiQiSuccess           `protobuf:"bytes,5,opt,name=liqi" json:"liqi,omitempty"`
	Zhenting  []bool                 `protobuf:"varint,7,rep,packed,name=zhenting" json:"zhenting,omitempty"`
	Operation *OptionalOperationList `protobuf:"bytes,8,opt,name=operation" json:"operation,omitempty"`
}

func (m *RecordChiPengGang) Reset()                    { *m = RecordChiPengGang{} }
func (m *RecordChiPengGang) String() string            { return proto.CompactTextString(m) }
func (*RecordChiPengGang) ProtoMessage()               {}
func (*RecordChiPengGang) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *RecordChiPengGang) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *RecordChiPengGang) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *RecordChiPengGang) GetTiles() []string {
	if m != nil {
		return m.Tiles
	}
	return nil
}

func (m *RecordChiPengGang) GetFroms() []uint32 {
	if m != nil {
		return m.Froms
	}
	return nil
}

func (m *RecordChiPengGang) GetLiqi() *LiQiSuccess {
	if m != nil {
		return m.Liqi
	}
	return nil
}

func (m *RecordChiPengGang) GetZhenting() []bool {
	if m != nil {
		return m.Zhenting
	}
	return nil
}

func (m *RecordChiPengGang) GetOperation() *OptionalOperationList {
	if m != nil {
		return m.Operation
	}
	return nil
}

type RecordCollectedData struct {
	Uuid      string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Remarks   string `protobuf:"bytes,2,opt,name=remarks" json:"remarks,omitempty"`
	StartTime uint32 `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   uint32 `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (m *RecordCollectedData) Reset()                    { *m = RecordCollectedData{} }
func (m *RecordCollectedData) String() string            { return proto.CompactTextString(m) }
func (*RecordCollectedData) ProtoMessage()               {}
func (*RecordCollectedData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{140} }

func (m *RecordCollectedData) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *RecordCollectedData) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *RecordCollectedData) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *RecordCollectedData) GetEndTime() uint32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type RecordDealTile struct {
	Seat          uint32                 `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Tile          string                 `protobuf:"bytes,2,opt,name=tile" json:"tile,omitempty"`
	LeftTileCount uint32                 `protobuf:"varint,3,opt,name=left_tile_count,json=leftTileCount" json:"left_tile_count,omitempty"`
	Liqi          *LiQiSuccess           `protobuf:"bytes,5,opt,name=liqi" json:"liqi,omitempty"`
	Doras         []string               `protobuf:"bytes,6,rep,name=doras" json:"doras,omitempty"`
	Zhenting      []bool                 `protobuf:"varint,7,rep,packed,name=zhenting" json:"zhenting,omitempty"`
	Operation     *OptionalOperationList `protobuf:"bytes,8,opt,name=operation" json:"operation,omitempty"`
}

func (m *RecordDealTile) Reset()                    { *m = RecordDealTile{} }
func (m *RecordDealTile) String() string            { return proto.CompactTextString(m) }
func (*RecordDealTile) ProtoMessage()               {}
func (*RecordDealTile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *RecordDealTile) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *RecordDealTile) GetTile() string {
	if m != nil {
		return m.Tile
	}
	return ""
}

func (m *RecordDealTile) GetLeftTileCount() uint32 {
	if m != nil {
		return m.LeftTileCount
	}
	return 0
}

func (m *RecordDealTile) GetLiqi() *LiQiSuccess {
	if m != nil {
		return m.Liqi
	}
	return nil
}

func (m *RecordDealTile) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

func (m *RecordDealTile) GetZhenting() []bool {
	if m != nil {
		return m.Zhenting
	}
	return nil
}

func (m *RecordDealTile) GetOperation() *OptionalOperationList {
	if m != nil {
		return m.Operation
	}
	return nil
}

type RecordDiscardTile struct {
	Seat       uint32                   `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Tile       string                   `protobuf:"bytes,2,opt,name=tile" json:"tile,omitempty"`
	IsLiqi     bool                     `protobuf:"varint,3,opt,name=is_liqi,json=isLiqi" json:"is_liqi,omitempty"`
	Moqie      bool                     `protobuf:"varint,5,opt,name=moqie" json:"moqie,omitempty"`
	Zhenting   []bool                   `protobuf:"varint,6,rep,packed,name=zhenting" json:"zhenting,omitempty"`
	Tingpais   []*TingPaiInfo           `protobuf:"bytes,7,rep,name=tingpais" json:"tingpais,omitempty"`
	Doras      []string                 `protobuf:"bytes,8,rep,name=doras" json:"doras,omitempty"`
	IsWliqi    bool                     `protobuf:"varint,9,opt,name=is_wliqi,json=isWliqi" json:"is_wliqi,omitempty"`
	Operations []*OptionalOperationList `protobuf:"bytes,10,rep,name=operations" json:"operations,omitempty"`
}

func (m *RecordDiscardTile) Reset()                    { *m = RecordDiscardTile{} }
func (m *RecordDiscardTile) String() string            { return proto.CompactTextString(m) }
func (*RecordDiscardTile) ProtoMessage()               {}
func (*RecordDiscardTile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{142} }

func (m *RecordDiscardTile) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *RecordDiscardTile) GetTile() string {
	if m != nil {
		return m.Tile
	}
	return ""
}

func (m *RecordDiscardTile) GetIsLiqi() bool {
	if m != nil {
		return m.IsLiqi
	}
	return false
}

func (m *RecordDiscardTile) GetMoqie() bool {
	if m != nil {
		return m.Moqie
	}
	return false
}

func (m *RecordDiscardTile) GetZhenting() []bool {
	if m != nil {
		return m.Zhenting
	}
	return nil
}

func (m *RecordDiscardTile) GetTingpais() []*TingPaiInfo {
	if m != nil {
		return m.Tingpais
	}
	return nil
}

func (m *RecordDiscardTile) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

func (m *RecordDiscardTile) GetIsWliqi() bool {
	if m != nil {
		return m.IsWliqi
	}
	return false
}

func (m *RecordDiscardTile) GetOperations() []*OptionalOperationList {
	if m != nil {
		return m.Operations
	}
	return nil
}

type RecordGame struct {
	Uuid      string                    `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	StartTime uint32                    `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   uint32                    `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Config    *GameConfig               `protobuf:"bytes,5,opt,name=config" json:"config,omitempty"`
	Accounts  []*RecordGame_AccountInfo `protobuf:"bytes,11,rep,name=accounts" json:"accounts,omitempty"`
	Result    *GameEndResult            `protobuf:"bytes,12,opt,name=result" json:"result,omitempty"`
}

func (m *RecordGame) Reset()                    { *m = RecordGame{} }
func (m *RecordGame) String() string            { return proto.CompactTextString(m) }
func (*RecordGame) ProtoMessage()               {}
func (*RecordGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

func (m *RecordGame) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *RecordGame) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *RecordGame) GetEndTime() uint32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *RecordGame) GetConfig() *GameConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *RecordGame) GetAccounts() []*RecordGame_AccountInfo {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *RecordGame) GetResult() *GameEndResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type RecordGame_AccountInfo struct {
	AccountId uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Seat      uint32        `protobuf:"varint,2,opt,name=seat" json:"seat,omitempty"`
	Nickname  string        `protobuf:"bytes,3,opt,name=nickname" json:"nickname,omitempty"`
	AvatarId  uint32        `protobuf:"varint,4,opt,name=avatar_id,json=avatarId" json:"avatar_id,omitempty"`
	Character *Character    `protobuf:"bytes,5,opt,name=character" json:"character,omitempty"`
	Title     uint32        `protobuf:"varint,6,opt,name=title" json:"title,omitempty"`
	Level     *AccountLevel `protobuf:"bytes,7,opt,name=level" json:"level,omitempty"`
	Level3    *AccountLevel `protobuf:"bytes,8,opt,name=level3" json:"level3,omitempty"`
}

func (m *RecordGame_AccountInfo) Reset()                    { *m = RecordGame_AccountInfo{} }
func (m *RecordGame_AccountInfo) String() string            { return proto.CompactTextString(m) }
func (*RecordGame_AccountInfo) ProtoMessage()               {}
func (*RecordGame_AccountInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143, 0} }

func (m *RecordGame_AccountInfo) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *RecordGame_AccountInfo) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *RecordGame_AccountInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *RecordGame_AccountInfo) GetAvatarId() uint32 {
	if m != nil {
		return m.AvatarId
	}
	return 0
}

func (m *RecordGame_AccountInfo) GetCharacter() *Character {
	if m != nil {
		return m.Character
	}
	return nil
}

func (m *RecordGame_AccountInfo) GetTitle() uint32 {
	if m != nil {
		return m.Title
	}
	return 0
}

func (m *RecordGame_AccountInfo) GetLevel() *AccountLevel {
	if m != nil {
		return m.Level
	}
	return nil
}

func (m *RecordGame_AccountInfo) GetLevel3() *AccountLevel {
	if m != nil {
		return m.Level3
	}
	return nil
}

type RecordHule struct {
	Hules       []*HuleInfo `protobuf:"bytes,1,rep,name=hules" json:"hules,omitempty"`
	OldScores   []int32     `protobuf:"varint,2,rep,packed,name=old_scores,json=oldScores" json:"old_scores,omitempty"`
	DeltaScores []int32     `protobuf:"varint,3,rep,packed,name=delta_scores,json=deltaScores" json:"delta_scores,omitempty"`
	WaitTimeout uint32      `protobuf:"varint,4,opt,name=wait_timeout,json=waitTimeout" json:"wait_timeout,omitempty"`
	Scores      []int32     `protobuf:"varint,5,rep,packed,name=scores" json:"scores,omitempty"`
	Gameend     *GameEnd    `protobuf:"bytes,6,opt,name=gameend" json:"gameend,omitempty"`
	Doras       []string    `protobuf:"bytes,7,rep,name=doras" json:"doras,omitempty"`
}

func (m *RecordHule) Reset()                    { *m = RecordHule{} }
func (m *RecordHule) String() string            { return proto.CompactTextString(m) }
func (*RecordHule) ProtoMessage()               {}
func (*RecordHule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144} }

func (m *RecordHule) GetHules() []*HuleInfo {
	if m != nil {
		return m.Hules
	}
	return nil
}

func (m *RecordHule) GetOldScores() []int32 {
	if m != nil {
		return m.OldScores
	}
	return nil
}

func (m *RecordHule) GetDeltaScores() []int32 {
	if m != nil {
		return m.DeltaScores
	}
	return nil
}

func (m *RecordHule) GetWaitTimeout() uint32 {
	if m != nil {
		return m.WaitTimeout
	}
	return 0
}

func (m *RecordHule) GetScores() []int32 {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *RecordHule) GetGameend() *GameEnd {
	if m != nil {
		return m.Gameend
	}
	return nil
}

func (m *RecordHule) GetDoras() []string {
	if m != nil {
		return m.Doras
	}
	return nil
}

type RecordLiuJu struct {
	Type           uint32       `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Gameend        *GameEnd     `protobuf:"bytes,2,opt,name=gameend" json:"gameend,omitempty"`
	Seat           uint32       `protobuf:"varint,3,opt,name=seat" json:"seat,omitempty"`
	Tiles          []string     `protobuf:"bytes,4,rep,name=tiles" json:"tiles,omitempty"`
	Liqi           *LiQiSuccess `protobuf:"bytes,5,opt,name=liqi" json:"liqi,omitempty"`
	Allplayertiles []string     `protobuf:"bytes,6,rep,name=allplayertiles" json:"allplayertiles,omitempty"`
}

func (m *RecordLiuJu) Reset()                    { *m = RecordLiuJu{} }
func (m *RecordLiuJu) String() string            { return proto.CompactTextString(m) }
func (*RecordLiuJu) ProtoMessage()               {}
func (*RecordLiuJu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *RecordLiuJu) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *RecordLiuJu) GetGameend() *GameEnd {
	if m != nil {
		return m.Gameend
	}
	return nil
}

func (m *RecordLiuJu) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *RecordLiuJu) GetTiles() []string {
	if m != nil {
		return m.Tiles
	}
	return nil
}

func (m *RecordLiuJu) GetLiqi() *LiQiSuccess {
	if m != nil {
		return m.Liqi
	}
	return nil
}

func (m *RecordLiuJu) GetAllplayertiles() []string {
	if m != nil {
		return m.Allplayertiles
	}
	return nil
}

type RecordNewRound struct {
	Chang         uint32                    `protobuf:"varint,1,opt,name=chang" json:"chang,omitempty"`
	Ju            uint32                    `protobuf:"varint,2,opt,name=ju" json:"ju,omitempty"`
	Ben           uint32                    `protobuf:"varint,3,opt,name=ben" json:"ben,omitempty"`
	Dora          string                    `protobuf:"bytes,4,opt,name=dora" json:"dora,omitempty"`
	Scores        []int32                   `protobuf:"varint,5,rep,packed,name=scores" json:"scores,omitempty"`
	Liqibang      uint32                    `protobuf:"varint,6,opt,name=liqibang" json:"liqibang,omitempty"`
	Tiles0        []string                  `protobuf:"bytes,7,rep,name=tiles0" json:"tiles0,omitempty"`
	Tiles1        []string                  `protobuf:"bytes,8,rep,name=tiles1" json:"tiles1,omitempty"`
	Tiles2        []string                  `protobuf:"bytes,9,rep,name=tiles2" json:"tiles2,omitempty"`
	Tiles3        []string                  `protobuf:"bytes,10,rep,name=tiles3" json:"tiles3,omitempty"`
	Tingpai       []*RecordNewRound_TingPai `protobuf:"bytes,11,rep,name=tingpai" json:"tingpai,omitempty"`
	Operation     *OptionalOperationList    `protobuf:"bytes,12,opt,name=operation" json:"operation,omitempty"`
	Md5           string                    `protobuf:"bytes,13,opt,name=md5" json:"md5,omitempty"`
	Paishan       string                    `protobuf:"bytes,14,opt,name=paishan" json:"paishan,omitempty"`
	LeftTileCount uint32                    `protobuf:"varint,15,opt,name=left_tile_count,json=leftTileCount" json:"left_tile_count,omitempty"`
}

func (m *RecordNewRound) Reset()                    { *m = RecordNewRound{} }
func (m *RecordNewRound) String() string            { return proto.CompactTextString(m) }
func (*RecordNewRound) ProtoMessage()               {}
func (*RecordNewRound) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146} }

func (m *RecordNewRound) GetChang() uint32 {
	if m != nil {
		return m.Chang
	}
	return 0
}

func (m *RecordNewRound) GetJu() uint32 {
	if m != nil {
		return m.Ju
	}
	return 0
}

func (m *RecordNewRound) GetBen() uint32 {
	if m != nil {
		return m.Ben
	}
	return 0
}

func (m *RecordNewRound) GetDora() string {
	if m != nil {
		return m.Dora
	}
	return ""
}

func (m *RecordNewRound) GetScores() []int32 {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *RecordNewRound) GetLiqibang() uint32 {
	if m != nil {
		return m.Liqibang
	}
	return 0
}

func (m *RecordNewRound) GetTiles0() []string {
	if m != nil {
		return m.Tiles0
	}
	return nil
}

func (m *RecordNewRound) GetTiles1() []string {
	if m != nil {
		return m.Tiles1
	}
	return nil
}

func (m *RecordNewRound) GetTiles2() []string {
	if m != nil {
		return m.Tiles2
	}
	return nil
}

func (m *RecordNewRound) GetTiles3() []string {
	if m != nil {
		return m.Tiles3
	}
	return nil
}

func (m *RecordNewRound) GetTingpai() []*RecordNewRound_TingPai {
	if m != nil {
		return m.Tingpai
	}
	return nil
}

func (m *RecordNewRound) GetOperation() *OptionalOperationList {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *RecordNewRound) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *RecordNewRound) GetPaishan() string {
	if m != nil {
		return m.Paishan
	}
	return ""
}

func (m *RecordNewRound) GetLeftTileCount() uint32 {
	if m != nil {
		return m.LeftTileCount
	}
	return 0
}

type RecordNewRound_TingPai struct {
	Seat      uint32         `protobuf:"varint,1,opt,name=seat" json:"seat,omitempty"`
	Tingpais1 []*TingPaiInfo `protobuf:"bytes,2,rep,name=tingpais1" json:"tingpais1,omitempty"`
}

func (m *RecordNewRound_TingPai) Reset()                    { *m = RecordNewRound_TingPai{} }
func (m *RecordNewRound_TingPai) String() string            { return proto.CompactTextString(m) }
func (*RecordNewRound_TingPai) ProtoMessage()               {}
func (*RecordNewRound_TingPai) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146, 0} }

func (m *RecordNewRound_TingPai) GetSeat() uint32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *RecordNewRound_TingPai) GetTingpais1() []*TingPaiInfo {
	if m != nil {
		return m.Tingpais1
	}
	return nil
}

type RecordNoTile struct {
	Liujumanguan bool                `protobuf:"varint,1,opt,name=liujumanguan" json:"liujumanguan,omitempty"`
	Players      []*NoTilePlayerInfo `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	Scores       []*NoTileScoreInfo  `protobuf:"bytes,3,rep,name=scores" json:"scores,omitempty"`
	Gameend      bool                `protobuf:"varint,4,opt,name=gameend" json:"gameend,omitempty"`
}

func (m *RecordNoTile) Reset()                    { *m = RecordNoTile{} }
func (m *RecordNoTile) String() string            { return proto.CompactTextString(m) }
func (*RecordNoTile) ProtoMessage()               {}
func (*RecordNoTile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{147} }

func (m *RecordNoTile) GetLiujumanguan() bool {
	if m != nil {
		return m.Liujumanguan
	}
	return false
}

func (m *RecordNoTile) GetPlayers() []*NoTilePlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *RecordNoTile) GetScores() []*NoTileScoreInfo {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *RecordNoTile) GetGameend() bool {
	if m != nil {
		return m.Gameend
	}
	return false
}

type ReqAccountInfo struct {
	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ReqAccountInfo) Reset()                    { *m = ReqAccountInfo{} }
func (m *ReqAccountInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqAccountInfo) ProtoMessage()               {}
func (*ReqAccountInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148} }

func (m *ReqAccountInfo) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type ReqAccountList struct {
	AccountIdList []uint32 `protobuf:"varint,1,rep,packed,name=account_id_list,json=accountIdList" json:"account_id_list,omitempty"`
}

func (m *ReqAccountList) Reset()                    { *m = ReqAccountList{} }
func (m *ReqAccountList) String() string            { return proto.CompactTextString(m) }
func (*ReqAccountList) ProtoMessage()               {}
func (*ReqAccountList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{149} }

func (m *ReqAccountList) GetAccountIdList() []uint32 {
	if m != nil {
		return m.AccountIdList
	}
	return nil
}

type ReqAccountStatisticInfo struct {
	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ReqAccountStatisticInfo) Reset()                    { *m = ReqAccountStatisticInfo{} }
func (m *ReqAccountStatisticInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqAccountStatisticInfo) ProtoMessage()               {}
func (*ReqAccountStatisticInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{150} }

func (m *ReqAccountStatisticInfo) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type ReqAddCollectedGameRecord struct {
	Uuid      string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Remarks   string `protobuf:"bytes,2,opt,name=remarks" json:"remarks,omitempty"`
	StartTime uint32 `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   uint32 `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (m *ReqAddCollectedGameRecord) Reset()                    { *m = ReqAddCollectedGameRecord{} }
func (m *ReqAddCollectedGameRecord) String() string            { return proto.CompactTextString(m) }
func (*ReqAddCollectedGameRecord) ProtoMessage()               {}
func (*ReqAddCollectedGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{151} }

func (m *ReqAddCollectedGameRecord) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ReqAddCollectedGameRecord) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *ReqAddCollectedGameRecord) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ReqAddCollectedGameRecord) GetEndTime() uint32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type ReqApplyFriend struct {
	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
}

func (m *ReqApplyFriend) Reset()                    { *m = ReqApplyFriend{} }
func (m *ReqApplyFriend) String() string            { return proto.CompactTextString(m) }
func (*ReqApplyFriend) ProtoMessage()               {}
func (*ReqApplyFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{152} }

func (m *ReqApplyFriend) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

type ReqAuthGame struct {
	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	GameUuid  string `protobuf:"bytes,3,opt,name=game_uuid,json=gameUuid" json:"game_uuid,omitempty"`
}

func (m *ReqAuthGame) Reset()                    { *m = ReqAuthGame{} }
func (m *ReqAuthGame) String() string            { return proto.CompactTextString(m) }
func (*ReqAuthGame) ProtoMessage()               {}
func (*ReqAuthGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{153} }

func (m *ReqAuthGame) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqAuthGame) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ReqAuthGame) GetGameUuid() string {
	if m != nil {
		return m.GameUuid
	}
	return ""
}

type ReqBindAccount struct {
	Account  string `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *ReqBindAccount) Reset()                    { *m = ReqBindAccount{} }
func (m *ReqBindAccount) String() string            { return proto.CompactTextString(m) }
func (*ReqBindAccount) ProtoMessage()               {}
func (*ReqBindAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{154} }

func (m *ReqBindAccount) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *ReqBindAccount) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ReqBindEmail struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *ReqBindEmail) Reset()                    { *m = ReqBindEmail{} }
func (m *ReqBindEmail) String() string            { return proto.CompactTextString(m) }
func (*ReqBindEmail) ProtoMessage()               {}
func (*ReqBindEmail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{155} }

func (m *ReqBindEmail) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ReqBindEmail) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ReqBindEmail) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ReqBindPhoneNumber struct {
	Code        string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	SecureToken string `protobuf:"bytes,2,opt,name=secure_token,json=secureToken" json:"secure_token,omitempty"`
}

func (m *ReqBindPhoneNumber) Reset()                    { *m = ReqBindPhoneNumber{} }
func (m *ReqBindPhoneNumber) String() string            { return proto.CompactTextString(m) }
func (*ReqBindPhoneNumber) ProtoMessage()               {}
func (*ReqBindPhoneNumber) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{156} }

func (m *ReqBindPhoneNumber) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ReqBindPhoneNumber) GetSecureToken() string {
	if m != nil {
		return m.SecureToken
	}
	return ""
}

type ReqBroadcastInGame struct {
	Content    string `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	ExceptSelf bool   `protobuf:"varint,2,opt,name=except_self,json=exceptSelf" json:"except_self,omitempty"`
}

func (m *ReqBroadcastInGame) Reset()                    { *m = ReqBroadcastInGame{} }
func (m *ReqBroadcastInGame) String() string            { return proto.CompactTextString(m) }
func (*ReqBroadcastInGame) ProtoMessage()               {}
func (*ReqBroadcastInGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{157} }

func (m *ReqBroadcastInGame) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ReqBroadcastInGame) GetExceptSelf() bool {
	if m != nil {
		return m.ExceptSelf
	}
	return false
}

type ReqBuyFromChestShop struct {
	GoodsId uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	Count   uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ReqBuyFromChestShop) Reset()                    { *m = ReqBuyFromChestShop{} }
func (m *ReqBuyFromChestShop) String() string            { return proto.CompactTextString(m) }
func (*ReqBuyFromChestShop) ProtoMessage()               {}
func (*ReqBuyFromChestShop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{158} }

func (m *ReqBuyFromChestShop) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqBuyFromChestShop) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReqBuyFromShop struct {
	GoodsId uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	Count   uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ReqBuyFromShop) Reset()                    { *m = ReqBuyFromShop{} }
func (m *ReqBuyFromShop) String() string            { return proto.CompactTextString(m) }
func (*ReqBuyFromShop) ProtoMessage()               {}
func (*ReqBuyFromShop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{159} }

func (m *ReqBuyFromShop) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqBuyFromShop) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReqBuyFromZHP struct {
	GoodsId uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	Count   uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ReqBuyFromZHP) Reset()                    { *m = ReqBuyFromZHP{} }
func (m *ReqBuyFromZHP) String() string            { return proto.CompactTextString(m) }
func (*ReqBuyFromZHP) ProtoMessage()               {}
func (*ReqBuyFromZHP) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{160} }

func (m *ReqBuyFromZHP) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqBuyFromZHP) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReqBuyShiLian struct {
	Type uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
}

func (m *ReqBuyShiLian) Reset()                    { *m = ReqBuyShiLian{} }
func (m *ReqBuyShiLian) String() string            { return proto.CompactTextString(m) }
func (*ReqBuyShiLian) ProtoMessage()               {}
func (*ReqBuyShiLian) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{161} }

func (m *ReqBuyShiLian) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type ReqCancelGooglePlayOrder struct {
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ReqCancelGooglePlayOrder) Reset()                    { *m = ReqCancelGooglePlayOrder{} }
func (m *ReqCancelGooglePlayOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCancelGooglePlayOrder) ProtoMessage()               {}
func (*ReqCancelGooglePlayOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{162} }

func (m *ReqCancelGooglePlayOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ReqCancelMatchQueue struct {
	MatchMode uint32 `protobuf:"varint,1,opt,name=match_mode,json=matchMode" json:"match_mode,omitempty"`
}

func (m *ReqCancelMatchQueue) Reset()                    { *m = ReqCancelMatchQueue{} }
func (m *ReqCancelMatchQueue) String() string            { return proto.CompactTextString(m) }
func (*ReqCancelMatchQueue) ProtoMessage()               {}
func (*ReqCancelMatchQueue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{163} }

func (m *ReqCancelMatchQueue) GetMatchMode() uint32 {
	if m != nil {
		return m.MatchMode
	}
	return 0
}

type ReqChangeAvatar struct {
	AvatarId uint32 `protobuf:"varint,1,opt,name=avatar_id,json=avatarId" json:"avatar_id,omitempty"`
}

func (m *ReqChangeAvatar) Reset()                    { *m = ReqChangeAvatar{} }
func (m *ReqChangeAvatar) String() string            { return proto.CompactTextString(m) }
func (*ReqChangeAvatar) ProtoMessage()               {}
func (*ReqChangeAvatar) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{164} }

func (m *ReqChangeAvatar) GetAvatarId() uint32 {
	if m != nil {
		return m.AvatarId
	}
	return 0
}

type ReqChangeCharacterSkin struct {
	CharacterId uint32 `protobuf:"varint,1,opt,name=character_id,json=characterId" json:"character_id,omitempty"`
	Skin        uint32 `protobuf:"varint,2,opt,name=skin" json:"skin,omitempty"`
}

func (m *ReqChangeCharacterSkin) Reset()                    { *m = ReqChangeCharacterSkin{} }
func (m *ReqChangeCharacterSkin) String() string            { return proto.CompactTextString(m) }
func (*ReqChangeCharacterSkin) ProtoMessage()               {}
func (*ReqChangeCharacterSkin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{165} }

func (m *ReqChangeCharacterSkin) GetCharacterId() uint32 {
	if m != nil {
		return m.CharacterId
	}
	return 0
}

func (m *ReqChangeCharacterSkin) GetSkin() uint32 {
	if m != nil {
		return m.Skin
	}
	return 0
}

type ReqChangeCharacterView struct {
	CharacterId uint32 `protobuf:"varint,1,opt,name=character_id,json=characterId" json:"character_id,omitempty"`
	Slot        uint32 `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	ItemId      uint32 `protobuf:"varint,3,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (m *ReqChangeCharacterView) Reset()                    { *m = ReqChangeCharacterView{} }
func (m *ReqChangeCharacterView) String() string            { return proto.CompactTextString(m) }
func (*ReqChangeCharacterView) ProtoMessage()               {}
func (*ReqChangeCharacterView) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{166} }

func (m *ReqChangeCharacterView) GetCharacterId() uint32 {
	if m != nil {
		return m.CharacterId
	}
	return 0
}

func (m *ReqChangeCharacterView) GetSlot() uint32 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *ReqChangeCharacterView) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

type ReqChangeCollectedGameRecordRemarks struct {
	Uuid    string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Remarks string `protobuf:"bytes,2,opt,name=remarks" json:"remarks,omitempty"`
}

func (m *ReqChangeCollectedGameRecordRemarks) Reset()         { *m = ReqChangeCollectedGameRecordRemarks{} }
func (m *ReqChangeCollectedGameRecordRemarks) String() string { return proto.CompactTextString(m) }
func (*ReqChangeCollectedGameRecordRemarks) ProtoMessage()    {}
func (*ReqChangeCollectedGameRecordRemarks) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{167}
}

func (m *ReqChangeCollectedGameRecordRemarks) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ReqChangeCollectedGameRecordRemarks) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

type ReqChangeCommonView struct {
	Slot  uint32 `protobuf:"varint,1,opt,name=slot" json:"slot,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ReqChangeCommonView) Reset()                    { *m = ReqChangeCommonView{} }
func (m *ReqChangeCommonView) String() string            { return proto.CompactTextString(m) }
func (*ReqChangeCommonView) ProtoMessage()               {}
func (*ReqChangeCommonView) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{168} }

func (m *ReqChangeCommonView) GetSlot() uint32 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *ReqChangeCommonView) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ReqChangeMainCharacter struct {
	CharacterId uint32 `protobuf:"varint,1,opt,name=character_id,json=characterId" json:"character_id,omitempty"`
}

func (m *ReqChangeMainCharacter) Reset()                    { *m = ReqChangeMainCharacter{} }
func (m *ReqChangeMainCharacter) String() string            { return proto.CompactTextString(m) }
func (*ReqChangeMainCharacter) ProtoMessage()               {}
func (*ReqChangeMainCharacter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{169} }

func (m *ReqChangeMainCharacter) GetCharacterId() uint32 {
	if m != nil {
		return m.CharacterId
	}
	return 0
}

type ReqChiPengGang struct {
	Type            uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Index           uint32 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	CancelOperation bool   `protobuf:"varint,3,opt,name=cancel_operation,json=cancelOperation" json:"cancel_operation,omitempty"`
	Timeuse         uint32 `protobuf:"varint,6,opt,name=timeuse" json:"timeuse,omitempty"`
}

func (m *ReqChiPengGang) Reset()                    { *m = ReqChiPengGang{} }
func (m *ReqChiPengGang) String() string            { return proto.CompactTextString(m) }
func (*ReqChiPengGang) ProtoMessage()               {}
func (*ReqChiPengGang) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{170} }

func (m *ReqChiPengGang) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqChiPengGang) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ReqChiPengGang) GetCancelOperation() bool {
	if m != nil {
		return m.CancelOperation
	}
	return false
}

func (m *ReqChiPengGang) GetTimeuse() uint32 {
	if m != nil {
		return m.Timeuse
	}
	return 0
}

type ReqClientMessage struct {
	Timestamp uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ReqClientMessage) Reset()                    { *m = ReqClientMessage{} }
func (m *ReqClientMessage) String() string            { return proto.CompactTextString(m) }
func (*ReqClientMessage) ProtoMessage()               {}
func (*ReqClientMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{171} }

func (m *ReqClientMessage) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ReqClientMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReqCommon struct {
}

func (m *ReqCommon) Reset()                    { *m = ReqCommon{} }
func (m *ReqCommon) String() string            { return proto.CompactTextString(m) }
func (*ReqCommon) ProtoMessage()               {}
func (*ReqCommon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{172} }

type ReqCompleteActivityTask struct {
	TaskId uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
}

func (m *ReqCompleteActivityTask) Reset()                    { *m = ReqCompleteActivityTask{} }
func (m *ReqCompleteActivityTask) String() string            { return proto.CompactTextString(m) }
func (*ReqCompleteActivityTask) ProtoMessage()               {}
func (*ReqCompleteActivityTask) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{173} }

func (m *ReqCompleteActivityTask) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type ReqComposeShard struct {
	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (m *ReqComposeShard) Reset()                    { *m = ReqComposeShard{} }
func (m *ReqComposeShard) String() string            { return proto.CompactTextString(m) }
func (*ReqComposeShard) ProtoMessage()               {}
func (*ReqComposeShard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{174} }

func (m *ReqComposeShard) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

type ReqCreateAlipayAppOrder struct {
	GoodsId    uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId  uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ReqCreateAlipayAppOrder) Reset()                    { *m = ReqCreateAlipayAppOrder{} }
func (m *ReqCreateAlipayAppOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateAlipayAppOrder) ProtoMessage()               {}
func (*ReqCreateAlipayAppOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{175} }

func (m *ReqCreateAlipayAppOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateAlipayAppOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateAlipayAppOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type ReqCreateAlipayOrder struct {
	GoodsId         uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType      uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId       uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AlipayTradeType string `protobuf:"bytes,4,opt,name=alipay_trade_type,json=alipayTradeType" json:"alipay_trade_type,omitempty"`
	ReturnUrl       string `protobuf:"bytes,5,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
}

func (m *ReqCreateAlipayOrder) Reset()                    { *m = ReqCreateAlipayOrder{} }
func (m *ReqCreateAlipayOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateAlipayOrder) ProtoMessage()               {}
func (*ReqCreateAlipayOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{176} }

func (m *ReqCreateAlipayOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateAlipayOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateAlipayOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateAlipayOrder) GetAlipayTradeType() string {
	if m != nil {
		return m.AlipayTradeType
	}
	return ""
}

func (m *ReqCreateAlipayOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

type ReqCreateAlipayScanOrder struct {
	GoodsId    uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId  uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ReqCreateAlipayScanOrder) Reset()                    { *m = ReqCreateAlipayScanOrder{} }
func (m *ReqCreateAlipayScanOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateAlipayScanOrder) ProtoMessage()               {}
func (*ReqCreateAlipayScanOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{177} }

func (m *ReqCreateAlipayScanOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateAlipayScanOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateAlipayScanOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type ReqCreateBillingOrder struct {
	GoodsId         uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	PaymentPlatform uint32 `protobuf:"varint,2,opt,name=payment_platform,json=paymentPlatform" json:"payment_platform,omitempty"`
	ClientType      uint32 `protobuf:"varint,3,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId       uint32 `protobuf:"varint,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ReqCreateBillingOrder) Reset()                    { *m = ReqCreateBillingOrder{} }
func (m *ReqCreateBillingOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateBillingOrder) ProtoMessage()               {}
func (*ReqCreateBillingOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{178} }

func (m *ReqCreateBillingOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateBillingOrder) GetPaymentPlatform() uint32 {
	if m != nil {
		return m.PaymentPlatform
	}
	return 0
}

func (m *ReqCreateBillingOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateBillingOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type ReqCreateENAlipayOrder struct {
	GoodsId     uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType  uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId   uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ReturnUrl   string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ReqCreateENAlipayOrder) Reset()                    { *m = ReqCreateENAlipayOrder{} }
func (m *ReqCreateENAlipayOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateENAlipayOrder) ProtoMessage()               {}
func (*ReqCreateENAlipayOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{179} }

func (m *ReqCreateENAlipayOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateENAlipayOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateENAlipayOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateENAlipayOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *ReqCreateENAlipayOrder) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ReqCreateENJCBOrder struct {
	GoodsId     uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType  uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId   uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ReturnUrl   string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ReqCreateENJCBOrder) Reset()                    { *m = ReqCreateENJCBOrder{} }
func (m *ReqCreateENJCBOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateENJCBOrder) ProtoMessage()               {}
func (*ReqCreateENJCBOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{180} }

func (m *ReqCreateENJCBOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateENJCBOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateENJCBOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateENJCBOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *ReqCreateENJCBOrder) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ReqCreateENMasterCardOrder struct {
	GoodsId     uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType  uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId   uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ReturnUrl   string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ReqCreateENMasterCardOrder) Reset()                    { *m = ReqCreateENMasterCardOrder{} }
func (m *ReqCreateENMasterCardOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateENMasterCardOrder) ProtoMessage()               {}
func (*ReqCreateENMasterCardOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{181} }

func (m *ReqCreateENMasterCardOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateENMasterCardOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateENMasterCardOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateENMasterCardOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *ReqCreateENMasterCardOrder) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ReqCreateENPaypalOrder struct {
	GoodsId     uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType  uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId   uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ReturnUrl   string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ReqCreateENPaypalOrder) Reset()                    { *m = ReqCreateENPaypalOrder{} }
func (m *ReqCreateENPaypalOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateENPaypalOrder) ProtoMessage()               {}
func (*ReqCreateENPaypalOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{182} }

func (m *ReqCreateENPaypalOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateENPaypalOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateENPaypalOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateENPaypalOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *ReqCreateENPaypalOrder) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ReqCreateENVisaOrder struct {
	GoodsId     uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType  uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId   uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ReturnUrl   string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ReqCreateENVisaOrder) Reset()                    { *m = ReqCreateENVisaOrder{} }
func (m *ReqCreateENVisaOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateENVisaOrder) ProtoMessage()               {}
func (*ReqCreateENVisaOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{183} }

func (m *ReqCreateENVisaOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateENVisaOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateENVisaOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateENVisaOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *ReqCreateENVisaOrder) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ReqCreateEmailVerifyCode struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Usage uint32 `protobuf:"varint,2,opt,name=usage" json:"usage,omitempty"`
}

func (m *ReqCreateEmailVerifyCode) Reset()                    { *m = ReqCreateEmailVerifyCode{} }
func (m *ReqCreateEmailVerifyCode) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateEmailVerifyCode) ProtoMessage()               {}
func (*ReqCreateEmailVerifyCode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{184} }

func (m *ReqCreateEmailVerifyCode) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ReqCreateEmailVerifyCode) GetUsage() uint32 {
	if m != nil {
		return m.Usage
	}
	return 0
}

type ReqCreateJPAuOrder struct {
	GoodsId     uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType  uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId   uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ReturnUrl   string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ReqCreateJPAuOrder) Reset()                    { *m = ReqCreateJPAuOrder{} }
func (m *ReqCreateJPAuOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateJPAuOrder) ProtoMessage()               {}
func (*ReqCreateJPAuOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{185} }

func (m *ReqCreateJPAuOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateJPAuOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateJPAuOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateJPAuOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *ReqCreateJPAuOrder) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ReqCreateJPCreditCardOrder struct {
	GoodsId     uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType  uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId   uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ReturnUrl   string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ReqCreateJPCreditCardOrder) Reset()                    { *m = ReqCreateJPCreditCardOrder{} }
func (m *ReqCreateJPCreditCardOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateJPCreditCardOrder) ProtoMessage()               {}
func (*ReqCreateJPCreditCardOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{186} }

func (m *ReqCreateJPCreditCardOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateJPCreditCardOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateJPCreditCardOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateJPCreditCardOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *ReqCreateJPCreditCardOrder) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ReqCreateJPDocomoOrder struct {
	GoodsId     uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType  uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId   uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ReturnUrl   string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ReqCreateJPDocomoOrder) Reset()                    { *m = ReqCreateJPDocomoOrder{} }
func (m *ReqCreateJPDocomoOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateJPDocomoOrder) ProtoMessage()               {}
func (*ReqCreateJPDocomoOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{187} }

func (m *ReqCreateJPDocomoOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateJPDocomoOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateJPDocomoOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateJPDocomoOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *ReqCreateJPDocomoOrder) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ReqCreateJPPaypalOrder struct {
	GoodsId     uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType  uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId   uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ReturnUrl   string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ReqCreateJPPaypalOrder) Reset()                    { *m = ReqCreateJPPaypalOrder{} }
func (m *ReqCreateJPPaypalOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateJPPaypalOrder) ProtoMessage()               {}
func (*ReqCreateJPPaypalOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{188} }

func (m *ReqCreateJPPaypalOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateJPPaypalOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateJPPaypalOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateJPPaypalOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *ReqCreateJPPaypalOrder) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ReqCreateJPSoftbankOrder struct {
	GoodsId     uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType  uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId   uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ReturnUrl   string `protobuf:"bytes,4,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ReqCreateJPSoftbankOrder) Reset()                    { *m = ReqCreateJPSoftbankOrder{} }
func (m *ReqCreateJPSoftbankOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateJPSoftbankOrder) ProtoMessage()               {}
func (*ReqCreateJPSoftbankOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{189} }

func (m *ReqCreateJPSoftbankOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateJPSoftbankOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateJPSoftbankOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateJPSoftbankOrder) GetReturnUrl() string {
	if m != nil {
		return m.ReturnUrl
	}
	return ""
}

func (m *ReqCreateJPSoftbankOrder) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ReqCreateNickname struct {
	Nickname     string `protobuf:"bytes,1,opt,name=nickname" json:"nickname,omitempty"`
	AdvertiseStr string `protobuf:"bytes,2,opt,name=advertise_str,json=advertiseStr" json:"advertise_str,omitempty"`
}

func (m *ReqCreateNickname) Reset()                    { *m = ReqCreateNickname{} }
func (m *ReqCreateNickname) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateNickname) ProtoMessage()               {}
func (*ReqCreateNickname) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{190} }

func (m *ReqCreateNickname) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *ReqCreateNickname) GetAdvertiseStr() string {
	if m != nil {
		return m.AdvertiseStr
	}
	return ""
}

type ReqCreatePhoneVerifyCode struct {
	Phone string `protobuf:"bytes,1,opt,name=phone" json:"phone,omitempty"`
	Usage uint32 `protobuf:"varint,2,opt,name=usage" json:"usage,omitempty"`
}

func (m *ReqCreatePhoneVerifyCode) Reset()                    { *m = ReqCreatePhoneVerifyCode{} }
func (m *ReqCreatePhoneVerifyCode) String() string            { return proto.CompactTextString(m) }
func (*ReqCreatePhoneVerifyCode) ProtoMessage()               {}
func (*ReqCreatePhoneVerifyCode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{191} }

func (m *ReqCreatePhoneVerifyCode) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *ReqCreatePhoneVerifyCode) GetUsage() uint32 {
	if m != nil {
		return m.Usage
	}
	return 0
}

type ReqCreateRoom struct {
	PlayerCount uint32    `protobuf:"varint,1,opt,name=player_count,json=playerCount" json:"player_count,omitempty"`
	Mode        *GameMode `protobuf:"bytes,2,opt,name=mode" json:"mode,omitempty"`
	PublicLive  bool      `protobuf:"varint,3,opt,name=public_live,json=publicLive" json:"public_live,omitempty"`
}

func (m *ReqCreateRoom) Reset()                    { *m = ReqCreateRoom{} }
func (m *ReqCreateRoom) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateRoom) ProtoMessage()               {}
func (*ReqCreateRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{192} }

func (m *ReqCreateRoom) GetPlayerCount() uint32 {
	if m != nil {
		return m.PlayerCount
	}
	return 0
}

func (m *ReqCreateRoom) GetMode() *GameMode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *ReqCreateRoom) GetPublicLive() bool {
	if m != nil {
		return m.PublicLive
	}
	return false
}

type ReqCreateWechatAppOrder struct {
	GoodsId    uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId  uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AccountIp  string `protobuf:"bytes,4,opt,name=account_ip,json=accountIp" json:"account_ip,omitempty"`
}

func (m *ReqCreateWechatAppOrder) Reset()                    { *m = ReqCreateWechatAppOrder{} }
func (m *ReqCreateWechatAppOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateWechatAppOrder) ProtoMessage()               {}
func (*ReqCreateWechatAppOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{193} }

func (m *ReqCreateWechatAppOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateWechatAppOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateWechatAppOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateWechatAppOrder) GetAccountIp() string {
	if m != nil {
		return m.AccountIp
	}
	return ""
}

type ReqCreateWechatNativeOrder struct {
	GoodsId    uint32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	ClientType uint32 `protobuf:"varint,2,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	AccountId  uint32 `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AccountIp  string `protobuf:"bytes,4,opt,name=account_ip,json=accountIp" json:"account_ip,omitempty"`
}

func (m *ReqCreateWechatNativeOrder) Reset()                    { *m = ReqCreateWechatNativeOrder{} }
func (m *ReqCreateWechatNativeOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqCreateWechatNativeOrder) ProtoMessage()               {}
func (*ReqCreateWechatNativeOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{194} }

func (m *ReqCreateWechatNativeOrder) GetGoodsId() uint32 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ReqCreateWechatNativeOrder) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *ReqCreateWechatNativeOrder) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ReqCreateWechatNativeOrder) GetAccountIp() string {
	if m != nil {
		return m.AccountIp
	}
	return ""
}

type ReqCurrentMatchInfo struct {
	ModeList []uint32 `protobuf:"varint,1,rep,packed,name=mode_list,json=modeList" json:"mode_list,omitempty"`
}

func (m *ReqCurrentMatchInfo) Reset()                    { *m = ReqCurrentMatchInfo{} }
func (m *ReqCurrentMatchInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqCurrentMatchInfo) ProtoMessage()               {}
func (*ReqCurrentMatchInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{195} }

func (m *ReqCurrentMatchInfo) GetModeList() []uint32 {
	if m != nil {
		return m.ModeList
	}
	return nil
}

type ReqDeleteComment struct {
	TargetId   uint32   `protobuf:"varint,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	DeleteList []uint32 `protobuf:"varint,2,rep,packed,name=delete_list,json=deleteList" json:"delete_list,omitempty"`
}

func (m *ReqDeleteComment) Reset()                    { *m = ReqDeleteComment{} }
func (m *ReqDeleteComment) String() string            { return proto.CompactTextString(m) }
func (*ReqDeleteComment) ProtoMessage()               {}
func (*ReqDeleteComment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{196} }

func (m *ReqDeleteComment) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *ReqDeleteComment) GetDeleteList() []uint32 {
	if m != nil {
		return m.DeleteList
	}
	return nil
}

type ReqDeleteMail struct {
	MailId uint32 `protobuf:"varint,1,opt,name=mail_id,json=mailId" json:"mail_id,omitempty"`
}

func (m *ReqDeleteMail) Reset()                    { *m = ReqDeleteMail{} }
func (m *ReqDeleteMail) String() string            { return proto.CompactTextString(m) }
func (*ReqDeleteMail) ProtoMessage()               {}
func (*ReqDeleteMail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{197} }

func (m *ReqDeleteMail) GetMailId() uint32 {
	if m != nil {
		return m.MailId
	}
	return 0
}

type ReqEmailLogin struct {
	Email             string            `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password          string            `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Reconnect         bool              `protobuf:"varint,3,opt,name=reconnect" json:"reconnect,omitempty"`
	Device            *ClientDeviceInfo `protobuf:"bytes,4,opt,name=device" json:"device,omitempty"`
	RandomKey         string            `protobuf:"bytes,5,opt,name=random_key,json=randomKey" json:"random_key,omitempty"`
	ClientVersion     string            `protobuf:"bytes,6,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	GenAccessToken    bool              `protobuf:"varint,7,opt,name=gen_access_token,json=genAccessToken" json:"gen_access_token,omitempty"`
	CurrencyPlatforms []uint32          `protobuf:"varint,8,rep,packed,name=currency_platforms,json=currencyPlatforms" json:"currency_platforms,omitempty"`
}

func (m *ReqEmailLogin) Reset()                    { *m = ReqEmailLogin{} }
func (m *ReqEmailLogin) String() string            { return proto.CompactTextString(m) }
func (*ReqEmailLogin) ProtoMessage()               {}
func (*ReqEmailLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{198} }

func (m *ReqEmailLogin) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ReqEmailLogin) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ReqEmailLogin) GetReconnect() bool {
	if m != nil {
		return m.Reconnect
	}
	return false
}

func (m *ReqEmailLogin) GetDevice() *ClientDeviceInfo {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *ReqEmailLogin) GetRandomKey() string {
	if m != nil {
		return m.RandomKey
	}
	return ""
}

func (m *ReqEmailLogin) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *ReqEmailLogin) GetGenAccessToken() bool {
	if m != nil {
		return m.GenAccessToken
	}
	return false
}

func (m *ReqEmailLogin) GetCurrencyPlatforms() []uint32 {
	if m != nil {
		return m.CurrencyPlatforms
	}
	return nil
}

type ReqEnterCustomizedContest struct {
	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
}

func (m *ReqEnterCustomizedContest) Reset()                    { *m = ReqEnterCustomizedContest{} }
func (m *ReqEnterCustomizedContest) String() string            { return proto.CompactTextString(m) }
func (*ReqEnterCustomizedContest) ProtoMessage()               {}
func (*ReqEnterCustomizedContest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{199} }

func (m *ReqEnterCustomizedContest) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

type ReqExchangeActivityItem struct {
	ExchangeId uint32 `protobuf:"varint,1,opt,name=exchange_id,json=exchangeId" json:"exchange_id,omitempty"`
}

func (m *ReqExchangeActivityItem) Reset()                    { *m = ReqExchangeActivityItem{} }
func (m *ReqExchangeActivityItem) String() string            { return proto.CompactTextString(m) }
func (*ReqExchangeActivityItem) ProtoMessage()               {}
func (*ReqExchangeActivityItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{200} }

func (m *ReqExchangeActivityItem) GetExchangeId() uint32 {
	if m != nil {
		return m.ExchangeId
	}
	return 0
}

type ReqExchangeCurrency struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ReqExchangeCurrency) Reset()                    { *m = ReqExchangeCurrency{} }
func (m *ReqExchangeCurrency) String() string            { return proto.CompactTextString(m) }
func (*ReqExchangeCurrency) ProtoMessage()               {}
func (*ReqExchangeCurrency) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{201} }

func (m *ReqExchangeCurrency) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReqExchangeCurrency) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReqFetchCommentContent struct {
	TargetId      uint32   `protobuf:"varint,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	CommentIdList []uint32 `protobuf:"varint,2,rep,packed,name=comment_id_list,json=commentIdList" json:"comment_id_list,omitempty"`
}

func (m *ReqFetchCommentContent) Reset()                    { *m = ReqFetchCommentContent{} }
func (m *ReqFetchCommentContent) String() string            { return proto.CompactTextString(m) }
func (*ReqFetchCommentContent) ProtoMessage()               {}
func (*ReqFetchCommentContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{202} }

func (m *ReqFetchCommentContent) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *ReqFetchCommentContent) GetCommentIdList() []uint32 {
	if m != nil {
		return m.CommentIdList
	}
	return nil
}

type ReqFetchCommentList struct {
	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
}

func (m *ReqFetchCommentList) Reset()                    { *m = ReqFetchCommentList{} }
func (m *ReqFetchCommentList) String() string            { return proto.CompactTextString(m) }
func (*ReqFetchCommentList) ProtoMessage()               {}
func (*ReqFetchCommentList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{203} }

func (m *ReqFetchCommentList) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

type ReqFetchCustomizedContestByContestId struct {
	ContestId uint32 `protobuf:"varint,1,opt,name=contest_id,json=contestId" json:"contest_id,omitempty"`
}

func (m *ReqFetchCustomizedContestByContestId) Reset()         { *m = ReqFetchCustomizedContestByContestId{} }
func (m *ReqFetchCustomizedContestByContestId) String() string { return proto.CompactTextString(m) }
func (*ReqFetchCustomizedContestByContestId) ProtoMessage()    {}
func (*ReqFetchCustomizedContestByContestId) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{204}
}

func (m *ReqFetchCustomizedContestByContestId) GetContestId() uint32 {
	if m != nil {
		return m.ContestId
	}
	return 0
}

type ReqFetchCustomizedContestExtendInfo struct {
	UidList []uint32 `protobuf:"varint,1,rep,packed,name=uid_list,json=uidList" json:"uid_list,omitempty"`
}

func (m *ReqFetchCustomizedContestExtendInfo) Reset()         { *m = ReqFetchCustomizedContestExtendInfo{} }
func (m *ReqFetchCustomizedContestExtendInfo) String() string { return proto.CompactTextString(m) }
func (*ReqFetchCustomizedContestExtendInfo) ProtoMessage()    {}
func (*ReqFetchCustomizedContestExtendInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{205}
}

func (m *ReqFetchCustomizedContestExtendInfo) GetUidList() []uint32 {
	if m != nil {
		return m.UidList
	}
	return nil
}

type ReqFetchCustomizedContestGameLiveList struct {
	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
}

func (m *ReqFetchCustomizedContestGameLiveList) Reset()         { *m = ReqFetchCustomizedContestGameLiveList{} }
func (m *ReqFetchCustomizedContestGameLiveList) String() string { return proto.CompactTextString(m) }
func (*ReqFetchCustomizedContestGameLiveList) ProtoMessage()    {}
func (*ReqFetchCustomizedContestGameLiveList) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{206}
}

func (m *ReqFetchCustomizedContestGameLiveList) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

type ReqFetchCustomizedContestGameRecords struct {
	UniqueId  uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	LastIndex uint32 `protobuf:"varint,2,opt,name=last_index,json=lastIndex" json:"last_index,omitempty"`
}

func (m *ReqFetchCustomizedContestGameRecords) Reset()         { *m = ReqFetchCustomizedContestGameRecords{} }
func (m *ReqFetchCustomizedContestGameRecords) String() string { return proto.CompactTextString(m) }
func (*ReqFetchCustomizedContestGameRecords) ProtoMessage()    {}
func (*ReqFetchCustomizedContestGameRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{207}
}

func (m *ReqFetchCustomizedContestGameRecords) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

func (m *ReqFetchCustomizedContestGameRecords) GetLastIndex() uint32 {
	if m != nil {
		return m.LastIndex
	}
	return 0
}

type ReqFetchCustomizedContestList struct {
	Start uint32 `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ReqFetchCustomizedContestList) Reset()                    { *m = ReqFetchCustomizedContestList{} }
func (m *ReqFetchCustomizedContestList) String() string            { return proto.CompactTextString(m) }
func (*ReqFetchCustomizedContestList) ProtoMessage()               {}
func (*ReqFetchCustomizedContestList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{208} }

func (m *ReqFetchCustomizedContestList) GetStart() uint32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *ReqFetchCustomizedContestList) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReqFetchCustomizedContestOnlineInfo struct {
	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
}

func (m *ReqFetchCustomizedContestOnlineInfo) Reset()         { *m = ReqFetchCustomizedContestOnlineInfo{} }
func (m *ReqFetchCustomizedContestOnlineInfo) String() string { return proto.CompactTextString(m) }
func (*ReqFetchCustomizedContestOnlineInfo) ProtoMessage()    {}
func (*ReqFetchCustomizedContestOnlineInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{209}
}

func (m *ReqFetchCustomizedContestOnlineInfo) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

type ReqFetchRankPointLeaderboard struct {
	LeaderboardId uint32 `protobuf:"varint,1,opt,name=leaderboard_id,json=leaderboardId" json:"leaderboard_id,omitempty"`
}

func (m *ReqFetchRankPointLeaderboard) Reset()                    { *m = ReqFetchRankPointLeaderboard{} }
func (m *ReqFetchRankPointLeaderboard) String() string            { return proto.CompactTextString(m) }
func (*ReqFetchRankPointLeaderboard) ProtoMessage()               {}
func (*ReqFetchRankPointLeaderboard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{210} }

func (m *ReqFetchRankPointLeaderboard) GetLeaderboardId() uint32 {
	if m != nil {
		return m.LeaderboardId
	}
	return 0
}

type ReqGMCommand struct {
	Command string `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
}

func (m *ReqGMCommand) Reset()                    { *m = ReqGMCommand{} }
func (m *ReqGMCommand) String() string            { return proto.CompactTextString(m) }
func (*ReqGMCommand) ProtoMessage()               {}
func (*ReqGMCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{211} }

func (m *ReqGMCommand) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

type ReqGMCommandInGaming struct {
	JsonData string `protobuf:"bytes,1,opt,name=json_data,json=jsonData" json:"json_data,omitempty"`
}

func (m *ReqGMCommandInGaming) Reset()                    { *m = ReqGMCommandInGaming{} }
func (m *ReqGMCommandInGaming) String() string            { return proto.CompactTextString(m) }
func (*ReqGMCommandInGaming) ProtoMessage()               {}
func (*ReqGMCommandInGaming) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{212} }

func (m *ReqGMCommandInGaming) GetJsonData() string {
	if m != nil {
		return m.JsonData
	}
	return ""
}

type ReqGainAccumulatedPointActivityReward struct {
	ActivityId uint32 `protobuf:"varint,1,opt,name=activity_id,json=activityId" json:"activity_id,omitempty"`
	RewardId   uint32 `protobuf:"varint,2,opt,name=reward_id,json=rewardId" json:"reward_id,omitempty"`
}

func (m *ReqGainAccumulatedPointActivityReward) Reset()         { *m = ReqGainAccumulatedPointActivityReward{} }
func (m *ReqGainAccumulatedPointActivityReward) String() string { return proto.CompactTextString(m) }
func (*ReqGainAccumulatedPointActivityReward) ProtoMessage()    {}
func (*ReqGainAccumulatedPointActivityReward) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{213}
}

func (m *ReqGainAccumulatedPointActivityReward) GetActivityId() uint32 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ReqGainAccumulatedPointActivityReward) GetRewardId() uint32 {
	if m != nil {
		return m.RewardId
	}
	return 0
}

type ReqGainRankPointReward struct {
	LeaderboardId uint32 `protobuf:"varint,1,opt,name=leaderboard_id,json=leaderboardId" json:"leaderboard_id,omitempty"`
	ActivityId    uint32 `protobuf:"varint,2,opt,name=activity_id,json=activityId" json:"activity_id,omitempty"`
}

func (m *ReqGainRankPointReward) Reset()                    { *m = ReqGainRankPointReward{} }
func (m *ReqGainRankPointReward) String() string            { return proto.CompactTextString(m) }
func (*ReqGainRankPointReward) ProtoMessage()               {}
func (*ReqGainRankPointReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{214} }

func (m *ReqGainRankPointReward) GetLeaderboardId() uint32 {
	if m != nil {
		return m.LeaderboardId
	}
	return 0
}

func (m *ReqGainRankPointReward) GetActivityId() uint32 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

type ReqGainVipReward struct {
	VipLevel uint32 `protobuf:"varint,1,opt,name=vip_level,json=vipLevel" json:"vip_level,omitempty"`
}

func (m *ReqGainVipReward) Reset()                    { *m = ReqGainVipReward{} }
func (m *ReqGainVipReward) String() string            { return proto.CompactTextString(m) }
func (*ReqGainVipReward) ProtoMessage()               {}
func (*ReqGainVipReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{215} }

func (m *ReqGainVipReward) GetVipLevel() uint32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

type ReqGameLiveInfo struct {
	GameUuid string `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid" json:"game_uuid,omitempty"`
}

func (m *ReqGameLiveInfo) Reset()                    { *m = ReqGameLiveInfo{} }
func (m *ReqGameLiveInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqGameLiveInfo) ProtoMessage()               {}
func (*ReqGameLiveInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{216} }

func (m *ReqGameLiveInfo) GetGameUuid() string {
	if m != nil {
		return m.GameUuid
	}
	return ""
}

type ReqGameLiveLeftSegment struct {
	GameUuid      string `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid" json:"game_uuid,omitempty"`
	LastSegmentId uint32 `protobuf:"varint,2,opt,name=last_segment_id,json=lastSegmentId" json:"last_segment_id,omitempty"`
}

func (m *ReqGameLiveLeftSegment) Reset()                    { *m = ReqGameLiveLeftSegment{} }
func (m *ReqGameLiveLeftSegment) String() string            { return proto.CompactTextString(m) }
func (*ReqGameLiveLeftSegment) ProtoMessage()               {}
func (*ReqGameLiveLeftSegment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{217} }

func (m *ReqGameLiveLeftSegment) GetGameUuid() string {
	if m != nil {
		return m.GameUuid
	}
	return ""
}

func (m *ReqGameLiveLeftSegment) GetLastSegmentId() uint32 {
	if m != nil {
		return m.LastSegmentId
	}
	return 0
}

type ReqGameLiveList struct {
	FilterId uint32 `protobuf:"varint,1,opt,name=filter_id,json=filterId" json:"filter_id,omitempty"`
}

func (m *ReqGameLiveList) Reset()                    { *m = ReqGameLiveList{} }
func (m *ReqGameLiveList) String() string            { return proto.CompactTextString(m) }
func (*ReqGameLiveList) ProtoMessage()               {}
func (*ReqGameLiveList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{218} }

func (m *ReqGameLiveList) GetFilterId() uint32 {
	if m != nil {
		return m.FilterId
	}
	return 0
}

type ReqGameRecord struct {
	GameUuid string `protobuf:"bytes,1,opt,name=game_uuid,json=gameUuid" json:"game_uuid,omitempty"`
}

func (m *ReqGameRecord) Reset()                    { *m = ReqGameRecord{} }
func (m *ReqGameRecord) String() string            { return proto.CompactTextString(m) }
func (*ReqGameRecord) ProtoMessage()               {}
func (*ReqGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{219} }

func (m *ReqGameRecord) GetGameUuid() string {
	if m != nil {
		return m.GameUuid
	}
	return ""
}

type ReqGameRecordList struct {
	Start uint32 `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Type  uint32 `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
}

func (m *ReqGameRecordList) Reset()                    { *m = ReqGameRecordList{} }
func (m *ReqGameRecordList) String() string            { return proto.CompactTextString(m) }
func (*ReqGameRecordList) ProtoMessage()               {}
func (*ReqGameRecordList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{220} }

func (m *ReqGameRecordList) GetStart() uint32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *ReqGameRecordList) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqGameRecordList) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type ReqGameRecordsDetail struct {
	UuidList []string `protobuf:"bytes,1,rep,name=uuid_list,json=uuidList" json:"uuid_list,omitempty"`
}

func (m *ReqGameRecordsDetail) Reset()                    { *m = ReqGameRecordsDetail{} }
func (m *ReqGameRecordsDetail) String() string            { return proto.CompactTextString(m) }
func (*ReqGameRecordsDetail) ProtoMessage()               {}
func (*ReqGameRecordsDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{221} }

func (m *ReqGameRecordsDetail) GetUuidList() []string {
	if m != nil {
		return m.UuidList
	}
	return nil
}

type ReqHandleFriendApply struct {
	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Method   uint32 `protobuf:"varint,2,opt,name=method" json:"method,omitempty"`
}

func (m *ReqHandleFriendApply) Reset()                    { *m = ReqHandleFriendApply{} }
func (m *ReqHandleFriendApply) String() string            { return proto.CompactTextString(m) }
func (*ReqHandleFriendApply) ProtoMessage()               {}
func (*ReqHandleFriendApply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{222} }

func (m *ReqHandleFriendApply) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *ReqHandleFriendApply) GetMethod() uint32 {
	if m != nil {
		return m.Method
	}
	return 0
}

type ReqHeatBeat struct {
	NoOperationCounter uint32 `protobuf:"varint,1,opt,name=no_operation_counter,json=noOperationCounter" json:"no_operation_counter,omitempty"`
}

func (m *ReqHeatBeat) Reset()                    { *m = ReqHeatBeat{} }
func (m *ReqHeatBeat) String() string            { return proto.CompactTextString(m) }
func (*ReqHeatBeat) ProtoMessage()               {}
func (*ReqHeatBeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{223} }

func (m *ReqHeatBeat) GetNoOperationCounter() uint32 {
	if m != nil {
		return m.NoOperationCounter
	}
	return 0
}

type ReqJoinCustomizedContestChatRoom struct {
	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
}

func (m *ReqJoinCustomizedContestChatRoom) Reset()         { *m = ReqJoinCustomizedContestChatRoom{} }
func (m *ReqJoinCustomizedContestChatRoom) String() string { return proto.CompactTextString(m) }
func (*ReqJoinCustomizedContestChatRoom) ProtoMessage()    {}
func (*ReqJoinCustomizedContestChatRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{224}
}

func (m *ReqJoinCustomizedContestChatRoom) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

type ReqJoinMatchQueue struct {
	MatchMode uint32 `protobuf:"varint,1,opt,name=match_mode,json=matchMode" json:"match_mode,omitempty"`
}

func (m *ReqJoinMatchQueue) Reset()                    { *m = ReqJoinMatchQueue{} }
func (m *ReqJoinMatchQueue) String() string            { return proto.CompactTextString(m) }
func (*ReqJoinMatchQueue) ProtoMessage()               {}
func (*ReqJoinMatchQueue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{225} }

func (m *ReqJoinMatchQueue) GetMatchMode() uint32 {
	if m != nil {
		return m.MatchMode
	}
	return 0
}

type ReqJoinRoom struct {
	RoomId uint32 `protobuf:"varint,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
}

func (m *ReqJoinRoom) Reset()                    { *m = ReqJoinRoom{} }
func (m *ReqJoinRoom) String() string            { return proto.CompactTextString(m) }
func (*ReqJoinRoom) ProtoMessage()               {}
func (*ReqJoinRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{226} }

func (m *ReqJoinRoom) GetRoomId() uint32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

type ReqLeaveComment struct {
	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Content  string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
}

func (m *ReqLeaveComment) Reset()                    { *m = ReqLeaveComment{} }
func (m *ReqLeaveComment) String() string            { return proto.CompactTextString(m) }
func (*ReqLeaveComment) ProtoMessage()               {}
func (*ReqLeaveComment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{227} }

func (m *ReqLeaveComment) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *ReqLeaveComment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ReqLevelLeaderboard struct {
	Type uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
}

func (m *ReqLevelLeaderboard) Reset()                    { *m = ReqLevelLeaderboard{} }
func (m *ReqLevelLeaderboard) String() string            { return proto.CompactTextString(m) }
func (*ReqLevelLeaderboard) ProtoMessage()               {}
func (*ReqLevelLeaderboard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{228} }

func (m *ReqLevelLeaderboard) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type ReqLogin struct {
	Account           string            `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Password          string            `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Reconnect         bool              `protobuf:"varint,3,opt,name=reconnect" json:"reconnect,omitempty"`
	Device            *ClientDeviceInfo `protobuf:"bytes,4,opt,name=device" json:"device,omitempty"`
	RandomKey         string            `protobuf:"bytes,5,opt,name=random_key,json=randomKey" json:"random_key,omitempty"`
	ClientVersion     string            `protobuf:"bytes,6,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	GenAccessToken    bool              `protobuf:"varint,7,opt,name=gen_access_token,json=genAccessToken" json:"gen_access_token,omitempty"`
	CurrencyPlatforms []uint32          `protobuf:"varint,8,rep,packed,name=currency_platforms,json=currencyPlatforms" json:"currency_platforms,omitempty"`
}

func (m *ReqLogin) Reset()                    { *m = ReqLogin{} }
func (m *ReqLogin) String() string            { return proto.CompactTextString(m) }
func (*ReqLogin) ProtoMessage()               {}
func (*ReqLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{229} }

func (m *ReqLogin) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *ReqLogin) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ReqLogin) GetReconnect() bool {
	if m != nil {
		return m.Reconnect
	}
	return false
}

func (m *ReqLogin) GetDevice() *ClientDeviceInfo {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *ReqLogin) GetRandomKey() string {
	if m != nil {
		return m.RandomKey
	}
	return ""
}

func (m *ReqLogin) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *ReqLogin) GetGenAccessToken() bool {
	if m != nil {
		return m.GenAccessToken
	}
	return false
}

func (m *ReqLogin) GetCurrencyPlatforms() []uint32 {
	if m != nil {
		return m.CurrencyPlatforms
	}
	return nil
}

type ReqLogout struct {
}

func (m *ReqLogout) Reset()                    { *m = ReqLogout{} }
func (m *ReqLogout) String() string            { return proto.CompactTextString(m) }
func (*ReqLogout) ProtoMessage()               {}
func (*ReqLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{230} }

type ReqModifyBirthday struct {
	Birthday uint32 `protobuf:"varint,1,opt,name=birthday" json:"birthday,omitempty"`
}

func (m *ReqModifyBirthday) Reset()                    { *m = ReqModifyBirthday{} }
func (m *ReqModifyBirthday) String() string            { return proto.CompactTextString(m) }
func (*ReqModifyBirthday) ProtoMessage()               {}
func (*ReqModifyBirthday) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{231} }

func (m *ReqModifyBirthday) GetBirthday() uint32 {
	if m != nil {
		return m.Birthday
	}
	return 0
}

type ReqModifyNickname struct {
	Nickname  string `protobuf:"bytes,1,opt,name=nickname" json:"nickname,omitempty"`
	UseItemId uint32 `protobuf:"varint,2,opt,name=use_item_id,json=useItemId" json:"use_item_id,omitempty"`
}

func (m *ReqModifyNickname) Reset()                    { *m = ReqModifyNickname{} }
func (m *ReqModifyNickname) String() string            { return proto.CompactTextString(m) }
func (*ReqModifyNickname) ProtoMessage()               {}
func (*ReqModifyNickname) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{232} }

func (m *ReqModifyNickname) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *ReqModifyNickname) GetUseItemId() uint32 {
	if m != nil {
		return m.UseItemId
	}
	return 0
}

type ReqModifyPassword struct {
	NewPassword string `protobuf:"bytes,1,opt,name=new_password,json=newPassword" json:"new_password,omitempty"`
	OldPassword string `protobuf:"bytes,2,opt,name=old_password,json=oldPassword" json:"old_password,omitempty"`
	SecureToken string `protobuf:"bytes,3,opt,name=secure_token,json=secureToken" json:"secure_token,omitempty"`
}

func (m *ReqModifyPassword) Reset()                    { *m = ReqModifyPassword{} }
func (m *ReqModifyPassword) String() string            { return proto.CompactTextString(m) }
func (*ReqModifyPassword) ProtoMessage()               {}
func (*ReqModifyPassword) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{233} }

func (m *ReqModifyPassword) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func (m *ReqModifyPassword) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *ReqModifyPassword) GetSecureToken() string {
	if m != nil {
		return m.SecureToken
	}
	return ""
}

type ReqModifyRoom struct {
	RobotCount uint32 `protobuf:"varint,1,opt,name=robot_count,json=robotCount" json:"robot_count,omitempty"`
}

func (m *ReqModifyRoom) Reset()                    { *m = ReqModifyRoom{} }
func (m *ReqModifyRoom) String() string            { return proto.CompactTextString(m) }
func (*ReqModifyRoom) ProtoMessage()               {}
func (*ReqModifyRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{234} }

func (m *ReqModifyRoom) GetRobotCount() uint32 {
	if m != nil {
		return m.RobotCount
	}
	return 0
}

type ReqModifySignature struct {
	Signature string `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
}

func (m *ReqModifySignature) Reset()                    { *m = ReqModifySignature{} }
func (m *ReqModifySignature) String() string            { return proto.CompactTextString(m) }
func (*ReqModifySignature) ProtoMessage()               {}
func (*ReqModifySignature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{235} }

func (m *ReqModifySignature) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type ReqMultiAccountId struct {
	AccountIdList []uint32 `protobuf:"varint,1,rep,packed,name=account_id_list,json=accountIdList" json:"account_id_list,omitempty"`
}

func (m *ReqMultiAccountId) Reset()                    { *m = ReqMultiAccountId{} }
func (m *ReqMultiAccountId) String() string            { return proto.CompactTextString(m) }
func (*ReqMultiAccountId) ProtoMessage()               {}
func (*ReqMultiAccountId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{236} }

func (m *ReqMultiAccountId) GetAccountIdList() []uint32 {
	if m != nil {
		return m.AccountIdList
	}
	return nil
}

type ReqOauth2Auth struct {
	Type uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Uid  string `protobuf:"bytes,3,opt,name=uid" json:"uid,omitempty"`
}

func (m *ReqOauth2Auth) Reset()                    { *m = ReqOauth2Auth{} }
func (m *ReqOauth2Auth) String() string            { return proto.CompactTextString(m) }
func (*ReqOauth2Auth) ProtoMessage()               {}
func (*ReqOauth2Auth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{237} }

func (m *ReqOauth2Auth) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqOauth2Auth) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ReqOauth2Auth) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type ReqOauth2Check struct {
	Type        uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ReqOauth2Check) Reset()                    { *m = ReqOauth2Check{} }
func (m *ReqOauth2Check) String() string            { return proto.CompactTextString(m) }
func (*ReqOauth2Check) ProtoMessage()               {}
func (*ReqOauth2Check) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{238} }

func (m *ReqOauth2Check) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqOauth2Check) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ReqOauth2Login struct {
	Type              uint32            `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	AccessToken       string            `protobuf:"bytes,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	Reconnect         bool              `protobuf:"varint,3,opt,name=reconnect" json:"reconnect,omitempty"`
	Device            *ClientDeviceInfo `protobuf:"bytes,4,opt,name=device" json:"device,omitempty"`
	RandomKey         string            `protobuf:"bytes,5,opt,name=random_key,json=randomKey" json:"random_key,omitempty"`
	ClientVersion     string            `protobuf:"bytes,6,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	CurrencyPlatforms []uint32          `protobuf:"varint,8,rep,packed,name=currency_platforms,json=currencyPlatforms" json:"currency_platforms,omitempty"`
}

func (m *ReqOauth2Login) Reset()                    { *m = ReqOauth2Login{} }
func (m *ReqOauth2Login) String() string            { return proto.CompactTextString(m) }
func (*ReqOauth2Login) ProtoMessage()               {}
func (*ReqOauth2Login) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{239} }

func (m *ReqOauth2Login) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqOauth2Login) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ReqOauth2Login) GetReconnect() bool {
	if m != nil {
		return m.Reconnect
	}
	return false
}

func (m *ReqOauth2Login) GetDevice() *ClientDeviceInfo {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *ReqOauth2Login) GetRandomKey() string {
	if m != nil {
		return m.RandomKey
	}
	return ""
}

func (m *ReqOauth2Login) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *ReqOauth2Login) GetCurrencyPlatforms() []uint32 {
	if m != nil {
		return m.CurrencyPlatforms
	}
	return nil
}

type ReqOauth2Signup struct {
	Type         uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	AccessToken  string `protobuf:"bytes,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	Email        string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	AdvertiseStr string `protobuf:"bytes,4,opt,name=advertise_str,json=advertiseStr" json:"advertise_str,omitempty"`
}

func (m *ReqOauth2Signup) Reset()                    { *m = ReqOauth2Signup{} }
func (m *ReqOauth2Signup) String() string            { return proto.CompactTextString(m) }
func (*ReqOauth2Signup) ProtoMessage()               {}
func (*ReqOauth2Signup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{240} }

func (m *ReqOauth2Signup) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqOauth2Signup) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ReqOauth2Signup) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ReqOauth2Signup) GetAdvertiseStr() string {
	if m != nil {
		return m.AdvertiseStr
	}
	return ""
}

type ReqOpenChest struct {
	ChestId   uint32 `protobuf:"varint,1,opt,name=chest_id,json=chestId" json:"chest_id,omitempty"`
	Count     uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	UseTicket bool   `protobuf:"varint,3,opt,name=use_ticket,json=useTicket" json:"use_ticket,omitempty"`
}

func (m *ReqOpenChest) Reset()                    { *m = ReqOpenChest{} }
func (m *ReqOpenChest) String() string            { return proto.CompactTextString(m) }
func (*ReqOpenChest) ProtoMessage()               {}
func (*ReqOpenChest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{241} }

func (m *ReqOpenChest) GetChestId() uint32 {
	if m != nil {
		return m.ChestId
	}
	return 0
}

func (m *ReqOpenChest) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqOpenChest) GetUseTicket() bool {
	if m != nil {
		return m.UseTicket
	}
	return false
}

type ReqOpenManualItem struct {
	ItemId   uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	Count    uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	SelectId uint32 `protobuf:"varint,3,opt,name=select_id,json=selectId" json:"select_id,omitempty"`
}

func (m *ReqOpenManualItem) Reset()                    { *m = ReqOpenManualItem{} }
func (m *ReqOpenManualItem) String() string            { return proto.CompactTextString(m) }
func (*ReqOpenManualItem) ProtoMessage()               {}
func (*ReqOpenManualItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{242} }

func (m *ReqOpenManualItem) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *ReqOpenManualItem) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqOpenManualItem) GetSelectId() uint32 {
	if m != nil {
		return m.SelectId
	}
	return 0
}

type ReqOpenRandomRewardItem struct {
	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (m *ReqOpenRandomRewardItem) Reset()                    { *m = ReqOpenRandomRewardItem{} }
func (m *ReqOpenRandomRewardItem) String() string            { return proto.CompactTextString(m) }
func (*ReqOpenRandomRewardItem) ProtoMessage()               {}
func (*ReqOpenRandomRewardItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{243} }

func (m *ReqOpenRandomRewardItem) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

type ReqPlatformBillingProducts struct {
	ShelvesId uint32 `protobuf:"varint,1,opt,name=shelves_id,json=shelvesId" json:"shelves_id,omitempty"`
}

func (m *ReqPlatformBillingProducts) Reset()                    { *m = ReqPlatformBillingProducts{} }
func (m *ReqPlatformBillingProducts) String() string            { return proto.CompactTextString(m) }
func (*ReqPlatformBillingProducts) ProtoMessage()               {}
func (*ReqPlatformBillingProducts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{244} }

func (m *ReqPlatformBillingProducts) GetShelvesId() uint32 {
	if m != nil {
		return m.ShelvesId
	}
	return 0
}

type ReqReadAnnouncement struct {
	AnnouncementId uint32 `protobuf:"varint,1,opt,name=announcement_id,json=announcementId" json:"announcement_id,omitempty"`
}

func (m *ReqReadAnnouncement) Reset()                    { *m = ReqReadAnnouncement{} }
func (m *ReqReadAnnouncement) String() string            { return proto.CompactTextString(m) }
func (*ReqReadAnnouncement) ProtoMessage()               {}
func (*ReqReadAnnouncement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{245} }

func (m *ReqReadAnnouncement) GetAnnouncementId() uint32 {
	if m != nil {
		return m.AnnouncementId
	}
	return 0
}

type ReqReadMail struct {
	MailId uint32 `protobuf:"varint,1,opt,name=mail_id,json=mailId" json:"mail_id,omitempty"`
}

func (m *ReqReadMail) Reset()                    { *m = ReqReadMail{} }
func (m *ReqReadMail) String() string            { return proto.CompactTextString(m) }
func (*ReqReadMail) ProtoMessage()               {}
func (*ReqReadMail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{246} }

func (m *ReqReadMail) GetMailId() uint32 {
	if m != nil {
		return m.MailId
	}
	return 0
}

type ReqRefreshDailyTask struct {
	TaskId uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
}

func (m *ReqRefreshDailyTask) Reset()                    { *m = ReqRefreshDailyTask{} }
func (m *ReqRefreshDailyTask) String() string            { return proto.CompactTextString(m) }
func (*ReqRefreshDailyTask) ProtoMessage()               {}
func (*ReqRefreshDailyTask) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{247} }

func (m *ReqRefreshDailyTask) GetTaskId() uint32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type ReqRemoveCollectedGameRecord struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *ReqRemoveCollectedGameRecord) Reset()                    { *m = ReqRemoveCollectedGameRecord{} }
func (m *ReqRemoveCollectedGameRecord) String() string            { return proto.CompactTextString(m) }
func (*ReqRemoveCollectedGameRecord) ProtoMessage()               {}
func (*ReqRemoveCollectedGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{248} }

func (m *ReqRemoveCollectedGameRecord) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type ReqRemoveFriend struct {
	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
}

func (m *ReqRemoveFriend) Reset()                    { *m = ReqRemoveFriend{} }
func (m *ReqRemoveFriend) String() string            { return proto.CompactTextString(m) }
func (*ReqRemoveFriend) ProtoMessage()               {}
func (*ReqRemoveFriend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{249} }

func (m *ReqRemoveFriend) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

type ReqRollingNotice struct {
	Notice *RollingNotice `protobuf:"bytes,1,opt,name=notice" json:"notice,omitempty"`
}

func (m *ReqRollingNotice) Reset()                    { *m = ReqRollingNotice{} }
func (m *ReqRollingNotice) String() string            { return proto.CompactTextString(m) }
func (*ReqRollingNotice) ProtoMessage()               {}
func (*ReqRollingNotice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{250} }

func (m *ReqRollingNotice) GetNotice() *RollingNotice {
	if m != nil {
		return m.Notice
	}
	return nil
}

type ReqRoomKick struct {
	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ReqRoomKick) Reset()                    { *m = ReqRoomKick{} }
func (m *ReqRoomKick) String() string            { return proto.CompactTextString(m) }
func (*ReqRoomKick) ProtoMessage()               {}
func (*ReqRoomKick) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{251} }

func (m *ReqRoomKick) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type ReqRoomReady struct {
	Ready bool `protobuf:"varint,1,opt,name=ready" json:"ready,omitempty"`
}

func (m *ReqRoomReady) Reset()                    { *m = ReqRoomReady{} }
func (m *ReqRoomReady) String() string            { return proto.CompactTextString(m) }
func (*ReqRoomReady) ProtoMessage()               {}
func (*ReqRoomReady) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{252} }

func (m *ReqRoomReady) GetReady() bool {
	if m != nil {
		return m.Ready
	}
	return false
}

type ReqRoomStart struct {
}

func (m *ReqRoomStart) Reset()                    { *m = ReqRoomStart{} }
func (m *ReqRoomStart) String() string            { return proto.CompactTextString(m) }
func (*ReqRoomStart) ProtoMessage()               {}
func (*ReqRoomStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{253} }

type ReqSayChatMessage struct {
	Content string `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
}

func (m *ReqSayChatMessage) Reset()                    { *m = ReqSayChatMessage{} }
func (m *ReqSayChatMessage) String() string            { return proto.CompactTextString(m) }
func (*ReqSayChatMessage) ProtoMessage()               {}
func (*ReqSayChatMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{254} }

func (m *ReqSayChatMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ReqSearchAccountById struct {
	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ReqSearchAccountById) Reset()                    { *m = ReqSearchAccountById{} }
func (m *ReqSearchAccountById) String() string            { return proto.CompactTextString(m) }
func (*ReqSearchAccountById) ProtoMessage()               {}
func (*ReqSearchAccountById) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{255} }

func (m *ReqSearchAccountById) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type ReqSearchAccountByPattern struct {
	SearchNext bool   `protobuf:"varint,1,opt,name=search_next,json=searchNext" json:"search_next,omitempty"`
	Pattern    string `protobuf:"bytes,2,opt,name=pattern" json:"pattern,omitempty"`
}

func (m *ReqSearchAccountByPattern) Reset()                    { *m = ReqSearchAccountByPattern{} }
func (m *ReqSearchAccountByPattern) String() string            { return proto.CompactTextString(m) }
func (*ReqSearchAccountByPattern) ProtoMessage()               {}
func (*ReqSearchAccountByPattern) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{256} }

func (m *ReqSearchAccountByPattern) GetSearchNext() bool {
	if m != nil {
		return m.SearchNext
	}
	return false
}

func (m *ReqSearchAccountByPattern) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

type ReqSelfOperation struct {
	Type            uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Index           uint32 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Tile            string `protobuf:"bytes,3,opt,name=tile" json:"tile,omitempty"`
	CancelOperation bool   `protobuf:"varint,4,opt,name=cancel_operation,json=cancelOperation" json:"cancel_operation,omitempty"`
	Moqie           bool   `protobuf:"varint,5,opt,name=moqie" json:"moqie,omitempty"`
	Timeuse         uint32 `protobuf:"varint,6,opt,name=timeuse" json:"timeuse,omitempty"`
}

func (m *ReqSelfOperation) Reset()                    { *m = ReqSelfOperation{} }
func (m *ReqSelfOperation) String() string            { return proto.CompactTextString(m) }
func (*ReqSelfOperation) ProtoMessage()               {}
func (*ReqSelfOperation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{257} }

func (m *ReqSelfOperation) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqSelfOperation) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ReqSelfOperation) GetTile() string {
	if m != nil {
		return m.Tile
	}
	return ""
}

func (m *ReqSelfOperation) GetCancelOperation() bool {
	if m != nil {
		return m.CancelOperation
	}
	return false
}

func (m *ReqSelfOperation) GetMoqie() bool {
	if m != nil {
		return m.Moqie
	}
	return false
}

func (m *ReqSelfOperation) GetTimeuse() uint32 {
	if m != nil {
		return m.Timeuse
	}
	return 0
}

type ReqSellItem struct {
	Sells []*ReqSellItem_Item `protobuf:"bytes,1,rep,name=sells" json:"sells,omitempty"`
}

func (m *ReqSellItem) Reset()                    { *m = ReqSellItem{} }
func (m *ReqSellItem) String() string            { return proto.CompactTextString(m) }
func (*ReqSellItem) ProtoMessage()               {}
func (*ReqSellItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{258} }

func (m *ReqSellItem) GetSells() []*ReqSellItem_Item {
	if m != nil {
		return m.Sells
	}
	return nil
}

type ReqSellItem_Item struct {
	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	Count  uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ReqSellItem_Item) Reset()                    { *m = ReqSellItem_Item{} }
func (m *ReqSellItem_Item) String() string            { return proto.CompactTextString(m) }
func (*ReqSellItem_Item) ProtoMessage()               {}
func (*ReqSellItem_Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{258, 0} }

func (m *ReqSellItem_Item) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *ReqSellItem_Item) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReqSendClientMessage struct {
	TargetId uint32 `protobuf:"varint,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Type     uint32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Content  string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
}

func (m *ReqSendClientMessage) Reset()                    { *m = ReqSendClientMessage{} }
func (m *ReqSendClientMessage) String() string            { return proto.CompactTextString(m) }
func (*ReqSendClientMessage) ProtoMessage()               {}
func (*ReqSendClientMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{259} }

func (m *ReqSendClientMessage) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *ReqSendClientMessage) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqSendClientMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ReqSendGiftToCharacter struct {
	CharacterId uint32                         `protobuf:"varint,1,opt,name=character_id,json=characterId" json:"character_id,omitempty"`
	Gifts       []*ReqSendGiftToCharacter_Gift `protobuf:"bytes,2,rep,name=gifts" json:"gifts,omitempty"`
}

func (m *ReqSendGiftToCharacter) Reset()                    { *m = ReqSendGiftToCharacter{} }
func (m *ReqSendGiftToCharacter) String() string            { return proto.CompactTextString(m) }
func (*ReqSendGiftToCharacter) ProtoMessage()               {}
func (*ReqSendGiftToCharacter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{260} }

func (m *ReqSendGiftToCharacter) GetCharacterId() uint32 {
	if m != nil {
		return m.CharacterId
	}
	return 0
}

func (m *ReqSendGiftToCharacter) GetGifts() []*ReqSendGiftToCharacter_Gift {
	if m != nil {
		return m.Gifts
	}
	return nil
}

type ReqSendGiftToCharacter_Gift struct {
	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	Count  uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ReqSendGiftToCharacter_Gift) Reset()         { *m = ReqSendGiftToCharacter_Gift{} }
func (m *ReqSendGiftToCharacter_Gift) String() string { return proto.CompactTextString(m) }
func (*ReqSendGiftToCharacter_Gift) ProtoMessage()    {}
func (*ReqSendGiftToCharacter_Gift) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{260, 0}
}

func (m *ReqSendGiftToCharacter_Gift) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *ReqSendGiftToCharacter_Gift) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReqShopPurchase struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Id   uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *ReqShopPurchase) Reset()                    { *m = ReqShopPurchase{} }
func (m *ReqShopPurchase) String() string            { return proto.CompactTextString(m) }
func (*ReqShopPurchase) ProtoMessage()               {}
func (*ReqShopPurchase) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{261} }

func (m *ReqShopPurchase) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ReqShopPurchase) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReqSignupAccount struct {
	Account  string `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
}

func (m *ReqSignupAccount) Reset()                    { *m = ReqSignupAccount{} }
func (m *ReqSignupAccount) String() string            { return proto.CompactTextString(m) }
func (*ReqSignupAccount) ProtoMessage()               {}
func (*ReqSignupAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{262} }

func (m *ReqSignupAccount) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *ReqSignupAccount) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ReqSignupAccount) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type ReqSolveGooglePlayOrder struct {
	InappPurchaseData  string `protobuf:"bytes,2,opt,name=inapp_purchase_data,json=inappPurchaseData" json:"inapp_purchase_data,omitempty"`
	InappDataSignature string `protobuf:"bytes,3,opt,name=inapp_data_signature,json=inappDataSignature" json:"inapp_data_signature,omitempty"`
}

func (m *ReqSolveGooglePlayOrder) Reset()                    { *m = ReqSolveGooglePlayOrder{} }
func (m *ReqSolveGooglePlayOrder) String() string            { return proto.CompactTextString(m) }
func (*ReqSolveGooglePlayOrder) ProtoMessage()               {}
func (*ReqSolveGooglePlayOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{263} }

func (m *ReqSolveGooglePlayOrder) GetInappPurchaseData() string {
	if m != nil {
		return m.InappPurchaseData
	}
	return ""
}

func (m *ReqSolveGooglePlayOrder) GetInappDataSignature() string {
	if m != nil {
		return m.InappDataSignature
	}
	return ""
}

type ReqStartCustomizedContest struct {
	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
}

func (m *ReqStartCustomizedContest) Reset()                    { *m = ReqStartCustomizedContest{} }
func (m *ReqStartCustomizedContest) String() string            { return proto.CompactTextString(m) }
func (*ReqStartCustomizedContest) ProtoMessage()               {}
func (*ReqStartCustomizedContest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{264} }

func (m *ReqStartCustomizedContest) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

type ReqSyncGame struct {
	RoundId string `protobuf:"bytes,1,opt,name=round_id,json=roundId" json:"round_id,omitempty"`
	Step    uint32 `protobuf:"varint,2,opt,name=step" json:"step,omitempty"`
}

func (m *ReqSyncGame) Reset()                    { *m = ReqSyncGame{} }
func (m *ReqSyncGame) String() string            { return proto.CompactTextString(m) }
func (*ReqSyncGame) ProtoMessage()               {}
func (*ReqSyncGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{265} }

func (m *ReqSyncGame) GetRoundId() string {
	if m != nil {
		return m.RoundId
	}
	return ""
}

func (m *ReqSyncGame) GetStep() uint32 {
	if m != nil {
		return m.Step
	}
	return 0
}

type ReqTakeAttachment struct {
	MailId uint32 `protobuf:"varint,1,opt,name=mail_id,json=mailId" json:"mail_id,omitempty"`
}

func (m *ReqTakeAttachment) Reset()                    { *m = ReqTakeAttachment{} }
func (m *ReqTakeAttachment) String() string            { return proto.CompactTextString(m) }
func (*ReqTakeAttachment) ProtoMessage()               {}
func (*ReqTakeAttachment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{266} }

func (m *ReqTakeAttachment) GetMailId() uint32 {
	if m != nil {
		return m.MailId
	}
	return 0
}

type ReqTargetCustomizedContest struct {
	UniqueId uint32 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
}

func (m *ReqTargetCustomizedContest) Reset()                    { *m = ReqTargetCustomizedContest{} }
func (m *ReqTargetCustomizedContest) String() string            { return proto.CompactTextString(m) }
func (*ReqTargetCustomizedContest) ProtoMessage()               {}
func (*ReqTargetCustomizedContest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{267} }

func (m *ReqTargetCustomizedContest) GetUniqueId() uint32 {
	if m != nil {
		return m.UniqueId
	}
	return 0
}

type ReqUpdateAccountSettings struct {
	Setting *AccountSetting `protobuf:"bytes,1,opt,name=setting" json:"setting,omitempty"`
}

func (m *ReqUpdateAccountSettings) Reset()                    { *m = ReqUpdateAccountSettings{} }
func (m *ReqUpdateAccountSettings) String() string            { return proto.CompactTextString(m) }
func (*ReqUpdateAccountSettings) ProtoMessage()               {}
func (*ReqUpdateAccountSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{268} }

func (m *ReqUpdateAccountSettings) GetSetting() *AccountSetting {
	if m != nil {
		return m.Setting
	}
	return nil
}

type ReqUpdateClientValue struct {
	Key   uint32 `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ReqUpdateClientValue) Reset()                    { *m = ReqUpdateClientValue{} }
func (m *ReqUpdateClientValue) String() string            { return proto.CompactTextString(m) }
func (*ReqUpdateClientValue) ProtoMessage()               {}
func (*ReqUpdateClientValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{269} }

func (m *ReqUpdateClientValue) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ReqUpdateClientValue) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ReqUpdateCommentSetting struct {
	CommentAllow uint32 `protobuf:"varint,1,opt,name=comment_allow,json=commentAllow" json:"comment_allow,omitempty"`
}

func (m *ReqUpdateCommentSetting) Reset()                    { *m = ReqUpdateCommentSetting{} }
func (m *ReqUpdateCommentSetting) String() string            { return proto.CompactTextString(m) }
func (*ReqUpdateCommentSetting) ProtoMessage()               {}
func (*ReqUpdateCommentSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{270} }

func (m *ReqUpdateCommentSetting) GetCommentAllow() uint32 {
	if m != nil {
		return m.CommentAllow
	}
	return 0
}

type ReqUpdateIDCardInfo struct {
	Fullname string `protobuf:"bytes,1,opt,name=fullname" json:"fullname,omitempty"`
	CardNo   string `protobuf:"bytes,2,opt,name=card_no,json=cardNo" json:"card_no,omitempty"`
}

func (m *ReqUpdateIDCardInfo) Reset()                    { *m = ReqUpdateIDCardInfo{} }
func (m *ReqUpdateIDCardInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqUpdateIDCardInfo) ProtoMessage()               {}
func (*ReqUpdateIDCardInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{271} }

func (m *ReqUpdateIDCardInfo) GetFullname() string {
	if m != nil {
		return m.Fullname
	}
	return ""
}

func (m *ReqUpdateIDCardInfo) GetCardNo() string {
	if m != nil {
		return m.CardNo
	}
	return ""
}

type ReqUpdateReadComment struct {
	ReadId uint32 `protobuf:"varint,1,opt,name=read_id,json=readId" json:"read_id,omitempty"`
}

func (m *ReqUpdateReadComment) Reset()                    { *m = ReqUpdateReadComment{} }
func (m *ReqUpdateReadComment) String() string            { return proto.CompactTextString(m) }
func (*ReqUpdateReadComment) ProtoMessage()               {}
func (*ReqUpdateReadComment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{272} }

func (m *ReqUpdateReadComment) GetReadId() uint32 {
	if m != nil {
		return m.ReadId
	}
	return 0
}

type ReqUpgradeCharacter struct {
	CharacterId uint32 `protobuf:"varint,1,opt,name=character_id,json=characterId" json:"character_id,omitempty"`
}

func (m *ReqUpgradeCharacter) Reset()                    { *m = ReqUpgradeCharacter{} }
func (m *ReqUpgradeCharacter) String() string            { return proto.CompactTextString(m) }
func (*ReqUpgradeCharacter) ProtoMessage()               {}
func (*ReqUpgradeCharacter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{273} }

func (m *ReqUpgradeCharacter) GetCharacterId() uint32 {
	if m != nil {
		return m.CharacterId
	}
	return 0
}

type ReqUseBagItem struct {
	ItemId uint32 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (m *ReqUseBagItem) Reset()                    { *m = ReqUseBagItem{} }
func (m *ReqUseBagItem) String() string            { return proto.CompactTextString(m) }
func (*ReqUseBagItem) ProtoMessage()               {}
func (*ReqUseBagItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{274} }

func (m *ReqUseBagItem) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

type ReqUseGiftCode struct {
	Code string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
}

func (m *ReqUseGiftCode) Reset()                    { *m = ReqUseGiftCode{} }
func (m *ReqUseGiftCode) String() string            { return proto.CompactTextString(m) }
func (*ReqUseGiftCode) ProtoMessage()               {}
func (*ReqUseGiftCode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{275} }

func (m *ReqUseGiftCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type ReqUseTitle struct {
	Title uint32 `protobuf:"varint,1,opt,name=title" json:"title,omitempty"`
}

func (m *ReqUseTitle) Reset()                    { *m = ReqUseTitle{} }
func (m *ReqUseTitle) String() string            { return proto.CompactTextString(m) }
func (*ReqUseTitle) ProtoMessage()               {}
func (*ReqUseTitle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{276} }

func (m *ReqUseTitle) GetTitle() uint32 {
	if m != nil {
		return m.Title
	}
	return 0
}

type ReqVerifyCodeForSecure struct {
	Code      string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Operation uint32 `protobuf:"varint,2,opt,name=operation" json:"operation,omitempty"`
}

func (m *ReqVerifyCodeForSecure) Reset()                    { *m = ReqVerifyCodeForSecure{} }
func (m *ReqVerifyCodeForSecure) String() string            { return proto.CompactTextString(m) }
func (*ReqVerifyCodeForSecure) ProtoMessage()               {}
func (*ReqVerifyCodeForSecure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{277} }

func (m *ReqVerifyCodeForSecure) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ReqVerifyCodeForSecure) GetOperation() uint32 {
	if m != nil {
		return m.Operation
	}
	return 0
}

type ResAccountActivityData struct {
	Error                *Error                          `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	ExchangeRecords      []*ExchangeRecord               `protobuf:"bytes,2,rep,name=exchange_records,json=exchangeRecords" json:"exchange_records,omitempty"`
	TaskProgressList     []*TaskProgress                 `protobuf:"bytes,3,rep,name=task_progress_list,json=taskProgressList" json:"task_progress_list,omitempty"`
	AccumulatedPointList []*ActivityAccumulatedPointData `protobuf:"bytes,4,rep,name=accumulated_point_list,json=accumulatedPointList" json:"accumulated_point_list,omitempty"`
	RankDataList         []*ActivityRankPointData        `protobuf:"bytes,5,rep,name=rank_data_list,json=rankDataList" json:"rank_data_list,omitempty"`
}

func (m *ResAccountActivityData) Reset()                    { *m = ResAccountActivityData{} }
func (m *ResAccountActivityData) String() string            { return proto.CompactTextString(m) }
func (*ResAccountActivityData) ProtoMessage()               {}
func (*ResAccountActivityData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{278} }

func (m *ResAccountActivityData) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResAccountActivityData) GetExchangeRecords() []*ExchangeRecord {
	if m != nil {
		return m.ExchangeRecords
	}
	return nil
}

func (m *ResAccountActivityData) GetTaskProgressList() []*TaskProgress {
	if m != nil {
		return m.TaskProgressList
	}
	return nil
}

func (m *ResAccountActivityData) GetAccumulatedPointList() []*ActivityAccumulatedPointData {
	if m != nil {
		return m.AccumulatedPointList
	}
	return nil
}

func (m *ResAccountActivityData) GetRankDataList() []*ActivityRankPointData {
	if m != nil {
		return m.RankDataList
	}
	return nil
}

type ResAccountCharacterInfo struct {
	UnlockList []uint32 `protobuf:"varint,1,rep,packed,name=unlock_list,json=unlockList" json:"unlock_list,omitempty"`
}

func (m *ResAccountCharacterInfo) Reset()                    { *m = ResAccountCharacterInfo{} }
func (m *ResAccountCharacterInfo) String() string            { return proto.CompactTextString(m) }
func (*ResAccountCharacterInfo) ProtoMessage()               {}
func (*ResAccountCharacterInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{279} }

func (m *ResAccountCharacterInfo) GetUnlockList() []uint32 {
	if m != nil {
		return m.UnlockList
	}
	return nil
}

type ResAccountInfo struct {
	Error   *Error   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Account *Account `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	Room    *Room    `protobuf:"bytes,3,opt,name=room" json:"room,omitempty"`
}

func (m *ResAccountInfo) Reset()                    { *m = ResAccountInfo{} }
func (m *ResAccountInfo) String() string            { return proto.CompactTextString(m) }
func (*ResAccountInfo) ProtoMessage()               {}
func (*ResAccountInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{280} }

func (m *ResAccountInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResAccountInfo) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *ResAccountInfo) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

type ResAccountSettings struct {
	Error    *Error            `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Settings []*AccountSetting `protobuf:"bytes,2,rep,name=settings" json:"settings,omitempty"`
}

func (m *ResAccountSettings) Reset()                    { *m = ResAccountSettings{} }
func (m *ResAccountSettings) String() string            { return proto.CompactTextString(m) }
func (*ResAccountSettings) ProtoMessage()               {}
func (*ResAccountSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{281} }

func (m *ResAccountSettings) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResAccountSettings) GetSettings() []*AccountSetting {
	if m != nil {
		return m.Settings
	}
	return nil
}

type ResAccountStates struct {
	Error  *Error                `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	States []*AccountActiveState `protobuf:"bytes,2,rep,name=states" json:"states,omitempty"`
}

func (m *ResAccountStates) Reset()                    { *m = ResAccountStates{} }
func (m *ResAccountStates) String() string            { return proto.CompactTextString(m) }
func (*ResAccountStates) ProtoMessage()               {}
func (*ResAccountStates) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{282} }

func (m *ResAccountStates) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResAccountStates) GetStates() []*AccountActiveState {
	if m != nil {
		return m.States
	}
	return nil
}

type ResAccountStatisticInfo struct {
	Error         *Error                    `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	StatisticData []*AccountStatisticData   `protobuf:"bytes,2,rep,name=statistic_data,json=statisticData" json:"statistic_data,omitempty"`
	DetailData    *AccountDetailStatisticV2 `protobuf:"bytes,3,opt,name=detail_data,json=detailData" json:"detail_data,omitempty"`
}

func (m *ResAccountStatisticInfo) Reset()                    { *m = ResAccountStatisticInfo{} }
func (m *ResAccountStatisticInfo) String() string            { return proto.CompactTextString(m) }
func (*ResAccountStatisticInfo) ProtoMessage()               {}
func (*ResAccountStatisticInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{283} }

func (m *ResAccountStatisticInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResAccountStatisticInfo) GetStatisticData() []*AccountStatisticData {
	if m != nil {
		return m.StatisticData
	}
	return nil
}

func (m *ResAccountStatisticInfo) GetDetailData() *AccountDetailStatisticV2 {
	if m != nil {
		return m.DetailData
	}
	return nil
}

type ResAccountUpdate struct {
	Error  *Error         `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Update *AccountUpdate `protobuf:"bytes,2,opt,name=update" json:"update,omitempty"`
}

func (m *ResAccountUpdate) Reset()                    { *m = ResAccountUpdate{} }
func (m *ResAccountUpdate) String() string            { return proto.CompactTextString(m) }
func (*ResAccountUpdate) ProtoMessage()               {}
func (*ResAccountUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{284} }

func (m *ResAccountUpdate) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResAccountUpdate) GetUpdate() *AccountUpdate {
	if m != nil {
		return m.Update
	}
	return nil
}

type ResAchievement struct {
	Error      *Error                 `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Progresses []*AchievementProgress `protobuf:"bytes,2,rep,name=progresses" json:"progresses,omitempty"`
}

func (m *ResAchievement) Reset()                    { *m = ResAchievement{} }
func (m *ResAchievement) String() string            { return proto.CompactTextString(m) }
func (*ResAchievement) ProtoMessage()               {}
func (*ResAchievement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{285} }

func (m *ResAchievement) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResAchievement) GetProgresses() []*AchievementProgress {
	if m != nil {
		return m.Progresses
	}
	return nil
}

type ResActivityList struct {
	Error      *Error      `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Activities []*Activity `protobuf:"bytes,2,rep,name=activities" json:"activities,omitempty"`
}

func (m *ResActivityList) Reset()                    { *m = ResActivityList{} }
func (m *ResActivityList) String() string            { return proto.CompactTextString(m) }
func (*ResActivityList) ProtoMessage()               {}
func (*ResActivityList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{286} }

func (m *ResActivityList) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResActivityList) GetActivities() []*Activity {
	if m != nil {
		return m.Activities
	}
	return nil
}

type ResAddCollectedGameRecord struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *ResAddCollectedGameRecord) Reset()                    { *m = ResAddCollectedGameRecord{} }
func (m *ResAddCollectedGameRecord) String() string            { return proto.CompactTextString(m) }
func (*ResAddCollectedGameRecord) ProtoMessage()               {}
func (*ResAddCollectedGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{287} }

func (m *ResAddCollectedGameRecord) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ResAnnouncement struct {
	Error         *Error          `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Announcements []*Announcement `protobuf:"bytes,2,rep,name=announcements" json:"announcements,omitempty"`
	Sort          []uint32        `protobuf:"varint,3,rep,packed,name=sort" json:"sort,omitempty"`
	ReadList      []uint32        `protobuf:"varint,4,rep,packed,name=read_list,json=readList" json:"read_list,omitempty"`
}

func (m *ResAnnouncement) Reset()                    { *m = ResAnnouncement{} }
func (m *ResAnnouncement) String() string            { return proto.CompactTextString(m) }
func (*ResAnnouncement) ProtoMessage()               {}
func (*ResAnnouncement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{288} }

func (m *ResAnnouncement) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResAnnouncement) GetAnnouncements() []*Announcement {
	if m != nil {
		return m.Announcements
	}
	return nil
}

func (m *ResAnnouncement) GetSort() []uint32 {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *ResAnnouncement) GetReadList() []uint32 {
	if m != nil {
		return m.ReadList
	}
	return nil
}

type ResAuthGame struct {
	Error       *Error            `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Players     []*PlayerGameView `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	SeatList    []uint32          `protobuf:"varint,3,rep,packed,name=seat_list,json=seatList" json:"seat_list,omitempty"`
	IsGameStart bool              `protobuf:"varint,4,opt,name=is_game_start,json=isGameStart" json:"is_game_start,omitempty"`
	GameConfig  *GameConfig       `protobuf:"bytes,5,opt,name=game_config,json=gameConfig" json:"game_config,omitempty"`
	ReadyIdList []uint32          `protobuf:"varint,6,rep,packed,name=ready_id_list,json=readyIdList" json:"ready_id_list,omitempty"`
}

func (m *ResAuthGame) Reset()                    { *m = ResAuthGame{} }
func (m *ResAuthGame) String() string            { return proto.CompactTextString(m) }
func (*ResAuthGame) ProtoMessage()               {}
func (*ResAuthGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{289} }

func (m *ResAuthGame) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResAuthGame) GetPlayers() []*PlayerGameView {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *ResAuthGame) GetSeatList() []uint32 {
	if m != nil {
		return m.SeatList
	}
	return nil
}

func (m *ResAuthGame) GetIsGameStart() bool {
	if m != nil {
		return m.IsGameStart
	}
	return false
}

func (m *ResAuthGame) GetGameConfig() *GameConfig {
	if m != nil {
		return m.GameConfig
	}
	return nil
}

func (m *ResAuthGame) GetReadyIdList() []uint32 {
	if m != nil {
		return m.ReadyIdList
	}
	return nil
}

type ResBagInfo struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Bag   *Bag   `protobuf:"bytes,2,opt,name=bag" json:"bag,omitempty"`
}

func (m *ResBagInfo) Reset()                    { *m = ResBagInfo{} }
func (m *ResBagInfo) String() string            { return proto.CompactTextString(m) }
func (*ResBagInfo) ProtoMessage()               {}
func (*ResBagInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{290} }

func (m *ResBagInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResBagInfo) GetBag() *Bag {
	if m != nil {
		return m.Bag
	}
	return nil
}

type ResBuyFromChestShop struct {
	Error        *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	ChestId      uint32 `protobuf:"varint,2,opt,name=chest_id,json=chestId" json:"chest_id,omitempty"`
	ConsumeCount uint32 `protobuf:"varint,3,opt,name=consume_count,json=consumeCount" json:"consume_count,omitempty"`
}

func (m *ResBuyFromChestShop) Reset()                    { *m = ResBuyFromChestShop{} }
func (m *ResBuyFromChestShop) String() string            { return proto.CompactTextString(m) }
func (*ResBuyFromChestShop) ProtoMessage()               {}
func (*ResBuyFromChestShop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{291} }

func (m *ResBuyFromChestShop) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResBuyFromChestShop) GetChestId() uint32 {
	if m != nil {
		return m.ChestId
	}
	return 0
}

func (m *ResBuyFromChestShop) GetConsumeCount() uint32 {
	if m != nil {
		return m.ConsumeCount
	}
	return 0
}

type ResBuyFromShop struct {
	Error   *Error        `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Rewards []*RewardSlot `protobuf:"bytes,2,rep,name=rewards" json:"rewards,omitempty"`
}

func (m *ResBuyFromShop) Reset()                    { *m = ResBuyFromShop{} }
func (m *ResBuyFromShop) String() string            { return proto.CompactTextString(m) }
func (*ResBuyFromShop) ProtoMessage()               {}
func (*ResBuyFromShop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{292} }

func (m *ResBuyFromShop) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResBuyFromShop) GetRewards() []*RewardSlot {
	if m != nil {
		return m.Rewards
	}
	return nil
}

type ResChangeCollectedGameRecordRemarks struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *ResChangeCollectedGameRecordRemarks) Reset()         { *m = ResChangeCollectedGameRecordRemarks{} }
func (m *ResChangeCollectedGameRecordRemarks) String() string { return proto.CompactTextString(m) }
func (*ResChangeCollectedGameRecordRemarks) ProtoMessage()    {}
func (*ResChangeCollectedGameRecordRemarks) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{293}
}

func (m *ResChangeCollectedGameRecordRemarks) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ResCharacterInfo struct {
	Error           *Error       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Characters      []*Character `protobuf:"bytes,2,rep,name=characters" json:"characters,omitempty"`
	Skins           []uint32     `protobuf:"varint,3,rep,packed,name=skins" json:"skins,omitempty"`
	MainCharacterId uint32       `protobuf:"varint,4,opt,name=main_character_id,json=mainCharacterId" json:"main_character_id,omitempty"`
	SendGiftCount   uint32       `protobuf:"varint,5,opt,name=send_gift_count,json=sendGiftCount" json:"send_gift_count,omitempty"`
	SendGiftLimit   uint32       `protobuf:"varint,6,opt,name=send_gift_limit,json=sendGiftLimit" json:"send_gift_limit,omitempty"`
}

func (m *ResCharacterInfo) Reset()                    { *m = ResCharacterInfo{} }
func (m *ResCharacterInfo) String() string            { return proto.CompactTextString(m) }
func (*ResCharacterInfo) ProtoMessage()               {}
func (*ResCharacterInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{294} }

func (m *ResCharacterInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCharacterInfo) GetCharacters() []*Character {
	if m != nil {
		return m.Characters
	}
	return nil
}

func (m *ResCharacterInfo) GetSkins() []uint32 {
	if m != nil {
		return m.Skins
	}
	return nil
}

func (m *ResCharacterInfo) GetMainCharacterId() uint32 {
	if m != nil {
		return m.MainCharacterId
	}
	return 0
}

func (m *ResCharacterInfo) GetSendGiftCount() uint32 {
	if m != nil {
		return m.SendGiftCount
	}
	return 0
}

func (m *ResCharacterInfo) GetSendGiftLimit() uint32 {
	if m != nil {
		return m.SendGiftLimit
	}
	return 0
}

type ResClientValue struct {
	Datas          []*ResClientValue_Value `protobuf:"bytes,1,rep,name=datas" json:"datas,omitempty"`
	RechargedCount uint32                  `protobuf:"varint,2,opt,name=recharged_count,json=rechargedCount" json:"recharged_count,omitempty"`
}

func (m *ResClientValue) Reset()                    { *m = ResClientValue{} }
func (m *ResClientValue) String() string            { return proto.CompactTextString(m) }
func (*ResClientValue) ProtoMessage()               {}
func (*ResClientValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{295} }

func (m *ResClientValue) GetDatas() []*ResClientValue_Value {
	if m != nil {
		return m.Datas
	}
	return nil
}

func (m *ResClientValue) GetRechargedCount() uint32 {
	if m != nil {
		return m.RechargedCount
	}
	return 0
}

type ResClientValue_Value struct {
	Key   uint32 `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ResClientValue_Value) Reset()                    { *m = ResClientValue_Value{} }
func (m *ResClientValue_Value) String() string            { return proto.CompactTextString(m) }
func (*ResClientValue_Value) ProtoMessage()               {}
func (*ResClientValue_Value) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{295, 0} }

func (m *ResClientValue_Value) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ResClientValue_Value) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ResCollectedGameRecordList struct {
	Error              *Error                 `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	RecordList         []*RecordCollectedData `protobuf:"bytes,2,rep,name=record_list,json=recordList" json:"record_list,omitempty"`
	RecordCollectLimit uint32                 `protobuf:"varint,3,opt,name=record_collect_limit,json=recordCollectLimit" json:"record_collect_limit,omitempty"`
}

func (m *ResCollectedGameRecordList) Reset()                    { *m = ResCollectedGameRecordList{} }
func (m *ResCollectedGameRecordList) String() string            { return proto.CompactTextString(m) }
func (*ResCollectedGameRecordList) ProtoMessage()               {}
func (*ResCollectedGameRecordList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{296} }

func (m *ResCollectedGameRecordList) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCollectedGameRecordList) GetRecordList() []*RecordCollectedData {
	if m != nil {
		return m.RecordList
	}
	return nil
}

func (m *ResCollectedGameRecordList) GetRecordCollectLimit() uint32 {
	if m != nil {
		return m.RecordCollectLimit
	}
	return 0
}

type ResCommentSetting struct {
	Error        *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	CommentAllow uint32 `protobuf:"varint,2,opt,name=comment_allow,json=commentAllow" json:"comment_allow,omitempty"`
}

func (m *ResCommentSetting) Reset()                    { *m = ResCommentSetting{} }
func (m *ResCommentSetting) String() string            { return proto.CompactTextString(m) }
func (*ResCommentSetting) ProtoMessage()               {}
func (*ResCommentSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{297} }

func (m *ResCommentSetting) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCommentSetting) GetCommentAllow() uint32 {
	if m != nil {
		return m.CommentAllow
	}
	return 0
}

type ResCommon struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *ResCommon) Reset()                    { *m = ResCommon{} }
func (m *ResCommon) String() string            { return proto.CompactTextString(m) }
func (*ResCommon) ProtoMessage()               {}
func (*ResCommon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{298} }

func (m *ResCommon) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ResCommonView struct {
	Error *Error                `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Slots []*ResCommonView_Slot `protobuf:"bytes,2,rep,name=slots" json:"slots,omitempty"`
}

func (m *ResCommonView) Reset()                    { *m = ResCommonView{} }
func (m *ResCommonView) String() string            { return proto.CompactTextString(m) }
func (*ResCommonView) ProtoMessage()               {}
func (*ResCommonView) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{299} }

func (m *ResCommonView) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCommonView) GetSlots() []*ResCommonView_Slot {
	if m != nil {
		return m.Slots
	}
	return nil
}

type ResCommonView_Slot struct {
	Slot  uint32 `protobuf:"varint,1,opt,name=slot" json:"slot,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ResCommonView_Slot) Reset()                    { *m = ResCommonView_Slot{} }
func (m *ResCommonView_Slot) String() string            { return proto.CompactTextString(m) }
func (*ResCommonView_Slot) ProtoMessage()               {}
func (*ResCommonView_Slot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{299, 0} }

func (m *ResCommonView_Slot) GetSlot() uint32 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *ResCommonView_Slot) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ResConnectionInfo struct {
	Error          *Error           `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	ClientEndpoint *NetworkEndpoint `protobuf:"bytes,2,opt,name=client_endpoint,json=clientEndpoint" json:"client_endpoint,omitempty"`
}

func (m *ResConnectionInfo) Reset()                    { *m = ResConnectionInfo{} }
func (m *ResConnectionInfo) String() string            { return proto.CompactTextString(m) }
func (*ResConnectionInfo) ProtoMessage()               {}
func (*ResConnectionInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{300} }

func (m *ResConnectionInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResConnectionInfo) GetClientEndpoint() *NetworkEndpoint {
	if m != nil {
		return m.ClientEndpoint
	}
	return nil
}

type ResCreateAlipayAppOrder struct {
	Error     *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	AlipayUrl string `protobuf:"bytes,2,opt,name=alipay_url,json=alipayUrl" json:"alipay_url,omitempty"`
}

func (m *ResCreateAlipayAppOrder) Reset()                    { *m = ResCreateAlipayAppOrder{} }
func (m *ResCreateAlipayAppOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateAlipayAppOrder) ProtoMessage()               {}
func (*ResCreateAlipayAppOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{301} }

func (m *ResCreateAlipayAppOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateAlipayAppOrder) GetAlipayUrl() string {
	if m != nil {
		return m.AlipayUrl
	}
	return ""
}

type ResCreateAlipayOrder struct {
	Error     *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	AlipayUrl string `protobuf:"bytes,2,opt,name=alipay_url,json=alipayUrl" json:"alipay_url,omitempty"`
}

func (m *ResCreateAlipayOrder) Reset()                    { *m = ResCreateAlipayOrder{} }
func (m *ResCreateAlipayOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateAlipayOrder) ProtoMessage()               {}
func (*ResCreateAlipayOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{302} }

func (m *ResCreateAlipayOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateAlipayOrder) GetAlipayUrl() string {
	if m != nil {
		return m.AlipayUrl
	}
	return ""
}

type ResCreateAlipayScanOrder struct {
	Error        *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	QrcodeBuffer string `protobuf:"bytes,2,opt,name=qrcode_buffer,json=qrcodeBuffer" json:"qrcode_buffer,omitempty"`
	OrderId      string `protobuf:"bytes,3,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	QrCode       string `protobuf:"bytes,4,opt,name=qr_code,json=qrCode" json:"qr_code,omitempty"`
}

func (m *ResCreateAlipayScanOrder) Reset()                    { *m = ResCreateAlipayScanOrder{} }
func (m *ResCreateAlipayScanOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateAlipayScanOrder) ProtoMessage()               {}
func (*ResCreateAlipayScanOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{303} }

func (m *ResCreateAlipayScanOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateAlipayScanOrder) GetQrcodeBuffer() string {
	if m != nil {
		return m.QrcodeBuffer
	}
	return ""
}

func (m *ResCreateAlipayScanOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ResCreateAlipayScanOrder) GetQrCode() string {
	if m != nil {
		return m.QrCode
	}
	return ""
}

type ResCreateBillingOrder struct {
	Error   *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateBillingOrder) Reset()                    { *m = ResCreateBillingOrder{} }
func (m *ResCreateBillingOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateBillingOrder) ProtoMessage()               {}
func (*ResCreateBillingOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{304} }

func (m *ResCreateBillingOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateBillingOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCreateENAlipayOrder struct {
	Error   *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateENAlipayOrder) Reset()                    { *m = ResCreateENAlipayOrder{} }
func (m *ResCreateENAlipayOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateENAlipayOrder) ProtoMessage()               {}
func (*ResCreateENAlipayOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{305} }

func (m *ResCreateENAlipayOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateENAlipayOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCreateENJCBOrder struct {
	Error   *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateENJCBOrder) Reset()                    { *m = ResCreateENJCBOrder{} }
func (m *ResCreateENJCBOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateENJCBOrder) ProtoMessage()               {}
func (*ResCreateENJCBOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{306} }

func (m *ResCreateENJCBOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateENJCBOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCreateENMasterCardOrder struct {
	Error   *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateENMasterCardOrder) Reset()                    { *m = ResCreateENMasterCardOrder{} }
func (m *ResCreateENMasterCardOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateENMasterCardOrder) ProtoMessage()               {}
func (*ResCreateENMasterCardOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{307} }

func (m *ResCreateENMasterCardOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateENMasterCardOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCreateENPaypalOrder struct {
	Error   *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateENPaypalOrder) Reset()                    { *m = ResCreateENPaypalOrder{} }
func (m *ResCreateENPaypalOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateENPaypalOrder) ProtoMessage()               {}
func (*ResCreateENPaypalOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{308} }

func (m *ResCreateENPaypalOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateENPaypalOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCreateENVisaOrder struct {
	Error   *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateENVisaOrder) Reset()                    { *m = ResCreateENVisaOrder{} }
func (m *ResCreateENVisaOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateENVisaOrder) ProtoMessage()               {}
func (*ResCreateENVisaOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{309} }

func (m *ResCreateENVisaOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateENVisaOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCreateJPAuOrder struct {
	Error   *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateJPAuOrder) Reset()                    { *m = ResCreateJPAuOrder{} }
func (m *ResCreateJPAuOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateJPAuOrder) ProtoMessage()               {}
func (*ResCreateJPAuOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{310} }

func (m *ResCreateJPAuOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateJPAuOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCreateJPCreditCardOrder struct {
	Error   *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateJPCreditCardOrder) Reset()                    { *m = ResCreateJPCreditCardOrder{} }
func (m *ResCreateJPCreditCardOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateJPCreditCardOrder) ProtoMessage()               {}
func (*ResCreateJPCreditCardOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{311} }

func (m *ResCreateJPCreditCardOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateJPCreditCardOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCreateJPDocomoOrder struct {
	Error   *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateJPDocomoOrder) Reset()                    { *m = ResCreateJPDocomoOrder{} }
func (m *ResCreateJPDocomoOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateJPDocomoOrder) ProtoMessage()               {}
func (*ResCreateJPDocomoOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{312} }

func (m *ResCreateJPDocomoOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateJPDocomoOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCreateJPPaypalOrder struct {
	Error   *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateJPPaypalOrder) Reset()                    { *m = ResCreateJPPaypalOrder{} }
func (m *ResCreateJPPaypalOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateJPPaypalOrder) ProtoMessage()               {}
func (*ResCreateJPPaypalOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{313} }

func (m *ResCreateJPPaypalOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateJPPaypalOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCreateJPSoftbankOrder struct {
	Error   *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateJPSoftbankOrder) Reset()                    { *m = ResCreateJPSoftbankOrder{} }
func (m *ResCreateJPSoftbankOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateJPSoftbankOrder) ProtoMessage()               {}
func (*ResCreateJPSoftbankOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{314} }

func (m *ResCreateJPSoftbankOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateJPSoftbankOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCreateRoom struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Room  *Room  `protobuf:"bytes,2,opt,name=room" json:"room,omitempty"`
}

func (m *ResCreateRoom) Reset()                    { *m = ResCreateRoom{} }
func (m *ResCreateRoom) String() string            { return proto.CompactTextString(m) }
func (*ResCreateRoom) ProtoMessage()               {}
func (*ResCreateRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{315} }

func (m *ResCreateRoom) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateRoom) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

type ResCreateWechatAppOrder struct {
	Error              *Error                                      `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	CallWechatAppParam *ResCreateWechatAppOrder_CallWechatAppParam `protobuf:"bytes,2,opt,name=call_wechat_app_param,json=callWechatAppParam" json:"call_wechat_app_param,omitempty"`
}

func (m *ResCreateWechatAppOrder) Reset()                    { *m = ResCreateWechatAppOrder{} }
func (m *ResCreateWechatAppOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateWechatAppOrder) ProtoMessage()               {}
func (*ResCreateWechatAppOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{316} }

func (m *ResCreateWechatAppOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateWechatAppOrder) GetCallWechatAppParam() *ResCreateWechatAppOrder_CallWechatAppParam {
	if m != nil {
		return m.CallWechatAppParam
	}
	return nil
}

type ResCreateWechatAppOrder_CallWechatAppParam struct {
	Appid     string `protobuf:"bytes,1,opt,name=appid" json:"appid,omitempty"`
	Partnerid string `protobuf:"bytes,2,opt,name=partnerid" json:"partnerid,omitempty"`
	Prepayid  string `protobuf:"bytes,3,opt,name=prepayid" json:"prepayid,omitempty"`
	Package   string `protobuf:"bytes,4,opt,name=package" json:"package,omitempty"`
	Noncestr  string `protobuf:"bytes,5,opt,name=noncestr" json:"noncestr,omitempty"`
	Timestamp string `protobuf:"bytes,6,opt,name=timestamp" json:"timestamp,omitempty"`
	Sign      string `protobuf:"bytes,7,opt,name=sign" json:"sign,omitempty"`
}

func (m *ResCreateWechatAppOrder_CallWechatAppParam) Reset() {
	*m = ResCreateWechatAppOrder_CallWechatAppParam{}
}
func (m *ResCreateWechatAppOrder_CallWechatAppParam) String() string {
	return proto.CompactTextString(m)
}
func (*ResCreateWechatAppOrder_CallWechatAppParam) ProtoMessage() {}
func (*ResCreateWechatAppOrder_CallWechatAppParam) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{316, 0}
}

func (m *ResCreateWechatAppOrder_CallWechatAppParam) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *ResCreateWechatAppOrder_CallWechatAppParam) GetPartnerid() string {
	if m != nil {
		return m.Partnerid
	}
	return ""
}

func (m *ResCreateWechatAppOrder_CallWechatAppParam) GetPrepayid() string {
	if m != nil {
		return m.Prepayid
	}
	return ""
}

func (m *ResCreateWechatAppOrder_CallWechatAppParam) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *ResCreateWechatAppOrder_CallWechatAppParam) GetNoncestr() string {
	if m != nil {
		return m.Noncestr
	}
	return ""
}

func (m *ResCreateWechatAppOrder_CallWechatAppParam) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *ResCreateWechatAppOrder_CallWechatAppParam) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

type ResCreateWechatNativeOrder struct {
	Error        *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	QrcodeBuffer string `protobuf:"bytes,2,opt,name=qrcode_buffer,json=qrcodeBuffer" json:"qrcode_buffer,omitempty"`
	OrderId      string `protobuf:"bytes,3,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ResCreateWechatNativeOrder) Reset()                    { *m = ResCreateWechatNativeOrder{} }
func (m *ResCreateWechatNativeOrder) String() string            { return proto.CompactTextString(m) }
func (*ResCreateWechatNativeOrder) ProtoMessage()               {}
func (*ResCreateWechatNativeOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{317} }

func (m *ResCreateWechatNativeOrder) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCreateWechatNativeOrder) GetQrcodeBuffer() string {
	if m != nil {
		return m.QrcodeBuffer
	}
	return ""
}

func (m *ResCreateWechatNativeOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ResCurrentMatchInfo struct {
	Error   *Error                                  `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Matches []*ResCurrentMatchInfo_CurrentMatchInfo `protobuf:"bytes,2,rep,name=matches" json:"matches,omitempty"`
}

func (m *ResCurrentMatchInfo) Reset()                    { *m = ResCurrentMatchInfo{} }
func (m *ResCurrentMatchInfo) String() string            { return proto.CompactTextString(m) }
func (*ResCurrentMatchInfo) ProtoMessage()               {}
func (*ResCurrentMatchInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{318} }

func (m *ResCurrentMatchInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResCurrentMatchInfo) GetMatches() []*ResCurrentMatchInfo_CurrentMatchInfo {
	if m != nil {
		return m.Matches
	}
	return nil
}

type ResCurrentMatchInfo_CurrentMatchInfo struct {
	ModeId       uint32 `protobuf:"varint,1,opt,name=mode_id,json=modeId" json:"mode_id,omitempty"`
	PlayingCount uint32 `protobuf:"varint,2,opt,name=playing_count,json=playingCount" json:"playing_count,omitempty"`
}

func (m *ResCurrentMatchInfo_CurrentMatchInfo) Reset()         { *m = ResCurrentMatchInfo_CurrentMatchInfo{} }
func (m *ResCurrentMatchInfo_CurrentMatchInfo) String() string { return proto.CompactTextString(m) }
func (*ResCurrentMatchInfo_CurrentMatchInfo) ProtoMessage()    {}
func (*ResCurrentMatchInfo_CurrentMatchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{318, 0}
}

func (m *ResCurrentMatchInfo_CurrentMatchInfo) GetModeId() uint32 {
	if m != nil {
		return m.ModeId
	}
	return 0
}

func (m *ResCurrentMatchInfo_CurrentMatchInfo) GetPlayingCount() uint32 {
	if m != nil {
		return m.PlayingCount
	}
	return 0
}

type ResDailySignInInfo struct {
	Error      *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	SignInDays uint32 `protobuf:"varint,2,opt,name=sign_in_days,json=signInDays" json:"sign_in_days,omitempty"`
}

func (m *ResDailySignInInfo) Reset()                    { *m = ResDailySignInInfo{} }
func (m *ResDailySignInInfo) String() string            { return proto.CompactTextString(m) }
func (*ResDailySignInInfo) ProtoMessage()               {}
func (*ResDailySignInInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{319} }

func (m *ResDailySignInInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResDailySignInInfo) GetSignInDays() uint32 {
	if m != nil {
		return m.SignInDays
	}
	return 0
}

type ResDailyTask struct {
	Error           *Error          `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Progresses      []*TaskProgress `protobuf:"bytes,2,rep,name=progresses" json:"progresses,omitempty"`
	HasRefreshCount bool            `protobuf:"varint,3,opt,name=has_refresh_count,json=hasRefreshCount" json:"has_refresh_count,omitempty"`
}

func (m *ResDailyTask) Reset()                    { *m = ResDailyTask{} }
func (m *ResDailyTask) String() string            { return proto.CompactTextString(m) }
func (*ResDailyTask) ProtoMessage()               {}
func (*ResDailyTask) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{320} }

func (m *ResDailyTask) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResDailyTask) GetProgresses() []*TaskProgress {
	if m != nil {
		return m.Progresses
	}
	return nil
}

func (m *ResDailyTask) GetHasRefreshCount() bool {
	if m != nil {
		return m.HasRefreshCount
	}
	return false
}

type ResEnterCustomizedContest struct {
	Error        *Error                         `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	DetailInfo   *CustomizedContestDetail       `protobuf:"bytes,2,opt,name=detail_info,json=detailInfo" json:"detail_info,omitempty"`
	PlayerReport *CustomizedContestPlayerReport `protobuf:"bytes,3,opt,name=player_report,json=playerReport" json:"player_report,omitempty"`
	IsFollowed   bool                           `protobuf:"varint,4,opt,name=is_followed,json=isFollowed" json:"is_followed,omitempty"`
}

func (m *ResEnterCustomizedContest) Reset()                    { *m = ResEnterCustomizedContest{} }
func (m *ResEnterCustomizedContest) String() string            { return proto.CompactTextString(m) }
func (*ResEnterCustomizedContest) ProtoMessage()               {}
func (*ResEnterCustomizedContest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{321} }

func (m *ResEnterCustomizedContest) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResEnterCustomizedContest) GetDetailInfo() *CustomizedContestDetail {
	if m != nil {
		return m.DetailInfo
	}
	return nil
}

func (m *ResEnterCustomizedContest) GetPlayerReport() *CustomizedContestPlayerReport {
	if m != nil {
		return m.PlayerReport
	}
	return nil
}

func (m *ResEnterCustomizedContest) GetIsFollowed() bool {
	if m != nil {
		return m.IsFollowed
	}
	return false
}

type ResEnterGame struct {
	Error       *Error       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	IsEnd       bool         `protobuf:"varint,2,opt,name=is_end,json=isEnd" json:"is_end,omitempty"`
	Step        uint32       `protobuf:"varint,3,opt,name=step" json:"step,omitempty"`
	GameRestore *GameRestore `protobuf:"bytes,4,opt,name=game_restore,json=gameRestore" json:"game_restore,omitempty"`
}

func (m *ResEnterGame) Reset()                    { *m = ResEnterGame{} }
func (m *ResEnterGame) String() string            { return proto.CompactTextString(m) }
func (*ResEnterGame) ProtoMessage()               {}
func (*ResEnterGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{322} }

func (m *ResEnterGame) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResEnterGame) GetIsEnd() bool {
	if m != nil {
		return m.IsEnd
	}
	return false
}

func (m *ResEnterGame) GetStep() uint32 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *ResEnterGame) GetGameRestore() *GameRestore {
	if m != nil {
		return m.GameRestore
	}
	return nil
}

type ResExchangeActivityItem struct {
	Error         *Error           `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	ExecuteReward []*ExecuteReward `protobuf:"bytes,2,rep,name=execute_reward,json=executeReward" json:"execute_reward,omitempty"`
}

func (m *ResExchangeActivityItem) Reset()                    { *m = ResExchangeActivityItem{} }
func (m *ResExchangeActivityItem) String() string            { return proto.CompactTextString(m) }
func (*ResExchangeActivityItem) ProtoMessage()               {}
func (*ResExchangeActivityItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{323} }

func (m *ResExchangeActivityItem) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResExchangeActivityItem) GetExecuteReward() []*ExecuteReward {
	if m != nil {
		return m.ExecuteReward
	}
	return nil
}

type ResFetchCommentContent struct {
	Error    *Error         `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Comments []*CommentItem `protobuf:"bytes,2,rep,name=comments" json:"comments,omitempty"`
}

func (m *ResFetchCommentContent) Reset()                    { *m = ResFetchCommentContent{} }
func (m *ResFetchCommentContent) String() string            { return proto.CompactTextString(m) }
func (*ResFetchCommentContent) ProtoMessage()               {}
func (*ResFetchCommentContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{324} }

func (m *ResFetchCommentContent) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResFetchCommentContent) GetComments() []*CommentItem {
	if m != nil {
		return m.Comments
	}
	return nil
}

type ResFetchCommentList struct {
	Error         *Error   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	CommentAllow  uint32   `protobuf:"varint,2,opt,name=comment_allow,json=commentAllow" json:"comment_allow,omitempty"`
	CommentIdList []uint32 `protobuf:"varint,3,rep,packed,name=comment_id_list,json=commentIdList" json:"comment_id_list,omitempty"`
	LastReadId    uint32   `protobuf:"varint,4,opt,name=last_read_id,json=lastReadId" json:"last_read_id,omitempty"`
}

func (m *ResFetchCommentList) Reset()                    { *m = ResFetchCommentList{} }
func (m *ResFetchCommentList) String() string            { return proto.CompactTextString(m) }
func (*ResFetchCommentList) ProtoMessage()               {}
func (*ResFetchCommentList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{325} }

func (m *ResFetchCommentList) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResFetchCommentList) GetCommentAllow() uint32 {
	if m != nil {
		return m.CommentAllow
	}
	return 0
}

func (m *ResFetchCommentList) GetCommentIdList() []uint32 {
	if m != nil {
		return m.CommentIdList
	}
	return nil
}

func (m *ResFetchCommentList) GetLastReadId() uint32 {
	if m != nil {
		return m.LastReadId
	}
	return 0
}

type ResFetchCustomizedContestByContestId struct {
	Error       *Error                     `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	ContestInfo *CustomizedContestAbstract `protobuf:"bytes,2,opt,name=contest_info,json=contestInfo" json:"contest_info,omitempty"`
}

func (m *ResFetchCustomizedContestByContestId) Reset()         { *m = ResFetchCustomizedContestByContestId{} }
func (m *ResFetchCustomizedContestByContestId) String() string { return proto.CompactTextString(m) }
func (*ResFetchCustomizedContestByContestId) ProtoMessage()    {}
func (*ResFetchCustomizedContestByContestId) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{326}
}

func (m *ResFetchCustomizedContestByContestId) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResFetchCustomizedContestByContestId) GetContestInfo() *CustomizedContestAbstract {
	if m != nil {
		return m.ContestInfo
	}
	return nil
}

type ResFetchCustomizedContestExtendInfo struct {
	Error      *Error                     `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	ExtendList []*CustomizedContestExtend `protobuf:"bytes,2,rep,name=extend_list,json=extendList" json:"extend_list,omitempty"`
}

func (m *ResFetchCustomizedContestExtendInfo) Reset()         { *m = ResFetchCustomizedContestExtendInfo{} }
func (m *ResFetchCustomizedContestExtendInfo) String() string { return proto.CompactTextString(m) }
func (*ResFetchCustomizedContestExtendInfo) ProtoMessage()    {}
func (*ResFetchCustomizedContestExtendInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{327}
}

func (m *ResFetchCustomizedContestExtendInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResFetchCustomizedContestExtendInfo) GetExtendList() []*CustomizedContestExtend {
	if m != nil {
		return m.ExtendList
	}
	return nil
}

type ResFetchCustomizedContestGameLiveList struct {
	Error    *Error          `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	LiveList []*GameLiveHead `protobuf:"bytes,2,rep,name=live_list,json=liveList" json:"live_list,omitempty"`
}

func (m *ResFetchCustomizedContestGameLiveList) Reset()         { *m = ResFetchCustomizedContestGameLiveList{} }
func (m *ResFetchCustomizedContestGameLiveList) String() string { return proto.CompactTextString(m) }
func (*ResFetchCustomizedContestGameLiveList) ProtoMessage()    {}
func (*ResFetchCustomizedContestGameLiveList) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{328}
}

func (m *ResFetchCustomizedContestGameLiveList) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResFetchCustomizedContestGameLiveList) GetLiveList() []*GameLiveHead {
	if m != nil {
		return m.LiveList
	}
	return nil
}

type ResFetchCustomizedContestGameRecords struct {
	Error      *Error        `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	NextIndex  uint32        `protobuf:"varint,2,opt,name=next_index,json=nextIndex" json:"next_index,omitempty"`
	RecordList []*RecordGame `protobuf:"bytes,3,rep,name=record_list,json=recordList" json:"record_list,omitempty"`
}

func (m *ResFetchCustomizedContestGameRecords) Reset()         { *m = ResFetchCustomizedContestGameRecords{} }
func (m *ResFetchCustomizedContestGameRecords) String() string { return proto.CompactTextString(m) }
func (*ResFetchCustomizedContestGameRecords) ProtoMessage()    {}
func (*ResFetchCustomizedContestGameRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{329}
}

func (m *ResFetchCustomizedContestGameRecords) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResFetchCustomizedContestGameRecords) GetNextIndex() uint32 {
	if m != nil {
		return m.NextIndex
	}
	return 0
}

func (m *ResFetchCustomizedContestGameRecords) GetRecordList() []*RecordGame {
	if m != nil {
		return m.RecordList
	}
	return nil
}

type ResFetchCustomizedContestList struct {
	Error          *Error                   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Contests       []*CustomizedContestBase `protobuf:"bytes,2,rep,name=contests" json:"contests,omitempty"`
	FollowContests []*CustomizedContestBase `protobuf:"bytes,3,rep,name=follow_contests,json=followContests" json:"follow_contests,omitempty"`
}

func (m *ResFetchCustomizedContestList) Reset()                    { *m = ResFetchCustomizedContestList{} }
func (m *ResFetchCustomizedContestList) String() string            { return proto.CompactTextString(m) }
func (*ResFetchCustomizedContestList) ProtoMessage()               {}
func (*ResFetchCustomizedContestList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{330} }

func (m *ResFetchCustomizedContestList) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResFetchCustomizedContestList) GetContests() []*CustomizedContestBase {
	if m != nil {
		return m.Contests
	}
	return nil
}

func (m *ResFetchCustomizedContestList) GetFollowContests() []*CustomizedContestBase {
	if m != nil {
		return m.FollowContests
	}
	return nil
}

type ResFetchCustomizedContestOnlineInfo struct {
	Error        *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	OnlinePlayer uint32 `protobuf:"varint,2,opt,name=online_player,json=onlinePlayer" json:"online_player,omitempty"`
}

func (m *ResFetchCustomizedContestOnlineInfo) Reset()         { *m = ResFetchCustomizedContestOnlineInfo{} }
func (m *ResFetchCustomizedContestOnlineInfo) String() string { return proto.CompactTextString(m) }
func (*ResFetchCustomizedContestOnlineInfo) ProtoMessage()    {}
func (*ResFetchCustomizedContestOnlineInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{331}
}

func (m *ResFetchCustomizedContestOnlineInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResFetchCustomizedContestOnlineInfo) GetOnlinePlayer() uint32 {
	if m != nil {
		return m.OnlinePlayer
	}
	return 0
}

type ResFetchRankPointLeaderboard struct {
	Error           *Error                               `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Items           []*ResFetchRankPointLeaderboard_Item `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	LastRefreshTime uint32                               `protobuf:"varint,3,opt,name=last_refresh_time,json=lastRefreshTime" json:"last_refresh_time,omitempty"`
}

func (m *ResFetchRankPointLeaderboard) Reset()                    { *m = ResFetchRankPointLeaderboard{} }
func (m *ResFetchRankPointLeaderboard) String() string            { return proto.CompactTextString(m) }
func (*ResFetchRankPointLeaderboard) ProtoMessage()               {}
func (*ResFetchRankPointLeaderboard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{332} }

func (m *ResFetchRankPointLeaderboard) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResFetchRankPointLeaderboard) GetItems() []*ResFetchRankPointLeaderboard_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ResFetchRankPointLeaderboard) GetLastRefreshTime() uint32 {
	if m != nil {
		return m.LastRefreshTime
	}
	return 0
}

type ResFetchRankPointLeaderboard_Item struct {
	AccountId uint32          `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Rank      uint32          `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	View      *PlayerBaseView `protobuf:"bytes,3,opt,name=view" json:"view,omitempty"`
	Point     uint32          `protobuf:"varint,4,opt,name=point" json:"point,omitempty"`
}

func (m *ResFetchRankPointLeaderboard_Item) Reset()         { *m = ResFetchRankPointLeaderboard_Item{} }
func (m *ResFetchRankPointLeaderboard_Item) String() string { return proto.CompactTextString(m) }
func (*ResFetchRankPointLeaderboard_Item) ProtoMessage()    {}
func (*ResFetchRankPointLeaderboard_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{332, 0}
}

func (m *ResFetchRankPointLeaderboard_Item) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ResFetchRankPointLeaderboard_Item) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *ResFetchRankPointLeaderboard_Item) GetView() *PlayerBaseView {
	if m != nil {
		return m.View
	}
	return nil
}

func (m *ResFetchRankPointLeaderboard_Item) GetPoint() uint32 {
	if m != nil {
		return m.Point
	}
	return 0
}

type ResFriendApplyList struct {
	Error   *Error                            `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Applies []*ResFriendApplyList_FriendApply `protobuf:"bytes,2,rep,name=applies" json:"applies,omitempty"`
}

func (m *ResFriendApplyList) Reset()                    { *m = ResFriendApplyList{} }
func (m *ResFriendApplyList) String() string            { return proto.CompactTextString(m) }
func (*ResFriendApplyList) ProtoMessage()               {}
func (*ResFriendApplyList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{333} }

func (m *ResFriendApplyList) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResFriendApplyList) GetApplies() []*ResFriendApplyList_FriendApply {
	if m != nil {
		return m.Applies
	}
	return nil
}

type ResFriendApplyList_FriendApply struct {
	AccountId uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ApplyTime uint32 `protobuf:"varint,2,opt,name=apply_time,json=applyTime" json:"apply_time,omitempty"`
}

func (m *ResFriendApplyList_FriendApply) Reset()         { *m = ResFriendApplyList_FriendApply{} }
func (m *ResFriendApplyList_FriendApply) String() string { return proto.CompactTextString(m) }
func (*ResFriendApplyList_FriendApply) ProtoMessage()    {}
func (*ResFriendApplyList_FriendApply) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{333, 0}
}

func (m *ResFriendApplyList_FriendApply) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ResFriendApplyList_FriendApply) GetApplyTime() uint32 {
	if m != nil {
		return m.ApplyTime
	}
	return 0
}

type ResFriendList struct {
	Error          *Error    `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Friends        []*Friend `protobuf:"bytes,2,rep,name=friends" json:"friends,omitempty"`
	FriendMaxCount uint32    `protobuf:"varint,3,opt,name=friend_max_count,json=friendMaxCount" json:"friend_max_count,omitempty"`
}

func (m *ResFriendList) Reset()                    { *m = ResFriendList{} }
func (m *ResFriendList) String() string            { return proto.CompactTextString(m) }
func (*ResFriendList) ProtoMessage()               {}
func (*ResFriendList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{334} }

func (m *ResFriendList) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResFriendList) GetFriends() []*Friend {
	if m != nil {
		return m.Friends
	}
	return nil
}

func (m *ResFriendList) GetFriendMaxCount() uint32 {
	if m != nil {
		return m.FriendMaxCount
	}
	return 0
}

type ResGameLiveInfo struct {
	Error            *Error                `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	LeftStartSeconds uint32                `protobuf:"varint,2,opt,name=left_start_seconds,json=leftStartSeconds" json:"left_start_seconds,omitempty"`
	LiveHead         *GameLiveHead         `protobuf:"bytes,3,opt,name=live_head,json=liveHead" json:"live_head,omitempty"`
	Segments         []*GameLiveSegmentUri `protobuf:"bytes,4,rep,name=segments" json:"segments,omitempty"`
	NowMillisecond   uint32                `protobuf:"varint,5,opt,name=now_millisecond,json=nowMillisecond" json:"now_millisecond,omitempty"`
}

func (m *ResGameLiveInfo) Reset()                    { *m = ResGameLiveInfo{} }
func (m *ResGameLiveInfo) String() string            { return proto.CompactTextString(m) }
func (*ResGameLiveInfo) ProtoMessage()               {}
func (*ResGameLiveInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{335} }

func (m *ResGameLiveInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResGameLiveInfo) GetLeftStartSeconds() uint32 {
	if m != nil {
		return m.LeftStartSeconds
	}
	return 0
}

func (m *ResGameLiveInfo) GetLiveHead() *GameLiveHead {
	if m != nil {
		return m.LiveHead
	}
	return nil
}

func (m *ResGameLiveInfo) GetSegments() []*GameLiveSegmentUri {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *ResGameLiveInfo) GetNowMillisecond() uint32 {
	if m != nil {
		return m.NowMillisecond
	}
	return 0
}

type ResGameLiveLeftSegment struct {
	Error                 *Error                `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	LiveState             uint32                `protobuf:"varint,2,opt,name=live_state,json=liveState" json:"live_state,omitempty"`
	Segments              []*GameLiveSegmentUri `protobuf:"bytes,4,rep,name=segments" json:"segments,omitempty"`
	NowMillisecond        uint32                `protobuf:"varint,5,opt,name=now_millisecond,json=nowMillisecond" json:"now_millisecond,omitempty"`
	SegmentEndMillisecond uint32                `protobuf:"varint,6,opt,name=segment_end_millisecond,json=segmentEndMillisecond" json:"segment_end_millisecond,omitempty"`
}

func (m *ResGameLiveLeftSegment) Reset()                    { *m = ResGameLiveLeftSegment{} }
func (m *ResGameLiveLeftSegment) String() string            { return proto.CompactTextString(m) }
func (*ResGameLiveLeftSegment) ProtoMessage()               {}
func (*ResGameLiveLeftSegment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{336} }

func (m *ResGameLiveLeftSegment) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResGameLiveLeftSegment) GetLiveState() uint32 {
	if m != nil {
		return m.LiveState
	}
	return 0
}

func (m *ResGameLiveLeftSegment) GetSegments() []*GameLiveSegmentUri {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *ResGameLiveLeftSegment) GetNowMillisecond() uint32 {
	if m != nil {
		return m.NowMillisecond
	}
	return 0
}

func (m *ResGameLiveLeftSegment) GetSegmentEndMillisecond() uint32 {
	if m != nil {
		return m.SegmentEndMillisecond
	}
	return 0
}

type ResGameLiveList struct {
	Error    *Error          `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	LiveList []*GameLiveHead `protobuf:"bytes,2,rep,name=live_list,json=liveList" json:"live_list,omitempty"`
}

func (m *ResGameLiveList) Reset()                    { *m = ResGameLiveList{} }
func (m *ResGameLiveList) String() string            { return proto.CompactTextString(m) }
func (*ResGameLiveList) ProtoMessage()               {}
func (*ResGameLiveList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{337} }

func (m *ResGameLiveList) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResGameLiveList) GetLiveList() []*GameLiveHead {
	if m != nil {
		return m.LiveList
	}
	return nil
}

type ResGamePlayerState struct {
	Error     *Error            `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	StateList []GamePlayerState `protobuf:"varint,2,rep,packed,name=state_list,json=stateList,enum=lq.GamePlayerState" json:"state_list,omitempty"`
}

func (m *ResGamePlayerState) Reset()                    { *m = ResGamePlayerState{} }
func (m *ResGamePlayerState) String() string            { return proto.CompactTextString(m) }
func (*ResGamePlayerState) ProtoMessage()               {}
func (*ResGamePlayerState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{338} }

func (m *ResGamePlayerState) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResGamePlayerState) GetStateList() []GamePlayerState {
	if m != nil {
		return m.StateList
	}
	return nil
}

type ResGameRecord struct {
	Error   *Error      `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Head    *RecordGame `protobuf:"bytes,3,opt,name=head" json:"head,omitempty"`
	Data    []byte      `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	DataUrl string      `protobuf:"bytes,5,opt,name=data_url,json=dataUrl" json:"data_url,omitempty"`
}

func (m *ResGameRecord) Reset()                    { *m = ResGameRecord{} }
func (m *ResGameRecord) String() string            { return proto.CompactTextString(m) }
func (*ResGameRecord) ProtoMessage()               {}
func (*ResGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{339} }

func (m *ResGameRecord) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResGameRecord) GetHead() *RecordGame {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *ResGameRecord) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResGameRecord) GetDataUrl() string {
	if m != nil {
		return m.DataUrl
	}
	return ""
}

type ResGameRecordList struct {
	Error      *Error        `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	TotalCount uint32        `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	RecordList []*RecordGame `protobuf:"bytes,3,rep,name=record_list,json=recordList" json:"record_list,omitempty"`
}

func (m *ResGameRecordList) Reset()                    { *m = ResGameRecordList{} }
func (m *ResGameRecordList) String() string            { return proto.CompactTextString(m) }
func (*ResGameRecordList) ProtoMessage()               {}
func (*ResGameRecordList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{340} }

func (m *ResGameRecordList) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResGameRecordList) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ResGameRecordList) GetRecordList() []*RecordGame {
	if m != nil {
		return m.RecordList
	}
	return nil
}

type ResGameRecordsDetail struct {
	Error      *Error        `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	RecordList []*RecordGame `protobuf:"bytes,2,rep,name=record_list,json=recordList" json:"record_list,omitempty"`
}

func (m *ResGameRecordsDetail) Reset()                    { *m = ResGameRecordsDetail{} }
func (m *ResGameRecordsDetail) String() string            { return proto.CompactTextString(m) }
func (*ResGameRecordsDetail) ProtoMessage()               {}
func (*ResGameRecordsDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{341} }

func (m *ResGameRecordsDetail) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResGameRecordsDetail) GetRecordList() []*RecordGame {
	if m != nil {
		return m.RecordList
	}
	return nil
}

type ResIDCardInfo struct {
	Error    *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	IsAuthed bool   `protobuf:"varint,2,opt,name=is_authed,json=isAuthed" json:"is_authed,omitempty"`
	Country  string `protobuf:"bytes,3,opt,name=country" json:"country,omitempty"`
}

func (m *ResIDCardInfo) Reset()                    { *m = ResIDCardInfo{} }
func (m *ResIDCardInfo) String() string            { return proto.CompactTextString(m) }
func (*ResIDCardInfo) ProtoMessage()               {}
func (*ResIDCardInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{342} }

func (m *ResIDCardInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResIDCardInfo) GetIsAuthed() bool {
	if m != nil {
		return m.IsAuthed
	}
	return false
}

func (m *ResIDCardInfo) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type ResJoinCustomizedContestChatRoom struct {
	Error       *Error   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	ChatHistory [][]byte `protobuf:"bytes,2,rep,name=chat_history,json=chatHistory,proto3" json:"chat_history,omitempty"`
}

func (m *ResJoinCustomizedContestChatRoom) Reset()         { *m = ResJoinCustomizedContestChatRoom{} }
func (m *ResJoinCustomizedContestChatRoom) String() string { return proto.CompactTextString(m) }
func (*ResJoinCustomizedContestChatRoom) ProtoMessage()    {}
func (*ResJoinCustomizedContestChatRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{343}
}

func (m *ResJoinCustomizedContestChatRoom) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResJoinCustomizedContestChatRoom) GetChatHistory() [][]byte {
	if m != nil {
		return m.ChatHistory
	}
	return nil
}

type ResJoinRoom struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Room  *Room  `protobuf:"bytes,2,opt,name=room" json:"room,omitempty"`
}

func (m *ResJoinRoom) Reset()                    { *m = ResJoinRoom{} }
func (m *ResJoinRoom) String() string            { return proto.CompactTextString(m) }
func (*ResJoinRoom) ProtoMessage()               {}
func (*ResJoinRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{344} }

func (m *ResJoinRoom) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResJoinRoom) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

type ResLevelLeaderboard struct {
	Error    *Error                      `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Items    []*ResLevelLeaderboard_Item `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	SelfRank uint32                      `protobuf:"varint,3,opt,name=self_rank,json=selfRank" json:"self_rank,omitempty"`
}

func (m *ResLevelLeaderboard) Reset()                    { *m = ResLevelLeaderboard{} }
func (m *ResLevelLeaderboard) String() string            { return proto.CompactTextString(m) }
func (*ResLevelLeaderboard) ProtoMessage()               {}
func (*ResLevelLeaderboard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{345} }

func (m *ResLevelLeaderboard) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResLevelLeaderboard) GetItems() []*ResLevelLeaderboard_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ResLevelLeaderboard) GetSelfRank() uint32 {
	if m != nil {
		return m.SelfRank
	}
	return 0
}

type ResLevelLeaderboard_Item struct {
	AccountId uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Level     *AccountLevel `protobuf:"bytes,2,opt,name=level" json:"level,omitempty"`
}

func (m *ResLevelLeaderboard_Item) Reset()                    { *m = ResLevelLeaderboard_Item{} }
func (m *ResLevelLeaderboard_Item) String() string            { return proto.CompactTextString(m) }
func (*ResLevelLeaderboard_Item) ProtoMessage()               {}
func (*ResLevelLeaderboard_Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{345, 0} }

func (m *ResLevelLeaderboard_Item) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ResLevelLeaderboard_Item) GetLevel() *AccountLevel {
	if m != nil {
		return m.Level
	}
	return nil
}

type ResLogin struct {
	Error                 *Error           `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	AccountId             uint32           `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Account               *Account         `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	GameInfo              *GameConnectInfo `protobuf:"bytes,4,opt,name=game_info,json=gameInfo" json:"game_info,omitempty"`
	HasUnreadAnnouncement bool             `protobuf:"varint,5,opt,name=has_unread_announcement,json=hasUnreadAnnouncement" json:"has_unread_announcement,omitempty"`
	AccessToken           string           `protobuf:"bytes,6,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ResLogin) Reset()                    { *m = ResLogin{} }
func (m *ResLogin) String() string            { return proto.CompactTextString(m) }
func (*ResLogin) ProtoMessage()               {}
func (*ResLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{346} }

func (m *ResLogin) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResLogin) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ResLogin) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *ResLogin) GetGameInfo() *GameConnectInfo {
	if m != nil {
		return m.GameInfo
	}
	return nil
}

func (m *ResLogin) GetHasUnreadAnnouncement() bool {
	if m != nil {
		return m.HasUnreadAnnouncement
	}
	return false
}

func (m *ResLogin) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ResLogout struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *ResLogout) Reset()                    { *m = ResLogout{} }
func (m *ResLogout) String() string            { return proto.CompactTextString(m) }
func (*ResLogout) ProtoMessage()               {}
func (*ResLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{347} }

func (m *ResLogout) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ResMailInfo struct {
	Error *Error  `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Mails []*Mail `protobuf:"bytes,2,rep,name=mails" json:"mails,omitempty"`
}

func (m *ResMailInfo) Reset()                    { *m = ResMailInfo{} }
func (m *ResMailInfo) String() string            { return proto.CompactTextString(m) }
func (*ResMailInfo) ProtoMessage()               {}
func (*ResMailInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{348} }

func (m *ResMailInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResMailInfo) GetMails() []*Mail {
	if m != nil {
		return m.Mails
	}
	return nil
}

type ResMisc struct {
	Error         *Error       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	RechargedList []uint32     `protobuf:"varint,2,rep,packed,name=recharged_list,json=rechargedList" json:"recharged_list,omitempty"`
	Faiths        []*FaithData `protobuf:"bytes,3,rep,name=faiths" json:"faiths,omitempty"`
}

func (m *ResMisc) Reset()                    { *m = ResMisc{} }
func (m *ResMisc) String() string            { return proto.CompactTextString(m) }
func (*ResMisc) ProtoMessage()               {}
func (*ResMisc) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{349} }

func (m *ResMisc) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResMisc) GetRechargedList() []uint32 {
	if m != nil {
		return m.RechargedList
	}
	return nil
}

func (m *ResMisc) GetFaiths() []*FaithData {
	if m != nil {
		return m.Faiths
	}
	return nil
}

type ResModNicknameTime struct {
	LastModTime uint32 `protobuf:"varint,1,opt,name=last_mod_time,json=lastModTime" json:"last_mod_time,omitempty"`
}

func (m *ResModNicknameTime) Reset()                    { *m = ResModNicknameTime{} }
func (m *ResModNicknameTime) String() string            { return proto.CompactTextString(m) }
func (*ResModNicknameTime) ProtoMessage()               {}
func (*ResModNicknameTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{350} }

func (m *ResModNicknameTime) GetLastModTime() uint32 {
	if m != nil {
		return m.LastModTime
	}
	return 0
}

type ResMultiAccountBrief struct {
	Error   *Error            `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Players []*PlayerBaseView `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
}

func (m *ResMultiAccountBrief) Reset()                    { *m = ResMultiAccountBrief{} }
func (m *ResMultiAccountBrief) String() string            { return proto.CompactTextString(m) }
func (*ResMultiAccountBrief) ProtoMessage()               {}
func (*ResMultiAccountBrief) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{351} }

func (m *ResMultiAccountBrief) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResMultiAccountBrief) GetPlayers() []*PlayerBaseView {
	if m != nil {
		return m.Players
	}
	return nil
}

type ResOauth2Auth struct {
	Error       *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (m *ResOauth2Auth) Reset()                    { *m = ResOauth2Auth{} }
func (m *ResOauth2Auth) String() string            { return proto.CompactTextString(m) }
func (*ResOauth2Auth) ProtoMessage()               {}
func (*ResOauth2Auth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{352} }

func (m *ResOauth2Auth) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResOauth2Auth) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ResOauth2Check struct {
	Error      *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	HasAccount bool   `protobuf:"varint,2,opt,name=has_account,json=hasAccount" json:"has_account,omitempty"`
}

func (m *ResOauth2Check) Reset()                    { *m = ResOauth2Check{} }
func (m *ResOauth2Check) String() string            { return proto.CompactTextString(m) }
func (*ResOauth2Check) ProtoMessage()               {}
func (*ResOauth2Check) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{353} }

func (m *ResOauth2Check) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResOauth2Check) GetHasAccount() bool {
	if m != nil {
		return m.HasAccount
	}
	return false
}

type ResOauth2Signup struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *ResOauth2Signup) Reset()                    { *m = ResOauth2Signup{} }
func (m *ResOauth2Signup) String() string            { return proto.CompactTextString(m) }
func (*ResOauth2Signup) ProtoMessage()               {}
func (*ResOauth2Signup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{354} }

func (m *ResOauth2Signup) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ResOpenChest struct {
	Error          *Error        `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Results        []*OpenResult `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
	TotalOpenCount uint32        `protobuf:"varint,3,opt,name=total_open_count,json=totalOpenCount" json:"total_open_count,omitempty"`
}

func (m *ResOpenChest) Reset()                    { *m = ResOpenChest{} }
func (m *ResOpenChest) String() string            { return proto.CompactTextString(m) }
func (*ResOpenChest) ProtoMessage()               {}
func (*ResOpenChest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{355} }

func (m *ResOpenChest) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResOpenChest) GetResults() []*OpenResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ResOpenChest) GetTotalOpenCount() uint32 {
	if m != nil {
		return m.TotalOpenCount
	}
	return 0
}

type ResOpenRandomRewardItem struct {
	Error   *Error        `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Results []*OpenResult `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (m *ResOpenRandomRewardItem) Reset()                    { *m = ResOpenRandomRewardItem{} }
func (m *ResOpenRandomRewardItem) String() string            { return proto.CompactTextString(m) }
func (*ResOpenRandomRewardItem) ProtoMessage()               {}
func (*ResOpenRandomRewardItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{356} }

func (m *ResOpenRandomRewardItem) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResOpenRandomRewardItem) GetResults() []*OpenResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type ResPlatformBillingProducts struct {
	Error    *Error            `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Products []*BillingProduct `protobuf:"bytes,2,rep,name=products" json:"products,omitempty"`
}

func (m *ResPlatformBillingProducts) Reset()                    { *m = ResPlatformBillingProducts{} }
func (m *ResPlatformBillingProducts) String() string            { return proto.CompactTextString(m) }
func (*ResPlatformBillingProducts) ProtoMessage()               {}
func (*ResPlatformBillingProducts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{357} }

func (m *ResPlatformBillingProducts) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResPlatformBillingProducts) GetProducts() []*BillingProduct {
	if m != nil {
		return m.Products
	}
	return nil
}

type ResRefreshDailyTask struct {
	Error    *Error        `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Progress *TaskProgress `protobuf:"bytes,2,opt,name=progress" json:"progress,omitempty"`
}

func (m *ResRefreshDailyTask) Reset()                    { *m = ResRefreshDailyTask{} }
func (m *ResRefreshDailyTask) String() string            { return proto.CompactTextString(m) }
func (*ResRefreshDailyTask) ProtoMessage()               {}
func (*ResRefreshDailyTask) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{358} }

func (m *ResRefreshDailyTask) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResRefreshDailyTask) GetProgress() *TaskProgress {
	if m != nil {
		return m.Progress
	}
	return nil
}

type ResRefreshZHPShop struct {
	Error *Error   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Zhp   *ZHPShop `protobuf:"bytes,2,opt,name=zhp" json:"zhp,omitempty"`
}

func (m *ResRefreshZHPShop) Reset()                    { *m = ResRefreshZHPShop{} }
func (m *ResRefreshZHPShop) String() string            { return proto.CompactTextString(m) }
func (*ResRefreshZHPShop) ProtoMessage()               {}
func (*ResRefreshZHPShop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{359} }

func (m *ResRefreshZHPShop) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResRefreshZHPShop) GetZhp() *ZHPShop {
	if m != nil {
		return m.Zhp
	}
	return nil
}

type ResRemoveCollectedGameRecord struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *ResRemoveCollectedGameRecord) Reset()                    { *m = ResRemoveCollectedGameRecord{} }
func (m *ResRemoveCollectedGameRecord) String() string            { return proto.CompactTextString(m) }
func (*ResRemoveCollectedGameRecord) ProtoMessage()               {}
func (*ResRemoveCollectedGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{360} }

func (m *ResRemoveCollectedGameRecord) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ResReviveCoinInfo struct {
	Error     *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	HasGained bool   `protobuf:"varint,2,opt,name=has_gained,json=hasGained" json:"has_gained,omitempty"`
}

func (m *ResReviveCoinInfo) Reset()                    { *m = ResReviveCoinInfo{} }
func (m *ResReviveCoinInfo) String() string            { return proto.CompactTextString(m) }
func (*ResReviveCoinInfo) ProtoMessage()               {}
func (*ResReviveCoinInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{361} }

func (m *ResReviveCoinInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResReviveCoinInfo) GetHasGained() bool {
	if m != nil {
		return m.HasGained
	}
	return false
}

type ResSearchAccountById struct {
	Error  *Error          `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Player *PlayerBaseView `protobuf:"bytes,2,opt,name=player" json:"player,omitempty"`
}

func (m *ResSearchAccountById) Reset()                    { *m = ResSearchAccountById{} }
func (m *ResSearchAccountById) String() string            { return proto.CompactTextString(m) }
func (*ResSearchAccountById) ProtoMessage()               {}
func (*ResSearchAccountById) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{362} }

func (m *ResSearchAccountById) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResSearchAccountById) GetPlayer() *PlayerBaseView {
	if m != nil {
		return m.Player
	}
	return nil
}

type ResSearchAccountByPattern struct {
	Error         *Error   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	IsFinished    bool     `protobuf:"varint,2,opt,name=is_finished,json=isFinished" json:"is_finished,omitempty"`
	MatchAccounts []uint32 `protobuf:"varint,3,rep,packed,name=match_accounts,json=matchAccounts" json:"match_accounts,omitempty"`
	DecodeId      uint32   `protobuf:"varint,4,opt,name=decode_id,json=decodeId" json:"decode_id,omitempty"`
}

func (m *ResSearchAccountByPattern) Reset()                    { *m = ResSearchAccountByPattern{} }
func (m *ResSearchAccountByPattern) String() string            { return proto.CompactTextString(m) }
func (*ResSearchAccountByPattern) ProtoMessage()               {}
func (*ResSearchAccountByPattern) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{363} }

func (m *ResSearchAccountByPattern) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResSearchAccountByPattern) GetIsFinished() bool {
	if m != nil {
		return m.IsFinished
	}
	return false
}

func (m *ResSearchAccountByPattern) GetMatchAccounts() []uint32 {
	if m != nil {
		return m.MatchAccounts
	}
	return nil
}

func (m *ResSearchAccountByPattern) GetDecodeId() uint32 {
	if m != nil {
		return m.DecodeId
	}
	return 0
}

type ResSelfRoom struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Room  *Room  `protobuf:"bytes,2,opt,name=room" json:"room,omitempty"`
}

func (m *ResSelfRoom) Reset()                    { *m = ResSelfRoom{} }
func (m *ResSelfRoom) String() string            { return proto.CompactTextString(m) }
func (*ResSelfRoom) ProtoMessage()               {}
func (*ResSelfRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{364} }

func (m *ResSelfRoom) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResSelfRoom) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

type ResSendGiftToCharacter struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Level uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Exp   uint32 `protobuf:"varint,3,opt,name=exp" json:"exp,omitempty"`
}

func (m *ResSendGiftToCharacter) Reset()                    { *m = ResSendGiftToCharacter{} }
func (m *ResSendGiftToCharacter) String() string            { return proto.CompactTextString(m) }
func (*ResSendGiftToCharacter) ProtoMessage()               {}
func (*ResSendGiftToCharacter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{365} }

func (m *ResSendGiftToCharacter) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResSendGiftToCharacter) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *ResSendGiftToCharacter) GetExp() uint32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

type ResServerSettings struct {
	Settings *ServerSettings `protobuf:"bytes,1,opt,name=settings" json:"settings,omitempty"`
}

func (m *ResServerSettings) Reset()                    { *m = ResServerSettings{} }
func (m *ResServerSettings) String() string            { return proto.CompactTextString(m) }
func (*ResServerSettings) ProtoMessage()               {}
func (*ResServerSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{366} }

func (m *ResServerSettings) GetSettings() *ServerSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type ResServerTime struct {
	ServerTime uint32 `protobuf:"varint,1,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
}

func (m *ResServerTime) Reset()                    { *m = ResServerTime{} }
func (m *ResServerTime) String() string            { return proto.CompactTextString(m) }
func (*ResServerTime) ProtoMessage()               {}
func (*ResServerTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{367} }

func (m *ResServerTime) GetServerTime() uint32 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

type ResShopInfo struct {
	Error    *Error    `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	ShopInfo *ShopInfo `protobuf:"bytes,2,opt,name=shop_info,json=shopInfo" json:"shop_info,omitempty"`
}

func (m *ResShopInfo) Reset()                    { *m = ResShopInfo{} }
func (m *ResShopInfo) String() string            { return proto.CompactTextString(m) }
func (*ResShopInfo) ProtoMessage()               {}
func (*ResShopInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{368} }

func (m *ResShopInfo) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResShopInfo) GetShopInfo() *ShopInfo {
	if m != nil {
		return m.ShopInfo
	}
	return nil
}

type ResShopPurchase struct {
	Error  *Error         `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Update *AccountUpdate `protobuf:"bytes,2,opt,name=update" json:"update,omitempty"`
}

func (m *ResShopPurchase) Reset()                    { *m = ResShopPurchase{} }
func (m *ResShopPurchase) String() string            { return proto.CompactTextString(m) }
func (*ResShopPurchase) ProtoMessage()               {}
func (*ResShopPurchase) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{369} }

func (m *ResShopPurchase) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResShopPurchase) GetUpdate() *AccountUpdate {
	if m != nil {
		return m.Update
	}
	return nil
}

type ResSignupAccount struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *ResSignupAccount) Reset()                    { *m = ResSignupAccount{} }
func (m *ResSignupAccount) String() string            { return proto.CompactTextString(m) }
func (*ResSignupAccount) ProtoMessage()               {}
func (*ResSignupAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{370} }

func (m *ResSignupAccount) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ResSyncGame struct {
	Error       *Error       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	IsEnd       bool         `protobuf:"varint,2,opt,name=is_end,json=isEnd" json:"is_end,omitempty"`
	Step        uint32       `protobuf:"varint,3,opt,name=step" json:"step,omitempty"`
	GameRestore *GameRestore `protobuf:"bytes,4,opt,name=game_restore,json=gameRestore" json:"game_restore,omitempty"`
}

func (m *ResSyncGame) Reset()                    { *m = ResSyncGame{} }
func (m *ResSyncGame) String() string            { return proto.CompactTextString(m) }
func (*ResSyncGame) ProtoMessage()               {}
func (*ResSyncGame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{371} }

func (m *ResSyncGame) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResSyncGame) GetIsEnd() bool {
	if m != nil {
		return m.IsEnd
	}
	return false
}

func (m *ResSyncGame) GetStep() uint32 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *ResSyncGame) GetGameRestore() *GameRestore {
	if m != nil {
		return m.GameRestore
	}
	return nil
}

type ResTitleList struct {
	Error     *Error   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	TitleList []uint32 `protobuf:"varint,2,rep,packed,name=title_list,json=titleList" json:"title_list,omitempty"`
}

func (m *ResTitleList) Reset()                    { *m = ResTitleList{} }
func (m *ResTitleList) String() string            { return proto.CompactTextString(m) }
func (*ResTitleList) ProtoMessage()               {}
func (*ResTitleList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{372} }

func (m *ResTitleList) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResTitleList) GetTitleList() []uint32 {
	if m != nil {
		return m.TitleList
	}
	return nil
}

type ResUpgradeCharacter struct {
	Error     *Error     `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Character *Character `protobuf:"bytes,2,opt,name=character" json:"character,omitempty"`
}

func (m *ResUpgradeCharacter) Reset()                    { *m = ResUpgradeCharacter{} }
func (m *ResUpgradeCharacter) String() string            { return proto.CompactTextString(m) }
func (*ResUpgradeCharacter) ProtoMessage()               {}
func (*ResUpgradeCharacter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{373} }

func (m *ResUpgradeCharacter) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResUpgradeCharacter) GetCharacter() *Character {
	if m != nil {
		return m.Character
	}
	return nil
}

type ResUseGiftCode struct {
	Error   *Error        `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Rewards []*RewardSlot `protobuf:"bytes,6,rep,name=rewards" json:"rewards,omitempty"`
}

func (m *ResUseGiftCode) Reset()                    { *m = ResUseGiftCode{} }
func (m *ResUseGiftCode) String() string            { return proto.CompactTextString(m) }
func (*ResUseGiftCode) ProtoMessage()               {}
func (*ResUseGiftCode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{374} }

func (m *ResUseGiftCode) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResUseGiftCode) GetRewards() []*RewardSlot {
	if m != nil {
		return m.Rewards
	}
	return nil
}

type ResVerfiyCodeForSecure struct {
	Error       *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	SecureToken string `protobuf:"bytes,2,opt,name=secure_token,json=secureToken" json:"secure_token,omitempty"`
}

func (m *ResVerfiyCodeForSecure) Reset()                    { *m = ResVerfiyCodeForSecure{} }
func (m *ResVerfiyCodeForSecure) String() string            { return proto.CompactTextString(m) }
func (*ResVerfiyCodeForSecure) ProtoMessage()               {}
func (*ResVerfiyCodeForSecure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{375} }

func (m *ResVerfiyCodeForSecure) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResVerfiyCodeForSecure) GetSecureToken() string {
	if m != nil {
		return m.SecureToken
	}
	return ""
}

type ResVipReward struct {
	Error           *Error   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	GainedVipLevels []uint32 `protobuf:"varint,2,rep,packed,name=gained_vip_levels,json=gainedVipLevels" json:"gained_vip_levels,omitempty"`
}

func (m *ResVipReward) Reset()                    { *m = ResVipReward{} }
func (m *ResVipReward) String() string            { return proto.CompactTextString(m) }
func (*ResVipReward) ProtoMessage()               {}
func (*ResVipReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{376} }

func (m *ResVipReward) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ResVipReward) GetGainedVipLevels() []uint32 {
	if m != nil {
		return m.GainedVipLevels
	}
	return nil
}

type RewardPlusResult struct {
	Id       uint32                     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count    uint32                     `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Exchange *RewardPlusResult_Exchange `protobuf:"bytes,3,opt,name=exchange" json:"exchange,omitempty"`
}

func (m *RewardPlusResult) Reset()                    { *m = RewardPlusResult{} }
func (m *RewardPlusResult) String() string            { return proto.CompactTextString(m) }
func (*RewardPlusResult) ProtoMessage()               {}
func (*RewardPlusResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{377} }

func (m *RewardPlusResult) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RewardPlusResult) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *RewardPlusResult) GetExchange() *RewardPlusResult_Exchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

type RewardPlusResult_Exchange struct {
	Id       uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count    uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Exchange uint32 `protobuf:"varint,3,opt,name=exchange" json:"exchange,omitempty"`
}

func (m *RewardPlusResult_Exchange) Reset()                    { *m = RewardPlusResult_Exchange{} }
func (m *RewardPlusResult_Exchange) String() string            { return proto.CompactTextString(m) }
func (*RewardPlusResult_Exchange) ProtoMessage()               {}
func (*RewardPlusResult_Exchange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{377, 0} }

func (m *RewardPlusResult_Exchange) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RewardPlusResult_Exchange) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *RewardPlusResult_Exchange) GetExchange() uint32 {
	if m != nil {
		return m.Exchange
	}
	return 0
}

type RewardSlot struct {
	Id    uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *RewardSlot) Reset()                    { *m = RewardSlot{} }
func (m *RewardSlot) String() string            { return proto.CompactTextString(m) }
func (*RewardSlot) ProtoMessage()               {}
func (*RewardSlot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{378} }

func (m *RewardSlot) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RewardSlot) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type RollingNotice struct {
	Id             uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Content        string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	StartTime      uint32 `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime        uint32 `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	RepeatInterval uint32 `protobuf:"varint,5,opt,name=repeat_interval,json=repeatInterval" json:"repeat_interval,omitempty"`
}

func (m *RollingNotice) Reset()                    { *m = RollingNotice{} }
func (m *RollingNotice) String() string            { return proto.CompactTextString(m) }
func (*RollingNotice) ProtoMessage()               {}
func (*RollingNotice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{379} }

func (m *RollingNotice) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RollingNotice) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *RollingNotice) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *RollingNotice) GetEndTime() uint32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *RollingNotice) GetRepeatInterval() uint32 {
	if m != nil {
		return m.RepeatInterval
	}
	return 0
}

type Room struct {
	RoomId         uint32            `protobuf:"varint,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	OwnerId        uint32            `protobuf:"varint,2,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	Mode           *GameMode         `protobuf:"bytes,3,opt,name=mode" json:"mode,omitempty"`
	MaxPlayerCount uint32            `protobuf:"varint,4,opt,name=max_player_count,json=maxPlayerCount" json:"max_player_count,omitempty"`
	Persons        []*PlayerGameView `protobuf:"bytes,5,rep,name=persons" json:"persons,omitempty"`
	ReadyList      []uint32          `protobuf:"varint,6,rep,packed,name=ready_list,json=readyList" json:"ready_list,omitempty"`
	IsPlaying      bool              `protobuf:"varint,7,opt,name=is_playing,json=isPlaying" json:"is_playing,omitempty"`
	PublicLive     bool              `protobuf:"varint,8,opt,name=public_live,json=publicLive" json:"public_live,omitempty"`
	RobotCount     uint32            `protobuf:"varint,9,opt,name=robot_count,json=robotCount" json:"robot_count,omitempty"`
	TournamentId   uint32            `protobuf:"varint,10,opt,name=tournament_id,json=tournamentId" json:"tournament_id,omitempty"`
}

func (m *Room) Reset()                    { *m = Room{} }
func (m *Room) String() string            { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()               {}
func (*Room) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{380} }

func (m *Room) GetRoomId() uint32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *Room) GetOwnerId() uint32 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *Room) GetMode() *GameMode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *Room) GetMaxPlayerCount() uint32 {
	if m != nil {
		return m.MaxPlayerCount
	}
	return 0
}

func (m *Room) GetPersons() []*PlayerGameView {
	if m != nil {
		return m.Persons
	}
	return nil
}

func (m *Room) GetReadyList() []uint32 {
	if m != nil {
		return m.ReadyList
	}
	return nil
}

func (m *Room) GetIsPlaying() bool {
	if m != nil {
		return m.IsPlaying
	}
	return false
}

func (m *Room) GetPublicLive() bool {
	if m != nil {
		return m.PublicLive
	}
	return false
}

func (m *Room) GetRobotCount() uint32 {
	if m != nil {
		return m.RobotCount
	}
	return 0
}

func (m *Room) GetTournamentId() uint32 {
	if m != nil {
		return m.TournamentId
	}
	return 0
}

type ServerSettings struct {
	PaymentSetting *PaymentSetting `protobuf:"bytes,3,opt,name=payment_setting,json=paymentSetting" json:"payment_setting,omitempty"`
}

func (m *ServerSettings) Reset()                    { *m = ServerSettings{} }
func (m *ServerSettings) String() string            { return proto.CompactTextString(m) }
func (*ServerSettings) ProtoMessage()               {}
func (*ServerSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{381} }

func (m *ServerSettings) GetPaymentSetting() *PaymentSetting {
	if m != nil {
		return m.PaymentSetting
	}
	return nil
}

type ShopInfo struct {
	Zhp             *ZHPShop     `protobuf:"bytes,1,opt,name=zhp" json:"zhp,omitempty"`
	BuyRecords      []*BuyRecord `protobuf:"bytes,2,rep,name=buy_records,json=buyRecords" json:"buy_records,omitempty"`
	LastRefreshTime uint32       `protobuf:"varint,3,opt,name=last_refresh_time,json=lastRefreshTime" json:"last_refresh_time,omitempty"`
}

func (m *ShopInfo) Reset()                    { *m = ShopInfo{} }
func (m *ShopInfo) String() string            { return proto.CompactTextString(m) }
func (*ShopInfo) ProtoMessage()               {}
func (*ShopInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{382} }

func (m *ShopInfo) GetZhp() *ZHPShop {
	if m != nil {
		return m.Zhp
	}
	return nil
}

func (m *ShopInfo) GetBuyRecords() []*BuyRecord {
	if m != nil {
		return m.BuyRecords
	}
	return nil
}

func (m *ShopInfo) GetLastRefreshTime() uint32 {
	if m != nil {
		return m.LastRefreshTime
	}
	return 0
}

type TaskProgress struct {
	Id       uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Counter  uint32 `protobuf:"varint,2,opt,name=counter" json:"counter,omitempty"`
	Achieved bool   `protobuf:"varint,3,opt,name=achieved" json:"achieved,omitempty"`
	Rewarded bool   `protobuf:"varint,4,opt,name=rewarded" json:"rewarded,omitempty"`
}

func (m *TaskProgress) Reset()                    { *m = TaskProgress{} }
func (m *TaskProgress) String() string            { return proto.CompactTextString(m) }
func (*TaskProgress) ProtoMessage()               {}
func (*TaskProgress) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{383} }

func (m *TaskProgress) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TaskProgress) GetCounter() uint32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *TaskProgress) GetAchieved() bool {
	if m != nil {
		return m.Achieved
	}
	return false
}

func (m *TaskProgress) GetRewarded() bool {
	if m != nil {
		return m.Rewarded
	}
	return false
}

type TingPaiDiscardInfo struct {
	Tile     string         `protobuf:"bytes,1,opt,name=tile" json:"tile,omitempty"`
	Zhenting bool           `protobuf:"varint,2,opt,name=zhenting" json:"zhenting,omitempty"`
	Infos    []*TingPaiInfo `protobuf:"bytes,3,rep,name=infos" json:"infos,omitempty"`
}

func (m *TingPaiDiscardInfo) Reset()                    { *m = TingPaiDiscardInfo{} }
func (m *TingPaiDiscardInfo) String() string            { return proto.CompactTextString(m) }
func (*TingPaiDiscardInfo) ProtoMessage()               {}
func (*TingPaiDiscardInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{384} }

func (m *TingPaiDiscardInfo) GetTile() string {
	if m != nil {
		return m.Tile
	}
	return ""
}

func (m *TingPaiDiscardInfo) GetZhenting() bool {
	if m != nil {
		return m.Zhenting
	}
	return false
}

func (m *TingPaiDiscardInfo) GetInfos() []*TingPaiInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type TingPaiInfo struct {
	Tile          string `protobuf:"bytes,1,opt,name=tile" json:"tile,omitempty"`
	Haveyi        bool   `protobuf:"varint,2,opt,name=haveyi" json:"haveyi,omitempty"`
	Yiman         bool   `protobuf:"varint,3,opt,name=yiman" json:"yiman,omitempty"`
	Count         uint32 `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Fu            uint32 `protobuf:"varint,5,opt,name=fu" json:"fu,omitempty"`
	BiaoDoraCount uint32 `protobuf:"varint,6,opt,name=biao_dora_count,json=biaoDoraCount" json:"biao_dora_count,omitempty"`
}

func (m *TingPaiInfo) Reset()                    { *m = TingPaiInfo{} }
func (m *TingPaiInfo) String() string            { return proto.CompactTextString(m) }
func (*TingPaiInfo) ProtoMessage()               {}
func (*TingPaiInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{385} }

func (m *TingPaiInfo) GetTile() string {
	if m != nil {
		return m.Tile
	}
	return ""
}

func (m *TingPaiInfo) GetHaveyi() bool {
	if m != nil {
		return m.Haveyi
	}
	return false
}

func (m *TingPaiInfo) GetYiman() bool {
	if m != nil {
		return m.Yiman
	}
	return false
}

func (m *TingPaiInfo) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TingPaiInfo) GetFu() uint32 {
	if m != nil {
		return m.Fu
	}
	return 0
}

func (m *TingPaiInfo) GetBiaoDoraCount() uint32 {
	if m != nil {
		return m.BiaoDoraCount
	}
	return 0
}

type Wrapper struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Wrapper) Reset()                    { *m = Wrapper{} }
func (m *Wrapper) String() string            { return proto.CompactTextString(m) }
func (*Wrapper) ProtoMessage()               {}
func (*Wrapper) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{386} }

func (m *Wrapper) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Wrapper) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ZHPShop struct {
	Goods       []uint32              `protobuf:"varint,1,rep,packed,name=goods" json:"goods,omitempty"`
	BuyRecords  []*BuyRecord          `protobuf:"bytes,2,rep,name=buy_records,json=buyRecords" json:"buy_records,omitempty"`
	FreeRefresh *ZHPShop_RefreshCount `protobuf:"bytes,3,opt,name=free_refresh,json=freeRefresh" json:"free_refresh,omitempty"`
	CostRefresh *ZHPShop_RefreshCount `protobuf:"bytes,4,opt,name=cost_refresh,json=costRefresh" json:"cost_refresh,omitempty"`
}

func (m *ZHPShop) Reset()                    { *m = ZHPShop{} }
func (m *ZHPShop) String() string            { return proto.CompactTextString(m) }
func (*ZHPShop) ProtoMessage()               {}
func (*ZHPShop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{387} }

func (m *ZHPShop) GetGoods() []uint32 {
	if m != nil {
		return m.Goods
	}
	return nil
}

func (m *ZHPShop) GetBuyRecords() []*BuyRecord {
	if m != nil {
		return m.BuyRecords
	}
	return nil
}

func (m *ZHPShop) GetFreeRefresh() *ZHPShop_RefreshCount {
	if m != nil {
		return m.FreeRefresh
	}
	return nil
}

func (m *ZHPShop) GetCostRefresh() *ZHPShop_RefreshCount {
	if m != nil {
		return m.CostRefresh
	}
	return nil
}

type ZHPShop_RefreshCount struct {
	Count uint32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *ZHPShop_RefreshCount) Reset()                    { *m = ZHPShop_RefreshCount{} }
func (m *ZHPShop_RefreshCount) String() string            { return proto.CompactTextString(m) }
func (*ZHPShop_RefreshCount) ProtoMessage()               {}
func (*ZHPShop_RefreshCount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{387, 0} }

func (m *ZHPShop_RefreshCount) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ZHPShop_RefreshCount) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func init() {
	proto.RegisterType((*Account)(nil), "lq.Account")
	proto.RegisterType((*Account_PlatformDiamond)(nil), "lq.Account.PlatformDiamond")
	proto.RegisterType((*AccountActiveState)(nil), "lq.AccountActiveState")
	proto.RegisterType((*AccountCacheView)(nil), "lq.AccountCacheView")
	proto.RegisterType((*AccountDetailStatistic)(nil), "lq.AccountDetailStatistic")
	proto.RegisterType((*AccountDetailStatisticByCategory)(nil), "lq.AccountDetailStatisticByCategory")
	proto.RegisterType((*AccountDetailStatisticV2)(nil), "lq.AccountDetailStatisticV2")
	proto.RegisterType((*AccountDetailStatisticV2_CustomizedContestStatistic)(nil), "lq.AccountDetailStatisticV2.CustomizedContestStatistic")
	proto.RegisterType((*AccountDetailStatisticV2_RankStatistic)(nil), "lq.AccountDetailStatisticV2.RankStatistic")
	proto.RegisterType((*AccountDetailStatisticV2_RankStatistic_RankData)(nil), "lq.AccountDetailStatisticV2.RankStatistic.RankData")
	proto.RegisterType((*AccountDetailStatisticV2_RankStatistic_RankData_RankLevelData)(nil), "lq.AccountDetailStatisticV2.RankStatistic.RankData.RankLevelData")
	proto.RegisterType((*AccountFanAchieved)(nil), "lq.AccountFanAchieved")
	proto.RegisterType((*AccountLevel)(nil), "lq.AccountLevel")
	proto.RegisterType((*AccountMahjongStatistic)(nil), "lq.AccountMahjongStatistic")
	proto.RegisterType((*AccountMahjongStatistic_GameResult)(nil), "lq.AccountMahjongStatistic.GameResult")
	proto.RegisterType((*AccountMahjongStatistic_HighestHuRecord)(nil), "lq.AccountMahjongStatistic.HighestHuRecord")
	proto.RegisterType((*AccountMahjongStatistic_HuSummary)(nil), "lq.AccountMahjongStatistic.HuSummary")
	proto.RegisterType((*AccountMahjongStatistic_LiQi10Summary)(nil), "lq.AccountMahjongStatistic.LiQi10Summary")
	proto.RegisterType((*AccountMahjongStatistic_Liqi20Summary)(nil), "lq.AccountMahjongStatistic.Liqi20Summary")
	proto.RegisterType((*AccountMahjongStatistic_RoundSummary)(nil), "lq.AccountMahjongStatistic.RoundSummary")
	proto.RegisterType((*AccountOwnerData)(nil), "lq.AccountOwnerData")
	proto.RegisterType((*AccountPlayingGame)(nil), "lq.AccountPlayingGame")
	proto.RegisterType((*AccountSetting)(nil), "lq.AccountSetting")
	proto.RegisterType((*AccountShiLian)(nil), "lq.AccountShiLian")
	proto.RegisterType((*AccountStatisticByFan)(nil), "lq.AccountStatisticByFan")
	proto.RegisterType((*AccountStatisticByGameMode)(nil), "lq.AccountStatisticByGameMode")
	proto.RegisterType((*AccountStatisticByGameMode_RankScore)(nil), "lq.AccountStatisticByGameMode.RankScore")
	proto.RegisterType((*AccountStatisticByGameMode_RoundEndData)(nil), "lq.AccountStatisticByGameMode.RoundEndData")
	proto.RegisterType((*AccountStatisticData)(nil), "lq.AccountStatisticData")
	proto.RegisterType((*AccountUpdate)(nil), "lq.AccountUpdate")
	proto.RegisterType((*AccountUpdate_AchievementUpdate)(nil), "lq.AccountUpdate.AchievementUpdate")
	proto.RegisterType((*AccountUpdate_ActivityTaskUpdate)(nil), "lq.AccountUpdate.ActivityTaskUpdate")
	proto.RegisterType((*AccountUpdate_CharacterUpdate)(nil), "lq.AccountUpdate.CharacterUpdate")
	proto.RegisterType((*AccountUpdate_DailyTaskUpdate)(nil), "lq.AccountUpdate.DailyTaskUpdate")
	proto.RegisterType((*AccountUpdate_NumericalUpdate)(nil), "lq.AccountUpdate.NumericalUpdate")
	proto.RegisterType((*AccountUpdate_TitleUpdate)(nil), "lq.AccountUpdate.TitleUpdate")
	proto.RegisterType((*AchievementProgress)(nil), "lq.AchievementProgress")
	proto.RegisterType((*ActionAnGangAddGang)(nil), "lq.ActionAnGangAddGang")
	proto.RegisterType((*ActionBaBei)(nil), "lq.ActionBaBei")
	proto.RegisterType((*ActionChiPengGang)(nil), "lq.ActionChiPengGang")
	proto.RegisterType((*ActionDealTile)(nil), "lq.ActionDealTile")
	proto.RegisterType((*ActionDiscardTile)(nil), "lq.ActionDiscardTile")
	proto.RegisterType((*ActionHule)(nil), "lq.ActionHule")
	proto.RegisterType((*ActionLiuJu)(nil), "lq.ActionLiuJu")
	proto.RegisterType((*ActionMJStart)(nil), "lq.ActionMJStart")
	proto.RegisterType((*ActionNewRound)(nil), "lq.ActionNewRound")
	proto.RegisterType((*ActionNoTile)(nil), "lq.ActionNoTile")
	proto.RegisterType((*ActionPrototype)(nil), "lq.ActionPrototype")
	proto.RegisterType((*Activity)(nil), "lq.Activity")
	proto.RegisterType((*ActivityAccumulatedPointData)(nil), "lq.ActivityAccumulatedPointData")
	proto.RegisterType((*ActivityRankPointData)(nil), "lq.ActivityRankPointData")
	proto.RegisterType((*Announcement)(nil), "lq.Announcement")
	proto.RegisterType((*AntiAddiction)(nil), "lq.AntiAddiction")
	proto.RegisterType((*Bag)(nil), "lq.Bag")
	proto.RegisterType((*BagUpdate)(nil), "lq.BagUpdate")
	proto.RegisterType((*BillingGoods)(nil), "lq.BillingGoods")
	proto.RegisterType((*BillingProduct)(nil), "lq.BillingProduct")
	proto.RegisterType((*BuyRecord)(nil), "lq.BuyRecord")
	proto.RegisterType((*ChangeNicknameRecord)(nil), "lq.ChangeNicknameRecord")
	proto.RegisterType((*Character)(nil), "lq.Character")
	proto.RegisterType((*Character_ViewSlotSet)(nil), "lq.Character.ViewSlotSet")
	proto.RegisterType((*ChestData)(nil), "lq.ChestData")
	proto.RegisterType((*ChestDataV2)(nil), "lq.ChestDataV2")
	proto.RegisterType((*ClientDeviceInfo)(nil), "lq.ClientDeviceInfo")
	proto.RegisterType((*CommentItem)(nil), "lq.CommentItem")
	proto.RegisterType((*CustomizedContestAbstract)(nil), "lq.CustomizedContestAbstract")
	proto.RegisterType((*CustomizedContestBase)(nil), "lq.CustomizedContestBase")
	proto.RegisterType((*CustomizedContestDetail)(nil), "lq.CustomizedContestDetail")
	proto.RegisterType((*CustomizedContestExtend)(nil), "lq.CustomizedContestExtend")
	proto.RegisterType((*CustomizedContestGameEnd)(nil), "lq.CustomizedContestGameEnd")
	proto.RegisterType((*CustomizedContestGameEnd_Item)(nil), "lq.CustomizedContestGameEnd.Item")
	proto.RegisterType((*CustomizedContestGameStart)(nil), "lq.CustomizedContestGameStart")
	proto.RegisterType((*CustomizedContestGameStart_Item)(nil), "lq.CustomizedContestGameStart.Item")
	proto.RegisterType((*CustomizedContestPlayerReport)(nil), "lq.CustomizedContestPlayerReport")
	proto.RegisterType((*Error)(nil), "lq.Error")
	proto.RegisterType((*ExchangeRecord)(nil), "lq.ExchangeRecord")
	proto.RegisterType((*ExecuteReward)(nil), "lq.ExecuteReward")
	proto.RegisterType((*FaithData)(nil), "lq.FaithData")
	proto.RegisterType((*FanInfo)(nil), "lq.FanInfo")
	proto.RegisterType((*Friend)(nil), "lq.Friend")
	proto.RegisterType((*GameConfig)(nil), "lq.GameConfig")
	proto.RegisterType((*GameConnectInfo)(nil), "lq.GameConnectInfo")
	proto.RegisterType((*GameDetailRecords)(nil), "lq.GameDetailRecords")
	proto.RegisterType((*GameDetailRule)(nil), "lq.GameDetailRule")
	proto.RegisterType((*GameEnd)(nil), "lq.GameEnd")
	proto.RegisterType((*GameEndAction)(nil), "lq.GameEndAction")
	proto.RegisterType((*GameEndResult)(nil), "lq.GameEndResult")
	proto.RegisterType((*GameEndResult_PlayerItem)(nil), "lq.GameEndResult.PlayerItem")
	proto.RegisterType((*GameFinalSnapshot)(nil), "lq.GameFinalSnapshot")
	proto.RegisterType((*GameFinalSnapshot_CalculateParam)(nil), "lq.GameFinalSnapshot.CalculateParam")
	proto.RegisterType((*GameFinalSnapshot_FinalPlayer)(nil), "lq.GameFinalSnapshot.FinalPlayer")
	proto.RegisterType((*GameFinalSnapshot_GameSeat)(nil), "lq.GameFinalSnapshot.GameSeat")
	proto.RegisterType((*GameLiveHead)(nil), "lq.GameLiveHead")
	proto.RegisterType((*GameLiveSegment)(nil), "lq.GameLiveSegment")
	proto.RegisterType((*GameLiveSegmentUri)(nil), "lq.GameLiveSegmentUri")
	proto.RegisterType((*GameLiveUnit)(nil), "lq.GameLiveUnit")
	proto.RegisterType((*GameMetaData)(nil), "lq.GameMetaData")
	proto.RegisterType((*GameMode)(nil), "lq.GameMode")
	proto.RegisterType((*GameNewRoundState)(nil), "lq.GameNewRoundState")
	proto.RegisterType((*GameNoopAction)(nil), "lq.GameNoopAction")
	proto.RegisterType((*GameRestore)(nil), "lq.GameRestore")
	proto.RegisterType((*GameRoundHuData)(nil), "lq.GameRoundHuData")
	proto.RegisterType((*GameRoundHuData_Fan)(nil), "lq.GameRoundHuData.Fan")
	proto.RegisterType((*GameRoundHuData_HuPai)(nil), "lq.GameRoundHuData.HuPai")
	proto.RegisterType((*GameRoundPlayer)(nil), "lq.GameRoundPlayer")
	proto.RegisterType((*GameRoundPlayerResult)(nil), "lq.GameRoundPlayerResult")
	proto.RegisterType((*GameRoundSnapshot)(nil), "lq.GameRoundSnapshot")
	proto.RegisterType((*GameSnapshot)(nil), "lq.GameSnapshot")
	proto.RegisterType((*GameSnapshot_PlayerSnapshot)(nil), "lq.GameSnapshot.PlayerSnapshot")
	proto.RegisterType((*GameSnapshot_PlayerSnapshot_Fulu)(nil), "lq.GameSnapshot.PlayerSnapshot.Fulu")
	proto.RegisterType((*GameTestingEnvironmentSet)(nil), "lq.GameTestingEnvironmentSet")
	proto.RegisterType((*HuleInfo)(nil), "lq.HuleInfo")
	proto.RegisterType((*Item)(nil), "lq.Item")
	proto.RegisterType((*LiQiSuccess)(nil), "lq.LiQiSuccess")
	proto.RegisterType((*Mail)(nil), "lq.Mail")
	proto.RegisterType((*NetworkEndpoint)(nil), "lq.NetworkEndpoint")
	proto.RegisterType((*NoTilePlayerInfo)(nil), "lq.NoTilePlayerInfo")
	proto.RegisterType((*NoTileScoreInfo)(nil), "lq.NoTileScoreInfo")
	proto.RegisterType((*NotifyAccountLevelChange)(nil), "lq.NotifyAccountLevelChange")
	proto.RegisterType((*NotifyAccountLogout)(nil), "lq.NotifyAccountLogout")
	proto.RegisterType((*NotifyAccountUpdate)(nil), "lq.NotifyAccountUpdate")
	proto.RegisterType((*NotifyActivityChange)(nil), "lq.NotifyActivityChange")
	proto.RegisterType((*NotifyActivityPoint)(nil), "lq.NotifyActivityPoint")
	proto.RegisterType((*NotifyActivityPoint_ActivityPoint)(nil), "lq.NotifyActivityPoint.ActivityPoint")
	proto.RegisterType((*NotifyActivityReward)(nil), "lq.NotifyActivityReward")
	proto.RegisterType((*NotifyActivityReward_ActivityReward)(nil), "lq.NotifyActivityReward.ActivityReward")
	proto.RegisterType((*NotifyActivityTaskUpdate)(nil), "lq.NotifyActivityTaskUpdate")
	proto.RegisterType((*NotifyAnnouncementUpdate)(nil), "lq.NotifyAnnouncementUpdate")
	proto.RegisterType((*NotifyAnotherLogin)(nil), "lq.NotifyAnotherLogin")
	proto.RegisterType((*NotifyClientMessage)(nil), "lq.NotifyClientMessage")
	proto.RegisterType((*NotifyCustomContestAccountMsg)(nil), "lq.NotifyCustomContestAccountMsg")
	proto.RegisterType((*NotifyCustomContestState)(nil), "lq.NotifyCustomContestState")
	proto.RegisterType((*NotifyCustomContestSystemMsg)(nil), "lq.NotifyCustomContestSystemMsg")
	proto.RegisterType((*NotifyDailyTaskUpdate)(nil), "lq.NotifyDailyTaskUpdate")
	proto.RegisterType((*NotifyDeleteMail)(nil), "lq.NotifyDeleteMail")
	proto.RegisterType((*NotifyFriendChange)(nil), "lq.NotifyFriendChange")
	proto.RegisterType((*NotifyFriendStateChange)(nil), "lq.NotifyFriendStateChange")
	proto.RegisterType((*NotifyFriendViewChange)(nil), "lq.NotifyFriendViewChange")
	proto.RegisterType((*NotifyGameBroadcast)(nil), "lq.NotifyGameBroadcast")
	proto.RegisterType((*NotifyGameEndResult)(nil), "lq.NotifyGameEndResult")
	proto.RegisterType((*NotifyGameFinishReward)(nil), "lq.NotifyGameFinishReward")
	proto.RegisterType((*NotifyGameFinishReward_CharacterGift)(nil), "lq.NotifyGameFinishReward.CharacterGift")
	proto.RegisterType((*NotifyGameFinishReward_LevelChange)(nil), "lq.NotifyGameFinishReward.LevelChange")
	proto.RegisterType((*NotifyGameFinishReward_MainCharacter)(nil), "lq.NotifyGameFinishReward.MainCharacter")
	proto.RegisterType((*NotifyGameFinishReward_MatchChest)(nil), "lq.NotifyGameFinishReward.MatchChest")
	proto.RegisterType((*NotifyGamePause)(nil), "lq.NotifyGamePause")
	proto.RegisterType((*NotifyGameTerminate)(nil), "lq.NotifyGameTerminate")
	proto.RegisterType((*NotifyGiftSendRefresh)(nil), "lq.NotifyGiftSendRefresh")
	proto.RegisterType((*NotifyLeaderboardPoint)(nil), "lq.NotifyLeaderboardPoint")
	proto.RegisterType((*NotifyLeaderboardPoint_LeaderboardPoint)(nil), "lq.NotifyLeaderboardPoint.LeaderboardPoint")
	proto.RegisterType((*NotifyMatchGameStart)(nil), "lq.NotifyMatchGameStart")
	proto.RegisterType((*NotifyMatchTimeout)(nil), "lq.NotifyMatchTimeout")
	proto.RegisterType((*NotifyNewComment)(nil), "lq.NotifyNewComment")
	proto.RegisterType((*NotifyNewFriendApply)(nil), "lq.NotifyNewFriendApply")
	proto.RegisterType((*NotifyNewGame)(nil), "lq.NotifyNewGame")
	proto.RegisterType((*NotifyNewMail)(nil), "lq.NotifyNewMail")
	proto.RegisterType((*NotifyPayResult)(nil), "lq.NotifyPayResult")
	proto.RegisterType((*NotifyPlayerConnectionState)(nil), "lq.NotifyPlayerConnectionState")
	proto.RegisterType((*NotifyPlayerLoadGameReady)(nil), "lq.NotifyPlayerLoadGameReady")
	proto.RegisterType((*NotifyReviveCoinUpdate)(nil), "lq.NotifyReviveCoinUpdate")
	proto.RegisterType((*NotifyRollingNotice)(nil), "lq.NotifyRollingNotice")
	proto.RegisterType((*NotifyRoomGameStart)(nil), "lq.NotifyRoomGameStart")
	proto.RegisterType((*NotifyRoomKickOut)(nil), "lq.NotifyRoomKickOut")
	proto.RegisterType((*NotifyRoomPlayerReady)(nil), "lq.NotifyRoomPlayerReady")
	proto.RegisterType((*NotifyRoomPlayerUpdate)(nil), "lq.NotifyRoomPlayerUpdate")
	proto.RegisterType((*NotifyServerSetting)(nil), "lq.NotifyServerSetting")
	proto.RegisterType((*NotifyShopUpdate)(nil), "lq.NotifyShopUpdate")
	proto.RegisterType((*NotifyVipLevelChange)(nil), "lq.NotifyVipLevelChange")
	proto.RegisterType((*OpenResult)(nil), "lq.OpenResult")
	proto.RegisterType((*OptionalOperation)(nil), "lq.OptionalOperation")
	proto.RegisterType((*OptionalOperationList)(nil), "lq.OptionalOperationList")
	proto.RegisterType((*PaymentSetting)(nil), "lq.PaymentSetting")
	proto.RegisterType((*PaymentSetting_AlipayData)(nil), "lq.PaymentSetting.AlipayData")
	proto.RegisterType((*PaymentSetting_WechatData)(nil), "lq.PaymentSetting.WechatData")
	proto.RegisterType((*PlayerBaseView)(nil), "lq.PlayerBaseView")
	proto.RegisterType((*PlayerGameView)(nil), "lq.PlayerGameView")
	proto.RegisterType((*RecordAnGangAddGang)(nil), "lq.RecordAnGangAddGang")
	proto.RegisterType((*RecordBaBei)(nil), "lq.RecordBaBei")
	proto.RegisterType((*RecordChiPengGang)(nil), "lq.RecordChiPengGang")
	proto.RegisterType((*RecordCollectedData)(nil), "lq.RecordCollectedData")
	proto.RegisterType((*RecordDealTile)(nil), "lq.RecordDealTile")
	proto.RegisterType((*RecordDiscardTile)(nil), "lq.RecordDiscardTile")
	proto.RegisterType((*RecordGame)(nil), "lq.RecordGame")
	proto.RegisterType((*RecordGame_AccountInfo)(nil), "lq.RecordGame.AccountInfo")
	proto.RegisterType((*RecordHule)(nil), "lq.RecordHule")
	proto.RegisterType((*RecordLiuJu)(nil), "lq.RecordLiuJu")
	proto.RegisterType((*RecordNewRound)(nil), "lq.RecordNewRound")
	proto.RegisterType((*RecordNewRound_TingPai)(nil), "lq.RecordNewRound.TingPai")
	proto.RegisterType((*RecordNoTile)(nil), "lq.RecordNoTile")
	proto.RegisterType((*ReqAccountInfo)(nil), "lq.ReqAccountInfo")
	proto.RegisterType((*ReqAccountList)(nil), "lq.ReqAccountList")
	proto.RegisterType((*ReqAccountStatisticInfo)(nil), "lq.ReqAccountStatisticInfo")
	proto.RegisterType((*ReqAddCollectedGameRecord)(nil), "lq.ReqAddCollectedGameRecord")
	proto.RegisterType((*ReqApplyFriend)(nil), "lq.ReqApplyFriend")
	proto.RegisterType((*ReqAuthGame)(nil), "lq.ReqAuthGame")
	proto.RegisterType((*ReqBindAccount)(nil), "lq.ReqBindAccount")
	proto.RegisterType((*ReqBindEmail)(nil), "lq.ReqBindEmail")
	proto.RegisterType((*ReqBindPhoneNumber)(nil), "lq.ReqBindPhoneNumber")
	proto.RegisterType((*ReqBroadcastInGame)(nil), "lq.ReqBroadcastInGame")
	proto.RegisterType((*ReqBuyFromChestShop)(nil), "lq.ReqBuyFromChestShop")
	proto.RegisterType((*ReqBuyFromShop)(nil), "lq.ReqBuyFromShop")
	proto.RegisterType((*ReqBuyFromZHP)(nil), "lq.ReqBuyFromZHP")
	proto.RegisterType((*ReqBuyShiLian)(nil), "lq.ReqBuyShiLian")
	proto.RegisterType((*ReqCancelGooglePlayOrder)(nil), "lq.ReqCancelGooglePlayOrder")
	proto.RegisterType((*ReqCancelMatchQueue)(nil), "lq.ReqCancelMatchQueue")
	proto.RegisterType((*ReqChangeAvatar)(nil), "lq.ReqChangeAvatar")
	proto.RegisterType((*ReqChangeCharacterSkin)(nil), "lq.ReqChangeCharacterSkin")
	proto.RegisterType((*ReqChangeCharacterView)(nil), "lq.ReqChangeCharacterView")
	proto.RegisterType((*ReqChangeCollectedGameRecordRemarks)(nil), "lq.ReqChangeCollectedGameRecordRemarks")
	proto.RegisterType((*ReqChangeCommonView)(nil), "lq.ReqChangeCommonView")
	proto.RegisterType((*ReqChangeMainCharacter)(nil), "lq.ReqChangeMainCharacter")
	proto.RegisterType((*ReqChiPengGang)(nil), "lq.ReqChiPengGang")
	proto.RegisterType((*ReqClientMessage)(nil), "lq.ReqClientMessage")
	proto.RegisterType((*ReqCommon)(nil), "lq.ReqCommon")
	proto.RegisterType((*ReqCompleteActivityTask)(nil), "lq.ReqCompleteActivityTask")
	proto.RegisterType((*ReqComposeShard)(nil), "lq.ReqComposeShard")
	proto.RegisterType((*ReqCreateAlipayAppOrder)(nil), "lq.ReqCreateAlipayAppOrder")
	proto.RegisterType((*ReqCreateAlipayOrder)(nil), "lq.ReqCreateAlipayOrder")
	proto.RegisterType((*ReqCreateAlipayScanOrder)(nil), "lq.ReqCreateAlipayScanOrder")
	proto.RegisterType((*ReqCreateBillingOrder)(nil), "lq.ReqCreateBillingOrder")
	proto.RegisterType((*ReqCreateENAlipayOrder)(nil), "lq.ReqCreateENAlipayOrder")
	proto.RegisterType((*ReqCreateENJCBOrder)(nil), "lq.ReqCreateENJCBOrder")
	proto.RegisterType((*ReqCreateENMasterCardOrder)(nil), "lq.ReqCreateENMasterCardOrder")
	proto.RegisterType((*ReqCreateENPaypalOrder)(nil), "lq.ReqCreateENPaypalOrder")
	proto.RegisterType((*ReqCreateENVisaOrder)(nil), "lq.ReqCreateENVisaOrder")
	proto.RegisterType((*ReqCreateEmailVerifyCode)(nil), "lq.ReqCreateEmailVerifyCode")
	proto.RegisterType((*ReqCreateJPAuOrder)(nil), "lq.ReqCreateJPAuOrder")
	proto.RegisterType((*ReqCreateJPCreditCardOrder)(nil), "lq.ReqCreateJPCreditCardOrder")
	proto.RegisterType((*ReqCreateJPDocomoOrder)(nil), "lq.ReqCreateJPDocomoOrder")
	proto.RegisterType((*ReqCreateJPPaypalOrder)(nil), "lq.ReqCreateJPPaypalOrder")
	proto.RegisterType((*ReqCreateJPSoftbankOrder)(nil), "lq.ReqCreateJPSoftbankOrder")
	proto.RegisterType((*ReqCreateNickname)(nil), "lq.ReqCreateNickname")
	proto.RegisterType((*ReqCreatePhoneVerifyCode)(nil), "lq.ReqCreatePhoneVerifyCode")
	proto.RegisterType((*ReqCreateRoom)(nil), "lq.ReqCreateRoom")
	proto.RegisterType((*ReqCreateWechatAppOrder)(nil), "lq.ReqCreateWechatAppOrder")
	proto.RegisterType((*ReqCreateWechatNativeOrder)(nil), "lq.ReqCreateWechatNativeOrder")
	proto.RegisterType((*ReqCurrentMatchInfo)(nil), "lq.ReqCurrentMatchInfo")
	proto.RegisterType((*ReqDeleteComment)(nil), "lq.ReqDeleteComment")
	proto.RegisterType((*ReqDeleteMail)(nil), "lq.ReqDeleteMail")
	proto.RegisterType((*ReqEmailLogin)(nil), "lq.ReqEmailLogin")
	proto.RegisterType((*ReqEnterCustomizedContest)(nil), "lq.ReqEnterCustomizedContest")
	proto.RegisterType((*ReqExchangeActivityItem)(nil), "lq.ReqExchangeActivityItem")
	proto.RegisterType((*ReqExchangeCurrency)(nil), "lq.ReqExchangeCurrency")
	proto.RegisterType((*ReqFetchCommentContent)(nil), "lq.ReqFetchCommentContent")
	proto.RegisterType((*ReqFetchCommentList)(nil), "lq.ReqFetchCommentList")
	proto.RegisterType((*ReqFetchCustomizedContestByContestId)(nil), "lq.ReqFetchCustomizedContestByContestId")
	proto.RegisterType((*ReqFetchCustomizedContestExtendInfo)(nil), "lq.ReqFetchCustomizedContestExtendInfo")
	proto.RegisterType((*ReqFetchCustomizedContestGameLiveList)(nil), "lq.ReqFetchCustomizedContestGameLiveList")
	proto.RegisterType((*ReqFetchCustomizedContestGameRecords)(nil), "lq.ReqFetchCustomizedContestGameRecords")
	proto.RegisterType((*ReqFetchCustomizedContestList)(nil), "lq.ReqFetchCustomizedContestList")
	proto.RegisterType((*ReqFetchCustomizedContestOnlineInfo)(nil), "lq.ReqFetchCustomizedContestOnlineInfo")
	proto.RegisterType((*ReqFetchRankPointLeaderboard)(nil), "lq.ReqFetchRankPointLeaderboard")
	proto.RegisterType((*ReqGMCommand)(nil), "lq.ReqGMCommand")
	proto.RegisterType((*ReqGMCommandInGaming)(nil), "lq.ReqGMCommandInGaming")
	proto.RegisterType((*ReqGainAccumulatedPointActivityReward)(nil), "lq.ReqGainAccumulatedPointActivityReward")
	proto.RegisterType((*ReqGainRankPointReward)(nil), "lq.ReqGainRankPointReward")
	proto.RegisterType((*ReqGainVipReward)(nil), "lq.ReqGainVipReward")
	proto.RegisterType((*ReqGameLiveInfo)(nil), "lq.ReqGameLiveInfo")
	proto.RegisterType((*ReqGameLiveLeftSegment)(nil), "lq.ReqGameLiveLeftSegment")
	proto.RegisterType((*ReqGameLiveList)(nil), "lq.ReqGameLiveList")
	proto.RegisterType((*ReqGameRecord)(nil), "lq.ReqGameRecord")
	proto.RegisterType((*ReqGameRecordList)(nil), "lq.ReqGameRecordList")
	proto.RegisterType((*ReqGameRecordsDetail)(nil), "lq.ReqGameRecordsDetail")
	proto.RegisterType((*ReqHandleFriendApply)(nil), "lq.ReqHandleFriendApply")
	proto.RegisterType((*ReqHeatBeat)(nil), "lq.ReqHeatBeat")
	proto.RegisterType((*ReqJoinCustomizedContestChatRoom)(nil), "lq.ReqJoinCustomizedContestChatRoom")
	proto.RegisterType((*ReqJoinMatchQueue)(nil), "lq.ReqJoinMatchQueue")
	proto.RegisterType((*ReqJoinRoom)(nil), "lq.ReqJoinRoom")
	proto.RegisterType((*ReqLeaveComment)(nil), "lq.ReqLeaveComment")
	proto.RegisterType((*ReqLevelLeaderboard)(nil), "lq.ReqLevelLeaderboard")
	proto.RegisterType((*ReqLogin)(nil), "lq.ReqLogin")
	proto.RegisterType((*ReqLogout)(nil), "lq.ReqLogout")
	proto.RegisterType((*ReqModifyBirthday)(nil), "lq.ReqModifyBirthday")
	proto.RegisterType((*ReqModifyNickname)(nil), "lq.ReqModifyNickname")
	proto.RegisterType((*ReqModifyPassword)(nil), "lq.ReqModifyPassword")
	proto.RegisterType((*ReqModifyRoom)(nil), "lq.ReqModifyRoom")
	proto.RegisterType((*ReqModifySignature)(nil), "lq.ReqModifySignature")
	proto.RegisterType((*ReqMultiAccountId)(nil), "lq.ReqMultiAccountId")
	proto.RegisterType((*ReqOauth2Auth)(nil), "lq.ReqOauth2Auth")
	proto.RegisterType((*ReqOauth2Check)(nil), "lq.ReqOauth2Check")
	proto.RegisterType((*ReqOauth2Login)(nil), "lq.ReqOauth2Login")
	proto.RegisterType((*ReqOauth2Signup)(nil), "lq.ReqOauth2Signup")
	proto.RegisterType((*ReqOpenChest)(nil), "lq.ReqOpenChest")
	proto.RegisterType((*ReqOpenManualItem)(nil), "lq.ReqOpenManualItem")
	proto.RegisterType((*ReqOpenRandomRewardItem)(nil), "lq.ReqOpenRandomRewardItem")
	proto.RegisterType((*ReqPlatformBillingProducts)(nil), "lq.ReqPlatformBillingProducts")
	proto.RegisterType((*ReqReadAnnouncement)(nil), "lq.ReqReadAnnouncement")
	proto.RegisterType((*ReqReadMail)(nil), "lq.ReqReadMail")
	proto.RegisterType((*ReqRefreshDailyTask)(nil), "lq.ReqRefreshDailyTask")
	proto.RegisterType((*ReqRemoveCollectedGameRecord)(nil), "lq.ReqRemoveCollectedGameRecord")
	proto.RegisterType((*ReqRemoveFriend)(nil), "lq.ReqRemoveFriend")
	proto.RegisterType((*ReqRollingNotice)(nil), "lq.ReqRollingNotice")
	proto.RegisterType((*ReqRoomKick)(nil), "lq.ReqRoomKick")
	proto.RegisterType((*ReqRoomReady)(nil), "lq.ReqRoomReady")
	proto.RegisterType((*ReqRoomStart)(nil), "lq.ReqRoomStart")
	proto.RegisterType((*ReqSayChatMessage)(nil), "lq.ReqSayChatMessage")
	proto.RegisterType((*ReqSearchAccountById)(nil), "lq.ReqSearchAccountById")
	proto.RegisterType((*ReqSearchAccountByPattern)(nil), "lq.ReqSearchAccountByPattern")
	proto.RegisterType((*ReqSelfOperation)(nil), "lq.ReqSelfOperation")
	proto.RegisterType((*ReqSellItem)(nil), "lq.ReqSellItem")
	proto.RegisterType((*ReqSellItem_Item)(nil), "lq.ReqSellItem.Item")
	proto.RegisterType((*ReqSendClientMessage)(nil), "lq.ReqSendClientMessage")
	proto.RegisterType((*ReqSendGiftToCharacter)(nil), "lq.ReqSendGiftToCharacter")
	proto.RegisterType((*ReqSendGiftToCharacter_Gift)(nil), "lq.ReqSendGiftToCharacter.Gift")
	proto.RegisterType((*ReqShopPurchase)(nil), "lq.ReqShopPurchase")
	proto.RegisterType((*ReqSignupAccount)(nil), "lq.ReqSignupAccount")
	proto.RegisterType((*ReqSolveGooglePlayOrder)(nil), "lq.ReqSolveGooglePlayOrder")
	proto.RegisterType((*ReqStartCustomizedContest)(nil), "lq.ReqStartCustomizedContest")
	proto.RegisterType((*ReqSyncGame)(nil), "lq.ReqSyncGame")
	proto.RegisterType((*ReqTakeAttachment)(nil), "lq.ReqTakeAttachment")
	proto.RegisterType((*ReqTargetCustomizedContest)(nil), "lq.ReqTargetCustomizedContest")
	proto.RegisterType((*ReqUpdateAccountSettings)(nil), "lq.ReqUpdateAccountSettings")
	proto.RegisterType((*ReqUpdateClientValue)(nil), "lq.ReqUpdateClientValue")
	proto.RegisterType((*ReqUpdateCommentSetting)(nil), "lq.ReqUpdateCommentSetting")
	proto.RegisterType((*ReqUpdateIDCardInfo)(nil), "lq.ReqUpdateIDCardInfo")
	proto.RegisterType((*ReqUpdateReadComment)(nil), "lq.ReqUpdateReadComment")
	proto.RegisterType((*ReqUpgradeCharacter)(nil), "lq.ReqUpgradeCharacter")
	proto.RegisterType((*ReqUseBagItem)(nil), "lq.ReqUseBagItem")
	proto.RegisterType((*ReqUseGiftCode)(nil), "lq.ReqUseGiftCode")
	proto.RegisterType((*ReqUseTitle)(nil), "lq.ReqUseTitle")
	proto.RegisterType((*ReqVerifyCodeForSecure)(nil), "lq.ReqVerifyCodeForSecure")
	proto.RegisterType((*ResAccountActivityData)(nil), "lq.ResAccountActivityData")
	proto.RegisterType((*ResAccountCharacterInfo)(nil), "lq.ResAccountCharacterInfo")
	proto.RegisterType((*ResAccountInfo)(nil), "lq.ResAccountInfo")
	proto.RegisterType((*ResAccountSettings)(nil), "lq.ResAccountSettings")
	proto.RegisterType((*ResAccountStates)(nil), "lq.ResAccountStates")
	proto.RegisterType((*ResAccountStatisticInfo)(nil), "lq.ResAccountStatisticInfo")
	proto.RegisterType((*ResAccountUpdate)(nil), "lq.ResAccountUpdate")
	proto.RegisterType((*ResAchievement)(nil), "lq.ResAchievement")
	proto.RegisterType((*ResActivityList)(nil), "lq.ResActivityList")
	proto.RegisterType((*ResAddCollectedGameRecord)(nil), "lq.ResAddCollectedGameRecord")
	proto.RegisterType((*ResAnnouncement)(nil), "lq.ResAnnouncement")
	proto.RegisterType((*ResAuthGame)(nil), "lq.ResAuthGame")
	proto.RegisterType((*ResBagInfo)(nil), "lq.ResBagInfo")
	proto.RegisterType((*ResBuyFromChestShop)(nil), "lq.ResBuyFromChestShop")
	proto.RegisterType((*ResBuyFromShop)(nil), "lq.ResBuyFromShop")
	proto.RegisterType((*ResChangeCollectedGameRecordRemarks)(nil), "lq.ResChangeCollectedGameRecordRemarks")
	proto.RegisterType((*ResCharacterInfo)(nil), "lq.ResCharacterInfo")
	proto.RegisterType((*ResClientValue)(nil), "lq.ResClientValue")
	proto.RegisterType((*ResClientValue_Value)(nil), "lq.ResClientValue.Value")
	proto.RegisterType((*ResCollectedGameRecordList)(nil), "lq.ResCollectedGameRecordList")
	proto.RegisterType((*ResCommentSetting)(nil), "lq.ResCommentSetting")
	proto.RegisterType((*ResCommon)(nil), "lq.ResCommon")
	proto.RegisterType((*ResCommonView)(nil), "lq.ResCommonView")
	proto.RegisterType((*ResCommonView_Slot)(nil), "lq.ResCommonView.Slot")
	proto.RegisterType((*ResConnectionInfo)(nil), "lq.ResConnectionInfo")
	proto.RegisterType((*ResCreateAlipayAppOrder)(nil), "lq.ResCreateAlipayAppOrder")
	proto.RegisterType((*ResCreateAlipayOrder)(nil), "lq.ResCreateAlipayOrder")
	proto.RegisterType((*ResCreateAlipayScanOrder)(nil), "lq.ResCreateAlipayScanOrder")
	proto.RegisterType((*ResCreateBillingOrder)(nil), "lq.ResCreateBillingOrder")
	proto.RegisterType((*ResCreateENAlipayOrder)(nil), "lq.ResCreateENAlipayOrder")
	proto.RegisterType((*ResCreateENJCBOrder)(nil), "lq.ResCreateENJCBOrder")
	proto.RegisterType((*ResCreateENMasterCardOrder)(nil), "lq.ResCreateENMasterCardOrder")
	proto.RegisterType((*ResCreateENPaypalOrder)(nil), "lq.ResCreateENPaypalOrder")
	proto.RegisterType((*ResCreateENVisaOrder)(nil), "lq.ResCreateENVisaOrder")
	proto.RegisterType((*ResCreateJPAuOrder)(nil), "lq.ResCreateJPAuOrder")
	proto.RegisterType((*ResCreateJPCreditCardOrder)(nil), "lq.ResCreateJPCreditCardOrder")
	proto.RegisterType((*ResCreateJPDocomoOrder)(nil), "lq.ResCreateJPDocomoOrder")
	proto.RegisterType((*ResCreateJPPaypalOrder)(nil), "lq.ResCreateJPPaypalOrder")
	proto.RegisterType((*ResCreateJPSoftbankOrder)(nil), "lq.ResCreateJPSoftbankOrder")
	proto.RegisterType((*ResCreateRoom)(nil), "lq.ResCreateRoom")
	proto.RegisterType((*ResCreateWechatAppOrder)(nil), "lq.ResCreateWechatAppOrder")
	proto.RegisterType((*ResCreateWechatAppOrder_CallWechatAppParam)(nil), "lq.ResCreateWechatAppOrder.CallWechatAppParam")
	proto.RegisterType((*ResCreateWechatNativeOrder)(nil), "lq.ResCreateWechatNativeOrder")
	proto.RegisterType((*ResCurrentMatchInfo)(nil), "lq.ResCurrentMatchInfo")
	proto.RegisterType((*ResCurrentMatchInfo_CurrentMatchInfo)(nil), "lq.ResCurrentMatchInfo.CurrentMatchInfo")
	proto.RegisterType((*ResDailySignInInfo)(nil), "lq.ResDailySignInInfo")
	proto.RegisterType((*ResDailyTask)(nil), "lq.ResDailyTask")
	proto.RegisterType((*ResEnterCustomizedContest)(nil), "lq.ResEnterCustomizedContest")
	proto.RegisterType((*ResEnterGame)(nil), "lq.ResEnterGame")
	proto.RegisterType((*ResExchangeActivityItem)(nil), "lq.ResExchangeActivityItem")
	proto.RegisterType((*ResFetchCommentContent)(nil), "lq.ResFetchCommentContent")
	proto.RegisterType((*ResFetchCommentList)(nil), "lq.ResFetchCommentList")
	proto.RegisterType((*ResFetchCustomizedContestByContestId)(nil), "lq.ResFetchCustomizedContestByContestId")
	proto.RegisterType((*ResFetchCustomizedContestExtendInfo)(nil), "lq.ResFetchCustomizedContestExtendInfo")
	proto.RegisterType((*ResFetchCustomizedContestGameLiveList)(nil), "lq.ResFetchCustomizedContestGameLiveList")
	proto.RegisterType((*ResFetchCustomizedContestGameRecords)(nil), "lq.ResFetchCustomizedContestGameRecords")
	proto.RegisterType((*ResFetchCustomizedContestList)(nil), "lq.ResFetchCustomizedContestList")
	proto.RegisterType((*ResFetchCustomizedContestOnlineInfo)(nil), "lq.ResFetchCustomizedContestOnlineInfo")
	proto.RegisterType((*ResFetchRankPointLeaderboard)(nil), "lq.ResFetchRankPointLeaderboard")
	proto.RegisterType((*ResFetchRankPointLeaderboard_Item)(nil), "lq.ResFetchRankPointLeaderboard.Item")
	proto.RegisterType((*ResFriendApplyList)(nil), "lq.ResFriendApplyList")
	proto.RegisterType((*ResFriendApplyList_FriendApply)(nil), "lq.ResFriendApplyList.FriendApply")
	proto.RegisterType((*ResFriendList)(nil), "lq.ResFriendList")
	proto.RegisterType((*ResGameLiveInfo)(nil), "lq.ResGameLiveInfo")
	proto.RegisterType((*ResGameLiveLeftSegment)(nil), "lq.ResGameLiveLeftSegment")
	proto.RegisterType((*ResGameLiveList)(nil), "lq.ResGameLiveList")
	proto.RegisterType((*ResGamePlayerState)(nil), "lq.ResGamePlayerState")
	proto.RegisterType((*ResGameRecord)(nil), "lq.ResGameRecord")
	proto.RegisterType((*ResGameRecordList)(nil), "lq.ResGameRecordList")
	proto.RegisterType((*ResGameRecordsDetail)(nil), "lq.ResGameRecordsDetail")
	proto.RegisterType((*ResIDCardInfo)(nil), "lq.ResIDCardInfo")
	proto.RegisterType((*ResJoinCustomizedContestChatRoom)(nil), "lq.ResJoinCustomizedContestChatRoom")
	proto.RegisterType((*ResJoinRoom)(nil), "lq.ResJoinRoom")
	proto.RegisterType((*ResLevelLeaderboard)(nil), "lq.ResLevelLeaderboard")
	proto.RegisterType((*ResLevelLeaderboard_Item)(nil), "lq.ResLevelLeaderboard.Item")
	proto.RegisterType((*ResLogin)(nil), "lq.ResLogin")
	proto.RegisterType((*ResLogout)(nil), "lq.ResLogout")
	proto.RegisterType((*ResMailInfo)(nil), "lq.ResMailInfo")
	proto.RegisterType((*ResMisc)(nil), "lq.ResMisc")
	proto.RegisterType((*ResModNicknameTime)(nil), "lq.ResModNicknameTime")
	proto.RegisterType((*ResMultiAccountBrief)(nil), "lq.ResMultiAccountBrief")
	proto.RegisterType((*ResOauth2Auth)(nil), "lq.ResOauth2Auth")
	proto.RegisterType((*ResOauth2Check)(nil), "lq.ResOauth2Check")
	proto.RegisterType((*ResOauth2Signup)(nil), "lq.ResOauth2Signup")
	proto.RegisterType((*ResOpenChest)(nil), "lq.ResOpenChest")
	proto.RegisterType((*ResOpenRandomRewardItem)(nil), "lq.ResOpenRandomRewardItem")
	proto.RegisterType((*ResPlatformBillingProducts)(nil), "lq.ResPlatformBillingProducts")
	proto.RegisterType((*ResRefreshDailyTask)(nil), "lq.ResRefreshDailyTask")
	proto.RegisterType((*ResRefreshZHPShop)(nil), "lq.ResRefreshZHPShop")
	proto.RegisterType((*ResRemoveCollectedGameRecord)(nil), "lq.ResRemoveCollectedGameRecord")
	proto.RegisterType((*ResReviveCoinInfo)(nil), "lq.ResReviveCoinInfo")
	proto.RegisterType((*ResSearchAccountById)(nil), "lq.ResSearchAccountById")
	proto.RegisterType((*ResSearchAccountByPattern)(nil), "lq.ResSearchAccountByPattern")
	proto.RegisterType((*ResSelfRoom)(nil), "lq.ResSelfRoom")
	proto.RegisterType((*ResSendGiftToCharacter)(nil), "lq.ResSendGiftToCharacter")
	proto.RegisterType((*ResServerSettings)(nil), "lq.ResServerSettings")
	proto.RegisterType((*ResServerTime)(nil), "lq.ResServerTime")
	proto.RegisterType((*ResShopInfo)(nil), "lq.ResShopInfo")
	proto.RegisterType((*ResShopPurchase)(nil), "lq.ResShopPurchase")
	proto.RegisterType((*ResSignupAccount)(nil), "lq.ResSignupAccount")
	proto.RegisterType((*ResSyncGame)(nil), "lq.ResSyncGame")
	proto.RegisterType((*ResTitleList)(nil), "lq.ResTitleList")
	proto.RegisterType((*ResUpgradeCharacter)(nil), "lq.ResUpgradeCharacter")
	proto.RegisterType((*ResUseGiftCode)(nil), "lq.ResUseGiftCode")
	proto.RegisterType((*ResVerfiyCodeForSecure)(nil), "lq.ResVerfiyCodeForSecure")
	proto.RegisterType((*ResVipReward)(nil), "lq.ResVipReward")
	proto.RegisterType((*RewardPlusResult)(nil), "lq.RewardPlusResult")
	proto.RegisterType((*RewardPlusResult_Exchange)(nil), "lq.RewardPlusResult.Exchange")
	proto.RegisterType((*RewardSlot)(nil), "lq.RewardSlot")
	proto.RegisterType((*RollingNotice)(nil), "lq.RollingNotice")
	proto.RegisterType((*Room)(nil), "lq.Room")
	proto.RegisterType((*ServerSettings)(nil), "lq.ServerSettings")
	proto.RegisterType((*ShopInfo)(nil), "lq.ShopInfo")
	proto.RegisterType((*TaskProgress)(nil), "lq.TaskProgress")
	proto.RegisterType((*TingPaiDiscardInfo)(nil), "lq.TingPaiDiscardInfo")
	proto.RegisterType((*TingPaiInfo)(nil), "lq.TingPaiInfo")
	proto.RegisterType((*Wrapper)(nil), "lq.Wrapper")
	proto.RegisterType((*ZHPShop)(nil), "lq.ZHPShop")
	proto.RegisterType((*ZHPShop_RefreshCount)(nil), "lq.ZHPShop.RefreshCount")
	proto.RegisterEnum("lq.GamePlayerState", GamePlayerState_name, GamePlayerState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FastTest service

type FastTestClient interface {
	AuthGame(ctx context.Context, in *ReqAuthGame, opts ...grpc.CallOption) (*ResAuthGame, error)
	BroadcastInGame(ctx context.Context, in *ReqBroadcastInGame, opts ...grpc.CallOption) (*ResCommon, error)
	CheckNetworkDelay(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	ConfirmNewRound(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	EnterGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResEnterGame, error)
	FetchGamePlayerState(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResGamePlayerState, error)
	FinishSyncGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	InputChiPengGang(ctx context.Context, in *ReqChiPengGang, opts ...grpc.CallOption) (*ResCommon, error)
	InputGameGMCommand(ctx context.Context, in *ReqGMCommandInGaming, opts ...grpc.CallOption) (*ResCommon, error)
	InputOperation(ctx context.Context, in *ReqSelfOperation, opts ...grpc.CallOption) (*ResCommon, error)
	SyncGame(ctx context.Context, in *ReqSyncGame, opts ...grpc.CallOption) (*ResSyncGame, error)
	TerminateGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
}

type fastTestClient struct {
	cc *grpc.ClientConn
}

func NewFastTestClient(cc *grpc.ClientConn) FastTestClient {
	return &fastTestClient{cc}
}

func (c *fastTestClient) AuthGame(ctx context.Context, in *ReqAuthGame, opts ...grpc.CallOption) (*ResAuthGame, error) {
	out := new(ResAuthGame)
	err := grpc.Invoke(ctx, "/lq.FastTest/authGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) BroadcastInGame(ctx context.Context, in *ReqBroadcastInGame, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.FastTest/broadcastInGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) CheckNetworkDelay(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.FastTest/checkNetworkDelay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) ConfirmNewRound(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.FastTest/confirmNewRound", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) EnterGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResEnterGame, error) {
	out := new(ResEnterGame)
	err := grpc.Invoke(ctx, "/lq.FastTest/enterGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) FetchGamePlayerState(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResGamePlayerState, error) {
	out := new(ResGamePlayerState)
	err := grpc.Invoke(ctx, "/lq.FastTest/fetchGamePlayerState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) FinishSyncGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.FastTest/finishSyncGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) InputChiPengGang(ctx context.Context, in *ReqChiPengGang, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.FastTest/inputChiPengGang", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) InputGameGMCommand(ctx context.Context, in *ReqGMCommandInGaming, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.FastTest/inputGameGMCommand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) InputOperation(ctx context.Context, in *ReqSelfOperation, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.FastTest/inputOperation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) SyncGame(ctx context.Context, in *ReqSyncGame, opts ...grpc.CallOption) (*ResSyncGame, error) {
	out := new(ResSyncGame)
	err := grpc.Invoke(ctx, "/lq.FastTest/syncGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fastTestClient) TerminateGame(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.FastTest/terminateGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FastTest service

type FastTestServer interface {
	AuthGame(context.Context, *ReqAuthGame) (*ResAuthGame, error)
	BroadcastInGame(context.Context, *ReqBroadcastInGame) (*ResCommon, error)
	CheckNetworkDelay(context.Context, *ReqCommon) (*ResCommon, error)
	ConfirmNewRound(context.Context, *ReqCommon) (*ResCommon, error)
	EnterGame(context.Context, *ReqCommon) (*ResEnterGame, error)
	FetchGamePlayerState(context.Context, *ReqCommon) (*ResGamePlayerState, error)
	FinishSyncGame(context.Context, *ReqCommon) (*ResCommon, error)
	InputChiPengGang(context.Context, *ReqChiPengGang) (*ResCommon, error)
	InputGameGMCommand(context.Context, *ReqGMCommandInGaming) (*ResCommon, error)
	InputOperation(context.Context, *ReqSelfOperation) (*ResCommon, error)
	SyncGame(context.Context, *ReqSyncGame) (*ResSyncGame, error)
	TerminateGame(context.Context, *ReqCommon) (*ResCommon, error)
}

func RegisterFastTestServer(s *grpc.Server, srv FastTestServer) {
	s.RegisterService(&_FastTest_serviceDesc, srv)
}

func _FastTest_AuthGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAuthGame)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).AuthGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/AuthGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).AuthGame(ctx, req.(*ReqAuthGame))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_BroadcastInGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBroadcastInGame)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).BroadcastInGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/BroadcastInGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).BroadcastInGame(ctx, req.(*ReqBroadcastInGame))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_CheckNetworkDelay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).CheckNetworkDelay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/CheckNetworkDelay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).CheckNetworkDelay(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_ConfirmNewRound_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).ConfirmNewRound(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/ConfirmNewRound",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).ConfirmNewRound(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_EnterGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).EnterGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/EnterGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).EnterGame(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_FetchGamePlayerState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).FetchGamePlayerState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/FetchGamePlayerState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).FetchGamePlayerState(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_FinishSyncGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).FinishSyncGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/FinishSyncGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).FinishSyncGame(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_InputChiPengGang_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChiPengGang)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).InputChiPengGang(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/InputChiPengGang",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).InputChiPengGang(ctx, req.(*ReqChiPengGang))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_InputGameGMCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGMCommandInGaming)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).InputGameGMCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/InputGameGMCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).InputGameGMCommand(ctx, req.(*ReqGMCommandInGaming))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_InputOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSelfOperation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).InputOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/InputOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).InputOperation(ctx, req.(*ReqSelfOperation))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_SyncGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSyncGame)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).SyncGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/SyncGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).SyncGame(ctx, req.(*ReqSyncGame))
	}
	return interceptor(ctx, in, info, handler)
}

func _FastTest_TerminateGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FastTestServer).TerminateGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.FastTest/TerminateGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FastTestServer).TerminateGame(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

var _FastTest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lq.FastTest",
	HandlerType: (*FastTestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "authGame",
			Handler:    _FastTest_AuthGame_Handler,
		},
		{
			MethodName: "broadcastInGame",
			Handler:    _FastTest_BroadcastInGame_Handler,
		},
		{
			MethodName: "checkNetworkDelay",
			Handler:    _FastTest_CheckNetworkDelay_Handler,
		},
		{
			MethodName: "confirmNewRound",
			Handler:    _FastTest_ConfirmNewRound_Handler,
		},
		{
			MethodName: "enterGame",
			Handler:    _FastTest_EnterGame_Handler,
		},
		{
			MethodName: "fetchGamePlayerState",
			Handler:    _FastTest_FetchGamePlayerState_Handler,
		},
		{
			MethodName: "finishSyncGame",
			Handler:    _FastTest_FinishSyncGame_Handler,
		},
		{
			MethodName: "inputChiPengGang",
			Handler:    _FastTest_InputChiPengGang_Handler,
		},
		{
			MethodName: "inputGameGMCommand",
			Handler:    _FastTest_InputGameGMCommand_Handler,
		},
		{
			MethodName: "inputOperation",
			Handler:    _FastTest_InputOperation_Handler,
		},
		{
			MethodName: "syncGame",
			Handler:    _FastTest_SyncGame_Handler,
		},
		{
			MethodName: "terminateGame",
			Handler:    _FastTest_TerminateGame_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "liqi.proto",
}

// Client API for Lobby service

type LobbyClient interface {
	AddCollectedGameRecord(ctx context.Context, in *ReqAddCollectedGameRecord, opts ...grpc.CallOption) (*ResAddCollectedGameRecord, error)
	ApplyFriend(ctx context.Context, in *ReqApplyFriend, opts ...grpc.CallOption) (*ResCommon, error)
	BindAccount(ctx context.Context, in *ReqBindAccount, opts ...grpc.CallOption) (*ResCommon, error)
	BindEmail(ctx context.Context, in *ReqBindEmail, opts ...grpc.CallOption) (*ResCommon, error)
	BindPhoneNumber(ctx context.Context, in *ReqBindPhoneNumber, opts ...grpc.CallOption) (*ResCommon, error)
	BuyFromChestShop(ctx context.Context, in *ReqBuyFromChestShop, opts ...grpc.CallOption) (*ResBuyFromChestShop, error)
	BuyFromShop(ctx context.Context, in *ReqBuyFromShop, opts ...grpc.CallOption) (*ResBuyFromShop, error)
	BuyFromZHP(ctx context.Context, in *ReqBuyFromZHP, opts ...grpc.CallOption) (*ResCommon, error)
	BuyShiLian(ctx context.Context, in *ReqBuyShiLian, opts ...grpc.CallOption) (*ResCommon, error)
	CancelGooglePlayOrder(ctx context.Context, in *ReqCancelGooglePlayOrder, opts ...grpc.CallOption) (*ResCommon, error)
	CancelMatch(ctx context.Context, in *ReqCancelMatchQueue, opts ...grpc.CallOption) (*ResCommon, error)
	ChangeAvatar(ctx context.Context, in *ReqChangeAvatar, opts ...grpc.CallOption) (*ResCommon, error)
	ChangeCharacterSkin(ctx context.Context, in *ReqChangeCharacterSkin, opts ...grpc.CallOption) (*ResCommon, error)
	ChangeCharacterView(ctx context.Context, in *ReqChangeCharacterView, opts ...grpc.CallOption) (*ResCommon, error)
	ChangeCollectedGameRecordRemarks(ctx context.Context, in *ReqChangeCollectedGameRecordRemarks, opts ...grpc.CallOption) (*ResChangeCollectedGameRecordRemarks, error)
	ChangeCommonView(ctx context.Context, in *ReqChangeCommonView, opts ...grpc.CallOption) (*ResCommon, error)
	ChangeMainCharacter(ctx context.Context, in *ReqChangeMainCharacter, opts ...grpc.CallOption) (*ResCommon, error)
	ClientMessage(ctx context.Context, in *ReqClientMessage, opts ...grpc.CallOption) (*ResCommon, error)
	CompleteActivityTask(ctx context.Context, in *ReqCompleteActivityTask, opts ...grpc.CallOption) (*ResCommon, error)
	ComposeShard(ctx context.Context, in *ReqComposeShard, opts ...grpc.CallOption) (*ResCommon, error)
	CreateAlipayAppOrder(ctx context.Context, in *ReqCreateAlipayAppOrder, opts ...grpc.CallOption) (*ResCreateAlipayAppOrder, error)
	CreateAlipayOrder(ctx context.Context, in *ReqCreateAlipayOrder, opts ...grpc.CallOption) (*ResCreateAlipayOrder, error)
	CreateAlipayScanOrder(ctx context.Context, in *ReqCreateAlipayScanOrder, opts ...grpc.CallOption) (*ResCreateAlipayScanOrder, error)
	CreateBillingOrder(ctx context.Context, in *ReqCreateBillingOrder, opts ...grpc.CallOption) (*ResCreateBillingOrder, error)
	CreateENAlipayOrder(ctx context.Context, in *ReqCreateENAlipayOrder, opts ...grpc.CallOption) (*ResCreateENAlipayOrder, error)
	CreateENJCBOrder(ctx context.Context, in *ReqCreateENJCBOrder, opts ...grpc.CallOption) (*ResCreateENJCBOrder, error)
	CreateENMasterCardOrder(ctx context.Context, in *ReqCreateENMasterCardOrder, opts ...grpc.CallOption) (*ResCreateENMasterCardOrder, error)
	CreateENPaypalOrder(ctx context.Context, in *ReqCreateENPaypalOrder, opts ...grpc.CallOption) (*ResCreateENPaypalOrder, error)
	CreateENVisaOrder(ctx context.Context, in *ReqCreateENVisaOrder, opts ...grpc.CallOption) (*ResCreateENVisaOrder, error)
	CreateEmailVerifyCode(ctx context.Context, in *ReqCreateEmailVerifyCode, opts ...grpc.CallOption) (*ResCommon, error)
	CreateJPAuOrder(ctx context.Context, in *ReqCreateJPAuOrder, opts ...grpc.CallOption) (*ResCreateJPAuOrder, error)
	CreateJPCreditCardOrder(ctx context.Context, in *ReqCreateJPCreditCardOrder, opts ...grpc.CallOption) (*ResCreateJPCreditCardOrder, error)
	CreateJPDocomoOrder(ctx context.Context, in *ReqCreateJPDocomoOrder, opts ...grpc.CallOption) (*ResCreateJPDocomoOrder, error)
	CreateJPPaypalOrder(ctx context.Context, in *ReqCreateJPPaypalOrder, opts ...grpc.CallOption) (*ResCreateJPPaypalOrder, error)
	CreateJPSoftbankOrder(ctx context.Context, in *ReqCreateJPSoftbankOrder, opts ...grpc.CallOption) (*ResCreateJPSoftbankOrder, error)
	CreateNickname(ctx context.Context, in *ReqCreateNickname, opts ...grpc.CallOption) (*ResCommon, error)
	CreatePhoneVerifyCode(ctx context.Context, in *ReqCreatePhoneVerifyCode, opts ...grpc.CallOption) (*ResCommon, error)
	CreateRoom(ctx context.Context, in *ReqCreateRoom, opts ...grpc.CallOption) (*ResCreateRoom, error)
	CreateWechatAppOrder(ctx context.Context, in *ReqCreateWechatAppOrder, opts ...grpc.CallOption) (*ResCreateWechatAppOrder, error)
	CreateWechatNativeOrder(ctx context.Context, in *ReqCreateWechatNativeOrder, opts ...grpc.CallOption) (*ResCreateWechatNativeOrder, error)
	DeleteComment(ctx context.Context, in *ReqDeleteComment, opts ...grpc.CallOption) (*ResCommon, error)
	DeleteMail(ctx context.Context, in *ReqDeleteMail, opts ...grpc.CallOption) (*ResCommon, error)
	DoDailySignIn(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	EmailLogin(ctx context.Context, in *ReqEmailLogin, opts ...grpc.CallOption) (*ResLogin, error)
	EnterCustomizedContest(ctx context.Context, in *ReqEnterCustomizedContest, opts ...grpc.CallOption) (*ResEnterCustomizedContest, error)
	ExchangeActivityItem(ctx context.Context, in *ReqExchangeActivityItem, opts ...grpc.CallOption) (*ResExchangeActivityItem, error)
	ExchangeChestStone(ctx context.Context, in *ReqExchangeCurrency, opts ...grpc.CallOption) (*ResCommon, error)
	ExchangeCurrency(ctx context.Context, in *ReqExchangeCurrency, opts ...grpc.CallOption) (*ResCommon, error)
	FetchAccountActivityData(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountActivityData, error)
	FetchAccountCharacterInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountCharacterInfo, error)
	FetchAccountInfo(ctx context.Context, in *ReqAccountInfo, opts ...grpc.CallOption) (*ResAccountInfo, error)
	FetchAccountSettings(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountSettings, error)
	FetchAccountState(ctx context.Context, in *ReqAccountList, opts ...grpc.CallOption) (*ResAccountStates, error)
	FetchAccountStatisticInfo(ctx context.Context, in *ReqAccountStatisticInfo, opts ...grpc.CallOption) (*ResAccountStatisticInfo, error)
	FetchAchievement(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAchievement, error)
	FetchActivityList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResActivityList, error)
	FetchAnnouncement(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAnnouncement, error)
	FetchBagInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResBagInfo, error)
	FetchCharacterInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCharacterInfo, error)
	FetchClientValue(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResClientValue, error)
	FetchCollectedGameRecordList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCollectedGameRecordList, error)
	FetchCommentContent(ctx context.Context, in *ReqFetchCommentContent, opts ...grpc.CallOption) (*ResFetchCommentContent, error)
	FetchCommentList(ctx context.Context, in *ReqFetchCommentList, opts ...grpc.CallOption) (*ResFetchCommentList, error)
	FetchCommentSetting(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommentSetting, error)
	FetchCommonView(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommonView, error)
	FetchConnectionInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResConnectionInfo, error)
	FetchCurrentMatchInfo(ctx context.Context, in *ReqCurrentMatchInfo, opts ...grpc.CallOption) (*ResCurrentMatchInfo, error)
	FetchCustomizedContestByContestId(ctx context.Context, in *ReqFetchCustomizedContestByContestId, opts ...grpc.CallOption) (*ResFetchCustomizedContestByContestId, error)
	FetchCustomizedContestExtendInfo(ctx context.Context, in *ReqFetchCustomizedContestExtendInfo, opts ...grpc.CallOption) (*ResFetchCustomizedContestExtendInfo, error)
	FetchCustomizedContestGameLiveList(ctx context.Context, in *ReqFetchCustomizedContestGameLiveList, opts ...grpc.CallOption) (*ResFetchCustomizedContestGameLiveList, error)
	FetchCustomizedContestGameRecords(ctx context.Context, in *ReqFetchCustomizedContestGameRecords, opts ...grpc.CallOption) (*ResFetchCustomizedContestGameRecords, error)
	FetchCustomizedContestList(ctx context.Context, in *ReqFetchCustomizedContestList, opts ...grpc.CallOption) (*ResFetchCustomizedContestList, error)
	FetchCustomizedContestOnlineInfo(ctx context.Context, in *ReqFetchCustomizedContestOnlineInfo, opts ...grpc.CallOption) (*ResFetchCustomizedContestOnlineInfo, error)
	FetchDailySignInInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResDailySignInInfo, error)
	FetchDailyTask(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResDailyTask, error)
	FetchFriendApplyList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFriendApplyList, error)
	FetchFriendList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFriendList, error)
	FetchGameLiveInfo(ctx context.Context, in *ReqGameLiveInfo, opts ...grpc.CallOption) (*ResGameLiveInfo, error)
	FetchGameLiveLeftSegment(ctx context.Context, in *ReqGameLiveLeftSegment, opts ...grpc.CallOption) (*ResGameLiveLeftSegment, error)
	FetchGameLiveList(ctx context.Context, in *ReqGameLiveList, opts ...grpc.CallOption) (*ResGameLiveList, error)
	FetchGameRecord(ctx context.Context, in *ReqGameRecord, opts ...grpc.CallOption) (*ResGameRecord, error)
	FetchGameRecordList(ctx context.Context, in *ReqGameRecordList, opts ...grpc.CallOption) (*ResGameRecordList, error)
	FetchGameRecordsDetail(ctx context.Context, in *ReqGameRecordsDetail, opts ...grpc.CallOption) (*ResGameRecordsDetail, error)
	FetchIDCardInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResIDCardInfo, error)
	FetchLevelLeaderboard(ctx context.Context, in *ReqLevelLeaderboard, opts ...grpc.CallOption) (*ResLevelLeaderboard, error)
	FetchMailInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResMailInfo, error)
	FetchMisc(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResMisc, error)
	FetchModNicknameTime(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResModNicknameTime, error)
	FetchMultiAccountBrief(ctx context.Context, in *ReqMultiAccountId, opts ...grpc.CallOption) (*ResMultiAccountBrief, error)
	FetchPlatformProducts(ctx context.Context, in *ReqPlatformBillingProducts, opts ...grpc.CallOption) (*ResPlatformBillingProducts, error)
	FetchRankPointLeaderboard(ctx context.Context, in *ReqFetchRankPointLeaderboard, opts ...grpc.CallOption) (*ResFetchRankPointLeaderboard, error)
	FetchReviveCoinInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResReviveCoinInfo, error)
	FetchRollingNotice(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ReqRollingNotice, error)
	FetchRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResSelfRoom, error)
	FetchServerSettings(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResServerSettings, error)
	FetchServerTime(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResServerTime, error)
	FetchShopInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResShopInfo, error)
	FetchTitleList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResTitleList, error)
	FetchVipReward(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResVipReward, error)
	FollowCustomizedContest(ctx context.Context, in *ReqTargetCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error)
	GainAccumulatedPointActivityReward(ctx context.Context, in *ReqGainAccumulatedPointActivityReward, opts ...grpc.CallOption) (*ResCommon, error)
	GainRankPointReward(ctx context.Context, in *ReqGainRankPointReward, opts ...grpc.CallOption) (*ResCommon, error)
	GainReviveCoin(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	GainVipReward(ctx context.Context, in *ReqGainVipReward, opts ...grpc.CallOption) (*ResCommon, error)
	GameMasterCommand(ctx context.Context, in *ReqGMCommand, opts ...grpc.CallOption) (*ResCommon, error)
	GoNextShiLian(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	HandleFriendApply(ctx context.Context, in *ReqHandleFriendApply, opts ...grpc.CallOption) (*ResCommon, error)
	Heatbeat(ctx context.Context, in *ReqHeatBeat, opts ...grpc.CallOption) (*ResCommon, error)
	JoinCustomizedContestChatRoom(ctx context.Context, in *ReqJoinCustomizedContestChatRoom, opts ...grpc.CallOption) (*ResJoinCustomizedContestChatRoom, error)
	JoinRoom(ctx context.Context, in *ReqJoinRoom, opts ...grpc.CallOption) (*ResJoinRoom, error)
	KickPlayer(ctx context.Context, in *ReqRoomKick, opts ...grpc.CallOption) (*ResCommon, error)
	LeaveComment(ctx context.Context, in *ReqLeaveComment, opts ...grpc.CallOption) (*ResCommon, error)
	LeaveCustomizedContest(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	LeaveCustomizedContestChatRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	LeaveRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	Login(ctx context.Context, in *ReqLogin, opts ...grpc.CallOption) (*ResLogin, error)
	Logout(ctx context.Context, in *ReqLogout, opts ...grpc.CallOption) (*ResLogout, error)
	MatchGame(ctx context.Context, in *ReqJoinMatchQueue, opts ...grpc.CallOption) (*ResCommon, error)
	MatchShiLian(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	ModifyBirthday(ctx context.Context, in *ReqModifyBirthday, opts ...grpc.CallOption) (*ResCommon, error)
	ModifyNickname(ctx context.Context, in *ReqModifyNickname, opts ...grpc.CallOption) (*ResCommon, error)
	ModifyPassword(ctx context.Context, in *ReqModifyPassword, opts ...grpc.CallOption) (*ResCommon, error)
	ModifyRoom(ctx context.Context, in *ReqModifyRoom, opts ...grpc.CallOption) (*ResCommon, error)
	ModifySignature(ctx context.Context, in *ReqModifySignature, opts ...grpc.CallOption) (*ResCommon, error)
	Oauth2Auth(ctx context.Context, in *ReqOauth2Auth, opts ...grpc.CallOption) (*ResOauth2Auth, error)
	Oauth2Check(ctx context.Context, in *ReqOauth2Check, opts ...grpc.CallOption) (*ResOauth2Check, error)
	Oauth2Login(ctx context.Context, in *ReqOauth2Login, opts ...grpc.CallOption) (*ResLogin, error)
	Oauth2Signup(ctx context.Context, in *ReqOauth2Signup, opts ...grpc.CallOption) (*ResOauth2Signup, error)
	OpenChest(ctx context.Context, in *ReqOpenChest, opts ...grpc.CallOption) (*ResOpenChest, error)
	OpenManualItem(ctx context.Context, in *ReqOpenManualItem, opts ...grpc.CallOption) (*ResCommon, error)
	OpenRandomRewardItem(ctx context.Context, in *ReqOpenRandomRewardItem, opts ...grpc.CallOption) (*ResOpenRandomRewardItem, error)
	ReadAnnouncement(ctx context.Context, in *ReqReadAnnouncement, opts ...grpc.CallOption) (*ResCommon, error)
	ReadMail(ctx context.Context, in *ReqReadMail, opts ...grpc.CallOption) (*ResCommon, error)
	ReadyPlay(ctx context.Context, in *ReqRoomReady, opts ...grpc.CallOption) (*ResCommon, error)
	RefreshDailyTask(ctx context.Context, in *ReqRefreshDailyTask, opts ...grpc.CallOption) (*ResRefreshDailyTask, error)
	RefreshZHPShop(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResRefreshZHPShop, error)
	RemoveCollectedGameRecord(ctx context.Context, in *ReqRemoveCollectedGameRecord, opts ...grpc.CallOption) (*ResRemoveCollectedGameRecord, error)
	RemoveFriend(ctx context.Context, in *ReqRemoveFriend, opts ...grpc.CallOption) (*ResCommon, error)
	SayChatMessage(ctx context.Context, in *ReqSayChatMessage, opts ...grpc.CallOption) (*ResCommon, error)
	SearchAccountById(ctx context.Context, in *ReqSearchAccountById, opts ...grpc.CallOption) (*ResSearchAccountById, error)
	SearchAccountByPattern(ctx context.Context, in *ReqSearchAccountByPattern, opts ...grpc.CallOption) (*ResSearchAccountByPattern, error)
	SellItem(ctx context.Context, in *ReqSellItem, opts ...grpc.CallOption) (*ResCommon, error)
	SendClientMessage(ctx context.Context, in *ReqSendClientMessage, opts ...grpc.CallOption) (*ResCommon, error)
	SendGiftToCharacter(ctx context.Context, in *ReqSendGiftToCharacter, opts ...grpc.CallOption) (*ResSendGiftToCharacter, error)
	ShopPurchase(ctx context.Context, in *ReqShopPurchase, opts ...grpc.CallOption) (*ResShopPurchase, error)
	Signup(ctx context.Context, in *ReqSignupAccount, opts ...grpc.CallOption) (*ResSignupAccount, error)
	SolveGooglePlayOrder(ctx context.Context, in *ReqSolveGooglePlayOrder, opts ...grpc.CallOption) (*ResCommon, error)
	StartCustomizedContest(ctx context.Context, in *ReqStartCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error)
	StartRoom(ctx context.Context, in *ReqRoomStart, opts ...grpc.CallOption) (*ResCommon, error)
	StopCustomizedContest(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error)
	TakeAttachmentFromMail(ctx context.Context, in *ReqTakeAttachment, opts ...grpc.CallOption) (*ResCommon, error)
	UnfollowCustomizedContest(ctx context.Context, in *ReqTargetCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error)
	UpdateAccountSettings(ctx context.Context, in *ReqUpdateAccountSettings, opts ...grpc.CallOption) (*ResCommon, error)
	UpdateClientValue(ctx context.Context, in *ReqUpdateClientValue, opts ...grpc.CallOption) (*ResCommon, error)
	UpdateCommentSetting(ctx context.Context, in *ReqUpdateCommentSetting, opts ...grpc.CallOption) (*ResCommon, error)
	UpdateIDCardInfo(ctx context.Context, in *ReqUpdateIDCardInfo, opts ...grpc.CallOption) (*ResCommon, error)
	UpdateReadComment(ctx context.Context, in *ReqUpdateReadComment, opts ...grpc.CallOption) (*ResCommon, error)
	UpgradeCharacter(ctx context.Context, in *ReqUpgradeCharacter, opts ...grpc.CallOption) (*ResUpgradeCharacter, error)
	UseBagItem(ctx context.Context, in *ReqUseBagItem, opts ...grpc.CallOption) (*ResCommon, error)
	UseGiftCode(ctx context.Context, in *ReqUseGiftCode, opts ...grpc.CallOption) (*ResUseGiftCode, error)
	UseTitle(ctx context.Context, in *ReqUseTitle, opts ...grpc.CallOption) (*ResCommon, error)
	VerfifyCodeForSecure(ctx context.Context, in *ReqVerifyCodeForSecure, opts ...grpc.CallOption) (*ResVerfiyCodeForSecure, error)
}

type lobbyClient struct {
	cc *grpc.ClientConn
}

func NewLobbyClient(cc *grpc.ClientConn) LobbyClient {
	return &lobbyClient{cc}
}

func (c *lobbyClient) AddCollectedGameRecord(ctx context.Context, in *ReqAddCollectedGameRecord, opts ...grpc.CallOption) (*ResAddCollectedGameRecord, error) {
	out := new(ResAddCollectedGameRecord)
	err := grpc.Invoke(ctx, "/lq.Lobby/addCollectedGameRecord", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ApplyFriend(ctx context.Context, in *ReqApplyFriend, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/applyFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BindAccount(ctx context.Context, in *ReqBindAccount, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/bindAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BindEmail(ctx context.Context, in *ReqBindEmail, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/bindEmail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BindPhoneNumber(ctx context.Context, in *ReqBindPhoneNumber, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/bindPhoneNumber", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BuyFromChestShop(ctx context.Context, in *ReqBuyFromChestShop, opts ...grpc.CallOption) (*ResBuyFromChestShop, error) {
	out := new(ResBuyFromChestShop)
	err := grpc.Invoke(ctx, "/lq.Lobby/buyFromChestShop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BuyFromShop(ctx context.Context, in *ReqBuyFromShop, opts ...grpc.CallOption) (*ResBuyFromShop, error) {
	out := new(ResBuyFromShop)
	err := grpc.Invoke(ctx, "/lq.Lobby/buyFromShop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BuyFromZHP(ctx context.Context, in *ReqBuyFromZHP, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/buyFromZHP", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) BuyShiLian(ctx context.Context, in *ReqBuyShiLian, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/buyShiLian", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CancelGooglePlayOrder(ctx context.Context, in *ReqCancelGooglePlayOrder, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/cancelGooglePlayOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CancelMatch(ctx context.Context, in *ReqCancelMatchQueue, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/cancelMatch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeAvatar(ctx context.Context, in *ReqChangeAvatar, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/changeAvatar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeCharacterSkin(ctx context.Context, in *ReqChangeCharacterSkin, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/changeCharacterSkin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeCharacterView(ctx context.Context, in *ReqChangeCharacterView, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/changeCharacterView", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeCollectedGameRecordRemarks(ctx context.Context, in *ReqChangeCollectedGameRecordRemarks, opts ...grpc.CallOption) (*ResChangeCollectedGameRecordRemarks, error) {
	out := new(ResChangeCollectedGameRecordRemarks)
	err := grpc.Invoke(ctx, "/lq.Lobby/changeCollectedGameRecordRemarks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeCommonView(ctx context.Context, in *ReqChangeCommonView, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/changeCommonView", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ChangeMainCharacter(ctx context.Context, in *ReqChangeMainCharacter, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/changeMainCharacter", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ClientMessage(ctx context.Context, in *ReqClientMessage, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/clientMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CompleteActivityTask(ctx context.Context, in *ReqCompleteActivityTask, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/completeActivityTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ComposeShard(ctx context.Context, in *ReqComposeShard, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/composeShard", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateAlipayAppOrder(ctx context.Context, in *ReqCreateAlipayAppOrder, opts ...grpc.CallOption) (*ResCreateAlipayAppOrder, error) {
	out := new(ResCreateAlipayAppOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createAlipayAppOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateAlipayOrder(ctx context.Context, in *ReqCreateAlipayOrder, opts ...grpc.CallOption) (*ResCreateAlipayOrder, error) {
	out := new(ResCreateAlipayOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createAlipayOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateAlipayScanOrder(ctx context.Context, in *ReqCreateAlipayScanOrder, opts ...grpc.CallOption) (*ResCreateAlipayScanOrder, error) {
	out := new(ResCreateAlipayScanOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createAlipayScanOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateBillingOrder(ctx context.Context, in *ReqCreateBillingOrder, opts ...grpc.CallOption) (*ResCreateBillingOrder, error) {
	out := new(ResCreateBillingOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createBillingOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateENAlipayOrder(ctx context.Context, in *ReqCreateENAlipayOrder, opts ...grpc.CallOption) (*ResCreateENAlipayOrder, error) {
	out := new(ResCreateENAlipayOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createENAlipayOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateENJCBOrder(ctx context.Context, in *ReqCreateENJCBOrder, opts ...grpc.CallOption) (*ResCreateENJCBOrder, error) {
	out := new(ResCreateENJCBOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createENJCBOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateENMasterCardOrder(ctx context.Context, in *ReqCreateENMasterCardOrder, opts ...grpc.CallOption) (*ResCreateENMasterCardOrder, error) {
	out := new(ResCreateENMasterCardOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createENMasterCardOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateENPaypalOrder(ctx context.Context, in *ReqCreateENPaypalOrder, opts ...grpc.CallOption) (*ResCreateENPaypalOrder, error) {
	out := new(ResCreateENPaypalOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createENPaypalOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateENVisaOrder(ctx context.Context, in *ReqCreateENVisaOrder, opts ...grpc.CallOption) (*ResCreateENVisaOrder, error) {
	out := new(ResCreateENVisaOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createENVisaOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateEmailVerifyCode(ctx context.Context, in *ReqCreateEmailVerifyCode, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/createEmailVerifyCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPAuOrder(ctx context.Context, in *ReqCreateJPAuOrder, opts ...grpc.CallOption) (*ResCreateJPAuOrder, error) {
	out := new(ResCreateJPAuOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createJPAuOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPCreditCardOrder(ctx context.Context, in *ReqCreateJPCreditCardOrder, opts ...grpc.CallOption) (*ResCreateJPCreditCardOrder, error) {
	out := new(ResCreateJPCreditCardOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createJPCreditCardOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPDocomoOrder(ctx context.Context, in *ReqCreateJPDocomoOrder, opts ...grpc.CallOption) (*ResCreateJPDocomoOrder, error) {
	out := new(ResCreateJPDocomoOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createJPDocomoOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPPaypalOrder(ctx context.Context, in *ReqCreateJPPaypalOrder, opts ...grpc.CallOption) (*ResCreateJPPaypalOrder, error) {
	out := new(ResCreateJPPaypalOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createJPPaypalOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateJPSoftbankOrder(ctx context.Context, in *ReqCreateJPSoftbankOrder, opts ...grpc.CallOption) (*ResCreateJPSoftbankOrder, error) {
	out := new(ResCreateJPSoftbankOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createJPSoftbankOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateNickname(ctx context.Context, in *ReqCreateNickname, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/createNickname", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreatePhoneVerifyCode(ctx context.Context, in *ReqCreatePhoneVerifyCode, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/createPhoneVerifyCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateRoom(ctx context.Context, in *ReqCreateRoom, opts ...grpc.CallOption) (*ResCreateRoom, error) {
	out := new(ResCreateRoom)
	err := grpc.Invoke(ctx, "/lq.Lobby/createRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateWechatAppOrder(ctx context.Context, in *ReqCreateWechatAppOrder, opts ...grpc.CallOption) (*ResCreateWechatAppOrder, error) {
	out := new(ResCreateWechatAppOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createWechatAppOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateWechatNativeOrder(ctx context.Context, in *ReqCreateWechatNativeOrder, opts ...grpc.CallOption) (*ResCreateWechatNativeOrder, error) {
	out := new(ResCreateWechatNativeOrder)
	err := grpc.Invoke(ctx, "/lq.Lobby/createWechatNativeOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DeleteComment(ctx context.Context, in *ReqDeleteComment, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/deleteComment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DeleteMail(ctx context.Context, in *ReqDeleteMail, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/deleteMail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) DoDailySignIn(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/doDailySignIn", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) EmailLogin(ctx context.Context, in *ReqEmailLogin, opts ...grpc.CallOption) (*ResLogin, error) {
	out := new(ResLogin)
	err := grpc.Invoke(ctx, "/lq.Lobby/emailLogin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) EnterCustomizedContest(ctx context.Context, in *ReqEnterCustomizedContest, opts ...grpc.CallOption) (*ResEnterCustomizedContest, error) {
	out := new(ResEnterCustomizedContest)
	err := grpc.Invoke(ctx, "/lq.Lobby/enterCustomizedContest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ExchangeActivityItem(ctx context.Context, in *ReqExchangeActivityItem, opts ...grpc.CallOption) (*ResExchangeActivityItem, error) {
	out := new(ResExchangeActivityItem)
	err := grpc.Invoke(ctx, "/lq.Lobby/exchangeActivityItem", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ExchangeChestStone(ctx context.Context, in *ReqExchangeCurrency, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/exchangeChestStone", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ExchangeCurrency(ctx context.Context, in *ReqExchangeCurrency, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/exchangeCurrency", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountActivityData(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountActivityData, error) {
	out := new(ResAccountActivityData)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchAccountActivityData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountCharacterInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountCharacterInfo, error) {
	out := new(ResAccountCharacterInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchAccountCharacterInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountInfo(ctx context.Context, in *ReqAccountInfo, opts ...grpc.CallOption) (*ResAccountInfo, error) {
	out := new(ResAccountInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchAccountInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountSettings(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAccountSettings, error) {
	out := new(ResAccountSettings)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchAccountSettings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountState(ctx context.Context, in *ReqAccountList, opts ...grpc.CallOption) (*ResAccountStates, error) {
	out := new(ResAccountStates)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchAccountState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAccountStatisticInfo(ctx context.Context, in *ReqAccountStatisticInfo, opts ...grpc.CallOption) (*ResAccountStatisticInfo, error) {
	out := new(ResAccountStatisticInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchAccountStatisticInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAchievement(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAchievement, error) {
	out := new(ResAchievement)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchAchievement", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchActivityList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResActivityList, error) {
	out := new(ResActivityList)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchActivityList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchAnnouncement(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResAnnouncement, error) {
	out := new(ResAnnouncement)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchAnnouncement", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchBagInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResBagInfo, error) {
	out := new(ResBagInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchBagInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCharacterInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCharacterInfo, error) {
	out := new(ResCharacterInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCharacterInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchClientValue(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResClientValue, error) {
	out := new(ResClientValue)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchClientValue", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCollectedGameRecordList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCollectedGameRecordList, error) {
	out := new(ResCollectedGameRecordList)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCollectedGameRecordList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCommentContent(ctx context.Context, in *ReqFetchCommentContent, opts ...grpc.CallOption) (*ResFetchCommentContent, error) {
	out := new(ResFetchCommentContent)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCommentContent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCommentList(ctx context.Context, in *ReqFetchCommentList, opts ...grpc.CallOption) (*ResFetchCommentList, error) {
	out := new(ResFetchCommentList)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCommentList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCommentSetting(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommentSetting, error) {
	out := new(ResCommentSetting)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCommentSetting", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCommonView(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommonView, error) {
	out := new(ResCommonView)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCommonView", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchConnectionInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResConnectionInfo, error) {
	out := new(ResConnectionInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchConnectionInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCurrentMatchInfo(ctx context.Context, in *ReqCurrentMatchInfo, opts ...grpc.CallOption) (*ResCurrentMatchInfo, error) {
	out := new(ResCurrentMatchInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCurrentMatchInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestByContestId(ctx context.Context, in *ReqFetchCustomizedContestByContestId, opts ...grpc.CallOption) (*ResFetchCustomizedContestByContestId, error) {
	out := new(ResFetchCustomizedContestByContestId)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestByContestId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestExtendInfo(ctx context.Context, in *ReqFetchCustomizedContestExtendInfo, opts ...grpc.CallOption) (*ResFetchCustomizedContestExtendInfo, error) {
	out := new(ResFetchCustomizedContestExtendInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestExtendInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestGameLiveList(ctx context.Context, in *ReqFetchCustomizedContestGameLiveList, opts ...grpc.CallOption) (*ResFetchCustomizedContestGameLiveList, error) {
	out := new(ResFetchCustomizedContestGameLiveList)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestGameLiveList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestGameRecords(ctx context.Context, in *ReqFetchCustomizedContestGameRecords, opts ...grpc.CallOption) (*ResFetchCustomizedContestGameRecords, error) {
	out := new(ResFetchCustomizedContestGameRecords)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestGameRecords", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestList(ctx context.Context, in *ReqFetchCustomizedContestList, opts ...grpc.CallOption) (*ResFetchCustomizedContestList, error) {
	out := new(ResFetchCustomizedContestList)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchCustomizedContestOnlineInfo(ctx context.Context, in *ReqFetchCustomizedContestOnlineInfo, opts ...grpc.CallOption) (*ResFetchCustomizedContestOnlineInfo, error) {
	out := new(ResFetchCustomizedContestOnlineInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchCustomizedContestOnlineInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchDailySignInInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResDailySignInInfo, error) {
	out := new(ResDailySignInInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchDailySignInInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchDailyTask(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResDailyTask, error) {
	out := new(ResDailyTask)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchDailyTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchFriendApplyList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFriendApplyList, error) {
	out := new(ResFriendApplyList)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchFriendApplyList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchFriendList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResFriendList, error) {
	out := new(ResFriendList)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchFriendList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameLiveInfo(ctx context.Context, in *ReqGameLiveInfo, opts ...grpc.CallOption) (*ResGameLiveInfo, error) {
	out := new(ResGameLiveInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchGameLiveInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameLiveLeftSegment(ctx context.Context, in *ReqGameLiveLeftSegment, opts ...grpc.CallOption) (*ResGameLiveLeftSegment, error) {
	out := new(ResGameLiveLeftSegment)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchGameLiveLeftSegment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameLiveList(ctx context.Context, in *ReqGameLiveList, opts ...grpc.CallOption) (*ResGameLiveList, error) {
	out := new(ResGameLiveList)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchGameLiveList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameRecord(ctx context.Context, in *ReqGameRecord, opts ...grpc.CallOption) (*ResGameRecord, error) {
	out := new(ResGameRecord)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchGameRecord", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameRecordList(ctx context.Context, in *ReqGameRecordList, opts ...grpc.CallOption) (*ResGameRecordList, error) {
	out := new(ResGameRecordList)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchGameRecordList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchGameRecordsDetail(ctx context.Context, in *ReqGameRecordsDetail, opts ...grpc.CallOption) (*ResGameRecordsDetail, error) {
	out := new(ResGameRecordsDetail)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchGameRecordsDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchIDCardInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResIDCardInfo, error) {
	out := new(ResIDCardInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchIDCardInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchLevelLeaderboard(ctx context.Context, in *ReqLevelLeaderboard, opts ...grpc.CallOption) (*ResLevelLeaderboard, error) {
	out := new(ResLevelLeaderboard)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchLevelLeaderboard", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchMailInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResMailInfo, error) {
	out := new(ResMailInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchMailInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchMisc(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResMisc, error) {
	out := new(ResMisc)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchMisc", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchModNicknameTime(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResModNicknameTime, error) {
	out := new(ResModNicknameTime)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchModNicknameTime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchMultiAccountBrief(ctx context.Context, in *ReqMultiAccountId, opts ...grpc.CallOption) (*ResMultiAccountBrief, error) {
	out := new(ResMultiAccountBrief)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchMultiAccountBrief", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchPlatformProducts(ctx context.Context, in *ReqPlatformBillingProducts, opts ...grpc.CallOption) (*ResPlatformBillingProducts, error) {
	out := new(ResPlatformBillingProducts)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchPlatformProducts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchRankPointLeaderboard(ctx context.Context, in *ReqFetchRankPointLeaderboard, opts ...grpc.CallOption) (*ResFetchRankPointLeaderboard, error) {
	out := new(ResFetchRankPointLeaderboard)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchRankPointLeaderboard", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchReviveCoinInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResReviveCoinInfo, error) {
	out := new(ResReviveCoinInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchReviveCoinInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchRollingNotice(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ReqRollingNotice, error) {
	out := new(ReqRollingNotice)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchRollingNotice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResSelfRoom, error) {
	out := new(ResSelfRoom)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchServerSettings(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResServerSettings, error) {
	out := new(ResServerSettings)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchServerSettings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchServerTime(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResServerTime, error) {
	out := new(ResServerTime)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchServerTime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchShopInfo(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResShopInfo, error) {
	out := new(ResShopInfo)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchShopInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchTitleList(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResTitleList, error) {
	out := new(ResTitleList)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchTitleList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FetchVipReward(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResVipReward, error) {
	out := new(ResVipReward)
	err := grpc.Invoke(ctx, "/lq.Lobby/fetchVipReward", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) FollowCustomizedContest(ctx context.Context, in *ReqTargetCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/followCustomizedContest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GainAccumulatedPointActivityReward(ctx context.Context, in *ReqGainAccumulatedPointActivityReward, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/gainAccumulatedPointActivityReward", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GainRankPointReward(ctx context.Context, in *ReqGainRankPointReward, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/gainRankPointReward", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GainReviveCoin(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/gainReviveCoin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GainVipReward(ctx context.Context, in *ReqGainVipReward, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/gainVipReward", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GameMasterCommand(ctx context.Context, in *ReqGMCommand, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/gameMasterCommand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) GoNextShiLian(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/goNextShiLian", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) HandleFriendApply(ctx context.Context, in *ReqHandleFriendApply, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/handleFriendApply", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Heatbeat(ctx context.Context, in *ReqHeatBeat, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/heatbeat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) JoinCustomizedContestChatRoom(ctx context.Context, in *ReqJoinCustomizedContestChatRoom, opts ...grpc.CallOption) (*ResJoinCustomizedContestChatRoom, error) {
	out := new(ResJoinCustomizedContestChatRoom)
	err := grpc.Invoke(ctx, "/lq.Lobby/joinCustomizedContestChatRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) JoinRoom(ctx context.Context, in *ReqJoinRoom, opts ...grpc.CallOption) (*ResJoinRoom, error) {
	out := new(ResJoinRoom)
	err := grpc.Invoke(ctx, "/lq.Lobby/joinRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) KickPlayer(ctx context.Context, in *ReqRoomKick, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/kickPlayer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LeaveComment(ctx context.Context, in *ReqLeaveComment, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/leaveComment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LeaveCustomizedContest(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/leaveCustomizedContest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LeaveCustomizedContestChatRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/leaveCustomizedContestChatRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) LeaveRoom(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/leaveRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Login(ctx context.Context, in *ReqLogin, opts ...grpc.CallOption) (*ResLogin, error) {
	out := new(ResLogin)
	err := grpc.Invoke(ctx, "/lq.Lobby/login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Logout(ctx context.Context, in *ReqLogout, opts ...grpc.CallOption) (*ResLogout, error) {
	out := new(ResLogout)
	err := grpc.Invoke(ctx, "/lq.Lobby/logout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) MatchGame(ctx context.Context, in *ReqJoinMatchQueue, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/matchGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) MatchShiLian(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/matchShiLian", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ModifyBirthday(ctx context.Context, in *ReqModifyBirthday, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/modifyBirthday", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ModifyNickname(ctx context.Context, in *ReqModifyNickname, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/modifyNickname", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ModifyPassword(ctx context.Context, in *ReqModifyPassword, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/modifyPassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ModifyRoom(ctx context.Context, in *ReqModifyRoom, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/modifyRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ModifySignature(ctx context.Context, in *ReqModifySignature, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/modifySignature", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Oauth2Auth(ctx context.Context, in *ReqOauth2Auth, opts ...grpc.CallOption) (*ResOauth2Auth, error) {
	out := new(ResOauth2Auth)
	err := grpc.Invoke(ctx, "/lq.Lobby/oauth2Auth", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Oauth2Check(ctx context.Context, in *ReqOauth2Check, opts ...grpc.CallOption) (*ResOauth2Check, error) {
	out := new(ResOauth2Check)
	err := grpc.Invoke(ctx, "/lq.Lobby/oauth2Check", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Oauth2Login(ctx context.Context, in *ReqOauth2Login, opts ...grpc.CallOption) (*ResLogin, error) {
	out := new(ResLogin)
	err := grpc.Invoke(ctx, "/lq.Lobby/oauth2Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Oauth2Signup(ctx context.Context, in *ReqOauth2Signup, opts ...grpc.CallOption) (*ResOauth2Signup, error) {
	out := new(ResOauth2Signup)
	err := grpc.Invoke(ctx, "/lq.Lobby/oauth2Signup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) OpenChest(ctx context.Context, in *ReqOpenChest, opts ...grpc.CallOption) (*ResOpenChest, error) {
	out := new(ResOpenChest)
	err := grpc.Invoke(ctx, "/lq.Lobby/openChest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) OpenManualItem(ctx context.Context, in *ReqOpenManualItem, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/openManualItem", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) OpenRandomRewardItem(ctx context.Context, in *ReqOpenRandomRewardItem, opts ...grpc.CallOption) (*ResOpenRandomRewardItem, error) {
	out := new(ResOpenRandomRewardItem)
	err := grpc.Invoke(ctx, "/lq.Lobby/openRandomRewardItem", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReadAnnouncement(ctx context.Context, in *ReqReadAnnouncement, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/readAnnouncement", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReadMail(ctx context.Context, in *ReqReadMail, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/readMail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ReadyPlay(ctx context.Context, in *ReqRoomReady, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/readyPlay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RefreshDailyTask(ctx context.Context, in *ReqRefreshDailyTask, opts ...grpc.CallOption) (*ResRefreshDailyTask, error) {
	out := new(ResRefreshDailyTask)
	err := grpc.Invoke(ctx, "/lq.Lobby/refreshDailyTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RefreshZHPShop(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResRefreshZHPShop, error) {
	out := new(ResRefreshZHPShop)
	err := grpc.Invoke(ctx, "/lq.Lobby/refreshZHPShop", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RemoveCollectedGameRecord(ctx context.Context, in *ReqRemoveCollectedGameRecord, opts ...grpc.CallOption) (*ResRemoveCollectedGameRecord, error) {
	out := new(ResRemoveCollectedGameRecord)
	err := grpc.Invoke(ctx, "/lq.Lobby/removeCollectedGameRecord", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) RemoveFriend(ctx context.Context, in *ReqRemoveFriend, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/removeFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SayChatMessage(ctx context.Context, in *ReqSayChatMessage, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/sayChatMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SearchAccountById(ctx context.Context, in *ReqSearchAccountById, opts ...grpc.CallOption) (*ResSearchAccountById, error) {
	out := new(ResSearchAccountById)
	err := grpc.Invoke(ctx, "/lq.Lobby/searchAccountById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SearchAccountByPattern(ctx context.Context, in *ReqSearchAccountByPattern, opts ...grpc.CallOption) (*ResSearchAccountByPattern, error) {
	out := new(ResSearchAccountByPattern)
	err := grpc.Invoke(ctx, "/lq.Lobby/searchAccountByPattern", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SellItem(ctx context.Context, in *ReqSellItem, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/sellItem", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SendClientMessage(ctx context.Context, in *ReqSendClientMessage, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/sendClientMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SendGiftToCharacter(ctx context.Context, in *ReqSendGiftToCharacter, opts ...grpc.CallOption) (*ResSendGiftToCharacter, error) {
	out := new(ResSendGiftToCharacter)
	err := grpc.Invoke(ctx, "/lq.Lobby/sendGiftToCharacter", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) ShopPurchase(ctx context.Context, in *ReqShopPurchase, opts ...grpc.CallOption) (*ResShopPurchase, error) {
	out := new(ResShopPurchase)
	err := grpc.Invoke(ctx, "/lq.Lobby/shopPurchase", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) Signup(ctx context.Context, in *ReqSignupAccount, opts ...grpc.CallOption) (*ResSignupAccount, error) {
	out := new(ResSignupAccount)
	err := grpc.Invoke(ctx, "/lq.Lobby/signup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) SolveGooglePlayOrder(ctx context.Context, in *ReqSolveGooglePlayOrder, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/solveGooglePlayOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) StartCustomizedContest(ctx context.Context, in *ReqStartCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/startCustomizedContest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) StartRoom(ctx context.Context, in *ReqRoomStart, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/startRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) StopCustomizedContest(ctx context.Context, in *ReqCommon, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/stopCustomizedContest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) TakeAttachmentFromMail(ctx context.Context, in *ReqTakeAttachment, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/takeAttachmentFromMail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UnfollowCustomizedContest(ctx context.Context, in *ReqTargetCustomizedContest, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/unfollowCustomizedContest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpdateAccountSettings(ctx context.Context, in *ReqUpdateAccountSettings, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/updateAccountSettings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpdateClientValue(ctx context.Context, in *ReqUpdateClientValue, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/updateClientValue", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpdateCommentSetting(ctx context.Context, in *ReqUpdateCommentSetting, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/updateCommentSetting", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpdateIDCardInfo(ctx context.Context, in *ReqUpdateIDCardInfo, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/updateIDCardInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpdateReadComment(ctx context.Context, in *ReqUpdateReadComment, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/updateReadComment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UpgradeCharacter(ctx context.Context, in *ReqUpgradeCharacter, opts ...grpc.CallOption) (*ResUpgradeCharacter, error) {
	out := new(ResUpgradeCharacter)
	err := grpc.Invoke(ctx, "/lq.Lobby/upgradeCharacter", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UseBagItem(ctx context.Context, in *ReqUseBagItem, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/useBagItem", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UseGiftCode(ctx context.Context, in *ReqUseGiftCode, opts ...grpc.CallOption) (*ResUseGiftCode, error) {
	out := new(ResUseGiftCode)
	err := grpc.Invoke(ctx, "/lq.Lobby/useGiftCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) UseTitle(ctx context.Context, in *ReqUseTitle, opts ...grpc.CallOption) (*ResCommon, error) {
	out := new(ResCommon)
	err := grpc.Invoke(ctx, "/lq.Lobby/useTitle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) VerfifyCodeForSecure(ctx context.Context, in *ReqVerifyCodeForSecure, opts ...grpc.CallOption) (*ResVerfiyCodeForSecure, error) {
	out := new(ResVerfiyCodeForSecure)
	err := grpc.Invoke(ctx, "/lq.Lobby/verfifyCodeForSecure", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Lobby service

type LobbyServer interface {
	AddCollectedGameRecord(context.Context, *ReqAddCollectedGameRecord) (*ResAddCollectedGameRecord, error)
	ApplyFriend(context.Context, *ReqApplyFriend) (*ResCommon, error)
	BindAccount(context.Context, *ReqBindAccount) (*ResCommon, error)
	BindEmail(context.Context, *ReqBindEmail) (*ResCommon, error)
	BindPhoneNumber(context.Context, *ReqBindPhoneNumber) (*ResCommon, error)
	BuyFromChestShop(context.Context, *ReqBuyFromChestShop) (*ResBuyFromChestShop, error)
	BuyFromShop(context.Context, *ReqBuyFromShop) (*ResBuyFromShop, error)
	BuyFromZHP(context.Context, *ReqBuyFromZHP) (*ResCommon, error)
	BuyShiLian(context.Context, *ReqBuyShiLian) (*ResCommon, error)
	CancelGooglePlayOrder(context.Context, *ReqCancelGooglePlayOrder) (*ResCommon, error)
	CancelMatch(context.Context, *ReqCancelMatchQueue) (*ResCommon, error)
	ChangeAvatar(context.Context, *ReqChangeAvatar) (*ResCommon, error)
	ChangeCharacterSkin(context.Context, *ReqChangeCharacterSkin) (*ResCommon, error)
	ChangeCharacterView(context.Context, *ReqChangeCharacterView) (*ResCommon, error)
	ChangeCollectedGameRecordRemarks(context.Context, *ReqChangeCollectedGameRecordRemarks) (*ResChangeCollectedGameRecordRemarks, error)
	ChangeCommonView(context.Context, *ReqChangeCommonView) (*ResCommon, error)
	ChangeMainCharacter(context.Context, *ReqChangeMainCharacter) (*ResCommon, error)
	ClientMessage(context.Context, *ReqClientMessage) (*ResCommon, error)
	CompleteActivityTask(context.Context, *ReqCompleteActivityTask) (*ResCommon, error)
	ComposeShard(context.Context, *ReqComposeShard) (*ResCommon, error)
	CreateAlipayAppOrder(context.Context, *ReqCreateAlipayAppOrder) (*ResCreateAlipayAppOrder, error)
	CreateAlipayOrder(context.Context, *ReqCreateAlipayOrder) (*ResCreateAlipayOrder, error)
	CreateAlipayScanOrder(context.Context, *ReqCreateAlipayScanOrder) (*ResCreateAlipayScanOrder, error)
	CreateBillingOrder(context.Context, *ReqCreateBillingOrder) (*ResCreateBillingOrder, error)
	CreateENAlipayOrder(context.Context, *ReqCreateENAlipayOrder) (*ResCreateENAlipayOrder, error)
	CreateENJCBOrder(context.Context, *ReqCreateENJCBOrder) (*ResCreateENJCBOrder, error)
	CreateENMasterCardOrder(context.Context, *ReqCreateENMasterCardOrder) (*ResCreateENMasterCardOrder, error)
	CreateENPaypalOrder(context.Context, *ReqCreateENPaypalOrder) (*ResCreateENPaypalOrder, error)
	CreateENVisaOrder(context.Context, *ReqCreateENVisaOrder) (*ResCreateENVisaOrder, error)
	CreateEmailVerifyCode(context.Context, *ReqCreateEmailVerifyCode) (*ResCommon, error)
	CreateJPAuOrder(context.Context, *ReqCreateJPAuOrder) (*ResCreateJPAuOrder, error)
	CreateJPCreditCardOrder(context.Context, *ReqCreateJPCreditCardOrder) (*ResCreateJPCreditCardOrder, error)
	CreateJPDocomoOrder(context.Context, *ReqCreateJPDocomoOrder) (*ResCreateJPDocomoOrder, error)
	CreateJPPaypalOrder(context.Context, *ReqCreateJPPaypalOrder) (*ResCreateJPPaypalOrder, error)
	CreateJPSoftbankOrder(context.Context, *ReqCreateJPSoftbankOrder) (*ResCreateJPSoftbankOrder, error)
	CreateNickname(context.Context, *ReqCreateNickname) (*ResCommon, error)
	CreatePhoneVerifyCode(context.Context, *ReqCreatePhoneVerifyCode) (*ResCommon, error)
	CreateRoom(context.Context, *ReqCreateRoom) (*ResCreateRoom, error)
	CreateWechatAppOrder(context.Context, *ReqCreateWechatAppOrder) (*ResCreateWechatAppOrder, error)
	CreateWechatNativeOrder(context.Context, *ReqCreateWechatNativeOrder) (*ResCreateWechatNativeOrder, error)
	DeleteComment(context.Context, *ReqDeleteComment) (*ResCommon, error)
	DeleteMail(context.Context, *ReqDeleteMail) (*ResCommon, error)
	DoDailySignIn(context.Context, *ReqCommon) (*ResCommon, error)
	EmailLogin(context.Context, *ReqEmailLogin) (*ResLogin, error)
	EnterCustomizedContest(context.Context, *ReqEnterCustomizedContest) (*ResEnterCustomizedContest, error)
	ExchangeActivityItem(context.Context, *ReqExchangeActivityItem) (*ResExchangeActivityItem, error)
	ExchangeChestStone(context.Context, *ReqExchangeCurrency) (*ResCommon, error)
	ExchangeCurrency(context.Context, *ReqExchangeCurrency) (*ResCommon, error)
	FetchAccountActivityData(context.Context, *ReqCommon) (*ResAccountActivityData, error)
	FetchAccountCharacterInfo(context.Context, *ReqCommon) (*ResAccountCharacterInfo, error)
	FetchAccountInfo(context.Context, *ReqAccountInfo) (*ResAccountInfo, error)
	FetchAccountSettings(context.Context, *ReqCommon) (*ResAccountSettings, error)
	FetchAccountState(context.Context, *ReqAccountList) (*ResAccountStates, error)
	FetchAccountStatisticInfo(context.Context, *ReqAccountStatisticInfo) (*ResAccountStatisticInfo, error)
	FetchAchievement(context.Context, *ReqCommon) (*ResAchievement, error)
	FetchActivityList(context.Context, *ReqCommon) (*ResActivityList, error)
	FetchAnnouncement(context.Context, *ReqCommon) (*ResAnnouncement, error)
	FetchBagInfo(context.Context, *ReqCommon) (*ResBagInfo, error)
	FetchCharacterInfo(context.Context, *ReqCommon) (*ResCharacterInfo, error)
	FetchClientValue(context.Context, *ReqCommon) (*ResClientValue, error)
	FetchCollectedGameRecordList(context.Context, *ReqCommon) (*ResCollectedGameRecordList, error)
	FetchCommentContent(context.Context, *ReqFetchCommentContent) (*ResFetchCommentContent, error)
	FetchCommentList(context.Context, *ReqFetchCommentList) (*ResFetchCommentList, error)
	FetchCommentSetting(context.Context, *ReqCommon) (*ResCommentSetting, error)
	FetchCommonView(context.Context, *ReqCommon) (*ResCommonView, error)
	FetchConnectionInfo(context.Context, *ReqCommon) (*ResConnectionInfo, error)
	FetchCurrentMatchInfo(context.Context, *ReqCurrentMatchInfo) (*ResCurrentMatchInfo, error)
	FetchCustomizedContestByContestId(context.Context, *ReqFetchCustomizedContestByContestId) (*ResFetchCustomizedContestByContestId, error)
	FetchCustomizedContestExtendInfo(context.Context, *ReqFetchCustomizedContestExtendInfo) (*ResFetchCustomizedContestExtendInfo, error)
	FetchCustomizedContestGameLiveList(context.Context, *ReqFetchCustomizedContestGameLiveList) (*ResFetchCustomizedContestGameLiveList, error)
	FetchCustomizedContestGameRecords(context.Context, *ReqFetchCustomizedContestGameRecords) (*ResFetchCustomizedContestGameRecords, error)
	FetchCustomizedContestList(context.Context, *ReqFetchCustomizedContestList) (*ResFetchCustomizedContestList, error)
	FetchCustomizedContestOnlineInfo(context.Context, *ReqFetchCustomizedContestOnlineInfo) (*ResFetchCustomizedContestOnlineInfo, error)
	FetchDailySignInInfo(context.Context, *ReqCommon) (*ResDailySignInInfo, error)
	FetchDailyTask(context.Context, *ReqCommon) (*ResDailyTask, error)
	FetchFriendApplyList(context.Context, *ReqCommon) (*ResFriendApplyList, error)
	FetchFriendList(context.Context, *ReqCommon) (*ResFriendList, error)
	FetchGameLiveInfo(context.Context, *ReqGameLiveInfo) (*ResGameLiveInfo, error)
	FetchGameLiveLeftSegment(context.Context, *ReqGameLiveLeftSegment) (*ResGameLiveLeftSegment, error)
	FetchGameLiveList(context.Context, *ReqGameLiveList) (*ResGameLiveList, error)
	FetchGameRecord(context.Context, *ReqGameRecord) (*ResGameRecord, error)
	FetchGameRecordList(context.Context, *ReqGameRecordList) (*ResGameRecordList, error)
	FetchGameRecordsDetail(context.Context, *ReqGameRecordsDetail) (*ResGameRecordsDetail, error)
	FetchIDCardInfo(context.Context, *ReqCommon) (*ResIDCardInfo, error)
	FetchLevelLeaderboard(context.Context, *ReqLevelLeaderboard) (*ResLevelLeaderboard, error)
	FetchMailInfo(context.Context, *ReqCommon) (*ResMailInfo, error)
	FetchMisc(context.Context, *ReqCommon) (*ResMisc, error)
	FetchModNicknameTime(context.Context, *ReqCommon) (*ResModNicknameTime, error)
	FetchMultiAccountBrief(context.Context, *ReqMultiAccountId) (*ResMultiAccountBrief, error)
	FetchPlatformProducts(context.Context, *ReqPlatformBillingProducts) (*ResPlatformBillingProducts, error)
	FetchRankPointLeaderboard(context.Context, *ReqFetchRankPointLeaderboard) (*ResFetchRankPointLeaderboard, error)
	FetchReviveCoinInfo(context.Context, *ReqCommon) (*ResReviveCoinInfo, error)
	FetchRollingNotice(context.Context, *ReqCommon) (*ReqRollingNotice, error)
	FetchRoom(context.Context, *ReqCommon) (*ResSelfRoom, error)
	FetchServerSettings(context.Context, *ReqCommon) (*ResServerSettings, error)
	FetchServerTime(context.Context, *ReqCommon) (*ResServerTime, error)
	FetchShopInfo(context.Context, *ReqCommon) (*ResShopInfo, error)
	FetchTitleList(context.Context, *ReqCommon) (*ResTitleList, error)
	FetchVipReward(context.Context, *ReqCommon) (*ResVipReward, error)
	FollowCustomizedContest(context.Context, *ReqTargetCustomizedContest) (*ResCommon, error)
	GainAccumulatedPointActivityReward(context.Context, *ReqGainAccumulatedPointActivityReward) (*ResCommon, error)
	GainRankPointReward(context.Context, *ReqGainRankPointReward) (*ResCommon, error)
	GainReviveCoin(context.Context, *ReqCommon) (*ResCommon, error)
	GainVipReward(context.Context, *ReqGainVipReward) (*ResCommon, error)
	GameMasterCommand(context.Context, *ReqGMCommand) (*ResCommon, error)
	GoNextShiLian(context.Context, *ReqCommon) (*ResCommon, error)
	HandleFriendApply(context.Context, *ReqHandleFriendApply) (*ResCommon, error)
	Heatbeat(context.Context, *ReqHeatBeat) (*ResCommon, error)
	JoinCustomizedContestChatRoom(context.Context, *ReqJoinCustomizedContestChatRoom) (*ResJoinCustomizedContestChatRoom, error)
	JoinRoom(context.Context, *ReqJoinRoom) (*ResJoinRoom, error)
	KickPlayer(context.Context, *ReqRoomKick) (*ResCommon, error)
	LeaveComment(context.Context, *ReqLeaveComment) (*ResCommon, error)
	LeaveCustomizedContest(context.Context, *ReqCommon) (*ResCommon, error)
	LeaveCustomizedContestChatRoom(context.Context, *ReqCommon) (*ResCommon, error)
	LeaveRoom(context.Context, *ReqCommon) (*ResCommon, error)
	Login(context.Context, *ReqLogin) (*ResLogin, error)
	Logout(context.Context, *ReqLogout) (*ResLogout, error)
	MatchGame(context.Context, *ReqJoinMatchQueue) (*ResCommon, error)
	MatchShiLian(context.Context, *ReqCommon) (*ResCommon, error)
	ModifyBirthday(context.Context, *ReqModifyBirthday) (*ResCommon, error)
	ModifyNickname(context.Context, *ReqModifyNickname) (*ResCommon, error)
	ModifyPassword(context.Context, *ReqModifyPassword) (*ResCommon, error)
	ModifyRoom(context.Context, *ReqModifyRoom) (*ResCommon, error)
	ModifySignature(context.Context, *ReqModifySignature) (*ResCommon, error)
	Oauth2Auth(context.Context, *ReqOauth2Auth) (*ResOauth2Auth, error)
	Oauth2Check(context.Context, *ReqOauth2Check) (*ResOauth2Check, error)
	Oauth2Login(context.Context, *ReqOauth2Login) (*ResLogin, error)
	Oauth2Signup(context.Context, *ReqOauth2Signup) (*ResOauth2Signup, error)
	OpenChest(context.Context, *ReqOpenChest) (*ResOpenChest, error)
	OpenManualItem(context.Context, *ReqOpenManualItem) (*ResCommon, error)
	OpenRandomRewardItem(context.Context, *ReqOpenRandomRewardItem) (*ResOpenRandomRewardItem, error)
	ReadAnnouncement(context.Context, *ReqReadAnnouncement) (*ResCommon, error)
	ReadMail(context.Context, *ReqReadMail) (*ResCommon, error)
	ReadyPlay(context.Context, *ReqRoomReady) (*ResCommon, error)
	RefreshDailyTask(context.Context, *ReqRefreshDailyTask) (*ResRefreshDailyTask, error)
	RefreshZHPShop(context.Context, *ReqCommon) (*ResRefreshZHPShop, error)
	RemoveCollectedGameRecord(context.Context, *ReqRemoveCollectedGameRecord) (*ResRemoveCollectedGameRecord, error)
	RemoveFriend(context.Context, *ReqRemoveFriend) (*ResCommon, error)
	SayChatMessage(context.Context, *ReqSayChatMessage) (*ResCommon, error)
	SearchAccountById(context.Context, *ReqSearchAccountById) (*ResSearchAccountById, error)
	SearchAccountByPattern(context.Context, *ReqSearchAccountByPattern) (*ResSearchAccountByPattern, error)
	SellItem(context.Context, *ReqSellItem) (*ResCommon, error)
	SendClientMessage(context.Context, *ReqSendClientMessage) (*ResCommon, error)
	SendGiftToCharacter(context.Context, *ReqSendGiftToCharacter) (*ResSendGiftToCharacter, error)
	ShopPurchase(context.Context, *ReqShopPurchase) (*ResShopPurchase, error)
	Signup(context.Context, *ReqSignupAccount) (*ResSignupAccount, error)
	SolveGooglePlayOrder(context.Context, *ReqSolveGooglePlayOrder) (*ResCommon, error)
	StartCustomizedContest(context.Context, *ReqStartCustomizedContest) (*ResCommon, error)
	StartRoom(context.Context, *ReqRoomStart) (*ResCommon, error)
	StopCustomizedContest(context.Context, *ReqCommon) (*ResCommon, error)
	TakeAttachmentFromMail(context.Context, *ReqTakeAttachment) (*ResCommon, error)
	UnfollowCustomizedContest(context.Context, *ReqTargetCustomizedContest) (*ResCommon, error)
	UpdateAccountSettings(context.Context, *ReqUpdateAccountSettings) (*ResCommon, error)
	UpdateClientValue(context.Context, *ReqUpdateClientValue) (*ResCommon, error)
	UpdateCommentSetting(context.Context, *ReqUpdateCommentSetting) (*ResCommon, error)
	UpdateIDCardInfo(context.Context, *ReqUpdateIDCardInfo) (*ResCommon, error)
	UpdateReadComment(context.Context, *ReqUpdateReadComment) (*ResCommon, error)
	UpgradeCharacter(context.Context, *ReqUpgradeCharacter) (*ResUpgradeCharacter, error)
	UseBagItem(context.Context, *ReqUseBagItem) (*ResCommon, error)
	UseGiftCode(context.Context, *ReqUseGiftCode) (*ResUseGiftCode, error)
	UseTitle(context.Context, *ReqUseTitle) (*ResCommon, error)
	VerfifyCodeForSecure(context.Context, *ReqVerifyCodeForSecure) (*ResVerfiyCodeForSecure, error)
}

func RegisterLobbyServer(s *grpc.Server, srv LobbyServer) {
	s.RegisterService(&_Lobby_serviceDesc, srv)
}

func _Lobby_AddCollectedGameRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAddCollectedGameRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).AddCollectedGameRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/AddCollectedGameRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).AddCollectedGameRecord(ctx, req.(*ReqAddCollectedGameRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ApplyFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqApplyFriend)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ApplyFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ApplyFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ApplyFriend(ctx, req.(*ReqApplyFriend))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BindAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBindAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BindAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BindAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BindAccount(ctx, req.(*ReqBindAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BindEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBindEmail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BindEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BindEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BindEmail(ctx, req.(*ReqBindEmail))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BindPhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBindPhoneNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BindPhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BindPhoneNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BindPhoneNumber(ctx, req.(*ReqBindPhoneNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BuyFromChestShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBuyFromChestShop)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BuyFromChestShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BuyFromChestShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BuyFromChestShop(ctx, req.(*ReqBuyFromChestShop))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BuyFromShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBuyFromShop)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BuyFromShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BuyFromShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BuyFromShop(ctx, req.(*ReqBuyFromShop))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BuyFromZHP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBuyFromZHP)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BuyFromZHP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BuyFromZHP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BuyFromZHP(ctx, req.(*ReqBuyFromZHP))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_BuyShiLian_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBuyShiLian)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).BuyShiLian(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/BuyShiLian",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).BuyShiLian(ctx, req.(*ReqBuyShiLian))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CancelGooglePlayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCancelGooglePlayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CancelGooglePlayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CancelGooglePlayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CancelGooglePlayOrder(ctx, req.(*ReqCancelGooglePlayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CancelMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCancelMatchQueue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CancelMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CancelMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CancelMatch(ctx, req.(*ReqCancelMatchQueue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeAvatar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeAvatar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeAvatar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeAvatar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeAvatar(ctx, req.(*ReqChangeAvatar))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeCharacterSkin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeCharacterSkin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeCharacterSkin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeCharacterSkin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeCharacterSkin(ctx, req.(*ReqChangeCharacterSkin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeCharacterView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeCharacterView)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeCharacterView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeCharacterView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeCharacterView(ctx, req.(*ReqChangeCharacterView))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeCollectedGameRecordRemarks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeCollectedGameRecordRemarks)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeCollectedGameRecordRemarks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeCollectedGameRecordRemarks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeCollectedGameRecordRemarks(ctx, req.(*ReqChangeCollectedGameRecordRemarks))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeCommonView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeCommonView)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeCommonView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeCommonView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeCommonView(ctx, req.(*ReqChangeCommonView))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ChangeMainCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqChangeMainCharacter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ChangeMainCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ChangeMainCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ChangeMainCharacter(ctx, req.(*ReqChangeMainCharacter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ClientMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqClientMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ClientMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ClientMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ClientMessage(ctx, req.(*ReqClientMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CompleteActivityTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCompleteActivityTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CompleteActivityTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CompleteActivityTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CompleteActivityTask(ctx, req.(*ReqCompleteActivityTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ComposeShard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqComposeShard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ComposeShard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ComposeShard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ComposeShard(ctx, req.(*ReqComposeShard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateAlipayAppOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateAlipayAppOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateAlipayAppOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateAlipayAppOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateAlipayAppOrder(ctx, req.(*ReqCreateAlipayAppOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateAlipayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateAlipayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateAlipayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateAlipayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateAlipayOrder(ctx, req.(*ReqCreateAlipayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateAlipayScanOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateAlipayScanOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateAlipayScanOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateAlipayScanOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateAlipayScanOrder(ctx, req.(*ReqCreateAlipayScanOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateBillingOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateBillingOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateBillingOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateBillingOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateBillingOrder(ctx, req.(*ReqCreateBillingOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateENAlipayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateENAlipayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateENAlipayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateENAlipayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateENAlipayOrder(ctx, req.(*ReqCreateENAlipayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateENJCBOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateENJCBOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateENJCBOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateENJCBOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateENJCBOrder(ctx, req.(*ReqCreateENJCBOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateENMasterCardOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateENMasterCardOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateENMasterCardOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateENMasterCardOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateENMasterCardOrder(ctx, req.(*ReqCreateENMasterCardOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateENPaypalOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateENPaypalOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateENPaypalOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateENPaypalOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateENPaypalOrder(ctx, req.(*ReqCreateENPaypalOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateENVisaOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateENVisaOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateENVisaOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateENVisaOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateENVisaOrder(ctx, req.(*ReqCreateENVisaOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateEmailVerifyCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateEmailVerifyCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateEmailVerifyCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateEmailVerifyCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateEmailVerifyCode(ctx, req.(*ReqCreateEmailVerifyCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPAuOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPAuOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPAuOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPAuOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPAuOrder(ctx, req.(*ReqCreateJPAuOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPCreditCardOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPCreditCardOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPCreditCardOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPCreditCardOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPCreditCardOrder(ctx, req.(*ReqCreateJPCreditCardOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPDocomoOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPDocomoOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPDocomoOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPDocomoOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPDocomoOrder(ctx, req.(*ReqCreateJPDocomoOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPPaypalOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPPaypalOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPPaypalOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPPaypalOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPPaypalOrder(ctx, req.(*ReqCreateJPPaypalOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateJPSoftbankOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateJPSoftbankOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateJPSoftbankOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateJPSoftbankOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateJPSoftbankOrder(ctx, req.(*ReqCreateJPSoftbankOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateNickname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateNickname)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateNickname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateNickname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateNickname(ctx, req.(*ReqCreateNickname))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreatePhoneVerifyCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreatePhoneVerifyCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreatePhoneVerifyCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreatePhoneVerifyCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreatePhoneVerifyCode(ctx, req.(*ReqCreatePhoneVerifyCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateRoom(ctx, req.(*ReqCreateRoom))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateWechatAppOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateWechatAppOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateWechatAppOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateWechatAppOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateWechatAppOrder(ctx, req.(*ReqCreateWechatAppOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateWechatNativeOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateWechatNativeOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateWechatNativeOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/CreateWechatNativeOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateWechatNativeOrder(ctx, req.(*ReqCreateWechatNativeOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeleteComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DeleteComment(ctx, req.(*ReqDeleteComment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DeleteMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeleteMail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DeleteMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DeleteMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DeleteMail(ctx, req.(*ReqDeleteMail))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_DoDailySignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).DoDailySignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/DoDailySignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).DoDailySignIn(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_EmailLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqEmailLogin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).EmailLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/EmailLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).EmailLogin(ctx, req.(*ReqEmailLogin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_EnterCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqEnterCustomizedContest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).EnterCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/EnterCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).EnterCustomizedContest(ctx, req.(*ReqEnterCustomizedContest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ExchangeActivityItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqExchangeActivityItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ExchangeActivityItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ExchangeActivityItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ExchangeActivityItem(ctx, req.(*ReqExchangeActivityItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ExchangeChestStone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqExchangeCurrency)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ExchangeChestStone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ExchangeChestStone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ExchangeChestStone(ctx, req.(*ReqExchangeCurrency))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ExchangeCurrency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqExchangeCurrency)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ExchangeCurrency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ExchangeCurrency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ExchangeCurrency(ctx, req.(*ReqExchangeCurrency))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountActivityData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountActivityData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountActivityData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountActivityData(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountCharacterInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountCharacterInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountCharacterInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountCharacterInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAccountInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountInfo(ctx, req.(*ReqAccountInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountSettings(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAccountList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountState(ctx, req.(*ReqAccountList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAccountStatisticInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAccountStatisticInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAccountStatisticInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAccountStatisticInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAccountStatisticInfo(ctx, req.(*ReqAccountStatisticInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAchievement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAchievement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAchievement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAchievement(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchActivityList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchActivityList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchActivityList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchActivityList(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchAnnouncement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchAnnouncement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchAnnouncement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchAnnouncement(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchBagInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchBagInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchBagInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchBagInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCharacterInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCharacterInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCharacterInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCharacterInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchClientValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchClientValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchClientValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchClientValue(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCollectedGameRecordList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCollectedGameRecordList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCollectedGameRecordList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCollectedGameRecordList(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCommentContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCommentContent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCommentContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCommentContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCommentContent(ctx, req.(*ReqFetchCommentContent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCommentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCommentList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCommentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCommentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCommentList(ctx, req.(*ReqFetchCommentList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCommentSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCommentSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCommentSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCommentSetting(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCommonView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCommonView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCommonView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCommonView(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchConnectionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchConnectionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchConnectionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchConnectionInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCurrentMatchInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCurrentMatchInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCurrentMatchInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCurrentMatchInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCurrentMatchInfo(ctx, req.(*ReqCurrentMatchInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestByContestId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestByContestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestByContestId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestByContestId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestByContestId(ctx, req.(*ReqFetchCustomizedContestByContestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestExtendInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestExtendInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestExtendInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestExtendInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestExtendInfo(ctx, req.(*ReqFetchCustomizedContestExtendInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestGameLiveList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestGameLiveList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestGameLiveList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestGameLiveList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestGameLiveList(ctx, req.(*ReqFetchCustomizedContestGameLiveList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestGameRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestGameRecords)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestGameRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestGameRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestGameRecords(ctx, req.(*ReqFetchCustomizedContestGameRecords))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestList(ctx, req.(*ReqFetchCustomizedContestList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchCustomizedContestOnlineInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchCustomizedContestOnlineInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchCustomizedContestOnlineInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchCustomizedContestOnlineInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchCustomizedContestOnlineInfo(ctx, req.(*ReqFetchCustomizedContestOnlineInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchDailySignInInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchDailySignInInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchDailySignInInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchDailySignInInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchDailyTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchDailyTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchDailyTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchDailyTask(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchFriendApplyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchFriendApplyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchFriendApplyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchFriendApplyList(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchFriendList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchFriendList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchFriendList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchFriendList(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameLiveInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameLiveInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameLiveInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameLiveInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameLiveInfo(ctx, req.(*ReqGameLiveInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameLiveLeftSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameLiveLeftSegment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameLiveLeftSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameLiveLeftSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameLiveLeftSegment(ctx, req.(*ReqGameLiveLeftSegment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameLiveList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameLiveList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameLiveList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameLiveList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameLiveList(ctx, req.(*ReqGameLiveList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameRecord(ctx, req.(*ReqGameRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameRecordList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameRecordList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameRecordList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameRecordList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameRecordList(ctx, req.(*ReqGameRecordList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchGameRecordsDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGameRecordsDetail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchGameRecordsDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchGameRecordsDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchGameRecordsDetail(ctx, req.(*ReqGameRecordsDetail))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchIDCardInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchIDCardInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchIDCardInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchIDCardInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchLevelLeaderboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLevelLeaderboard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchLevelLeaderboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchLevelLeaderboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchLevelLeaderboard(ctx, req.(*ReqLevelLeaderboard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchMailInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchMailInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchMailInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchMailInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchMisc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchMisc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchMisc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchMisc(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchModNicknameTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchModNicknameTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchModNicknameTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchModNicknameTime(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchMultiAccountBrief_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqMultiAccountId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchMultiAccountBrief(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchMultiAccountBrief",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchMultiAccountBrief(ctx, req.(*ReqMultiAccountId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchPlatformProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqPlatformBillingProducts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchPlatformProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchPlatformProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchPlatformProducts(ctx, req.(*ReqPlatformBillingProducts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchRankPointLeaderboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqFetchRankPointLeaderboard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchRankPointLeaderboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchRankPointLeaderboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchRankPointLeaderboard(ctx, req.(*ReqFetchRankPointLeaderboard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchReviveCoinInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchReviveCoinInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchReviveCoinInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchReviveCoinInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchRollingNotice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchRollingNotice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchRollingNotice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchRollingNotice(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchRoom(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchServerSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchServerSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchServerSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchServerSettings(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchServerTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchServerTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchServerTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchServerTime(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchShopInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchShopInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchShopInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchShopInfo(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchTitleList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchTitleList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchTitleList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchTitleList(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FetchVipReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FetchVipReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FetchVipReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FetchVipReward(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_FollowCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTargetCustomizedContest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).FollowCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/FollowCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).FollowCustomizedContest(ctx, req.(*ReqTargetCustomizedContest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GainAccumulatedPointActivityReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGainAccumulatedPointActivityReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GainAccumulatedPointActivityReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GainAccumulatedPointActivityReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GainAccumulatedPointActivityReward(ctx, req.(*ReqGainAccumulatedPointActivityReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GainRankPointReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGainRankPointReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GainRankPointReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GainRankPointReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GainRankPointReward(ctx, req.(*ReqGainRankPointReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GainReviveCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GainReviveCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GainReviveCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GainReviveCoin(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GainVipReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGainVipReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GainVipReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GainVipReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GainVipReward(ctx, req.(*ReqGainVipReward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GameMasterCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGMCommand)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GameMasterCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GameMasterCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GameMasterCommand(ctx, req.(*ReqGMCommand))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_GoNextShiLian_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).GoNextShiLian(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/GoNextShiLian",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).GoNextShiLian(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_HandleFriendApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqHandleFriendApply)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).HandleFriendApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/HandleFriendApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).HandleFriendApply(ctx, req.(*ReqHandleFriendApply))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Heatbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqHeatBeat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Heatbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Heatbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Heatbeat(ctx, req.(*ReqHeatBeat))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_JoinCustomizedContestChatRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqJoinCustomizedContestChatRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).JoinCustomizedContestChatRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/JoinCustomizedContestChatRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).JoinCustomizedContestChatRoom(ctx, req.(*ReqJoinCustomizedContestChatRoom))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_JoinRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqJoinRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).JoinRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/JoinRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).JoinRoom(ctx, req.(*ReqJoinRoom))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_KickPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRoomKick)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).KickPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/KickPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).KickPlayer(ctx, req.(*ReqRoomKick))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LeaveComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLeaveComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LeaveComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LeaveComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LeaveComment(ctx, req.(*ReqLeaveComment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LeaveCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LeaveCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LeaveCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LeaveCustomizedContest(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LeaveCustomizedContestChatRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LeaveCustomizedContestChatRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LeaveCustomizedContestChatRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LeaveCustomizedContestChatRoom(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_LeaveRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).LeaveRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/LeaveRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).LeaveRoom(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLogin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Login(ctx, req.(*ReqLogin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLogout)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Logout(ctx, req.(*ReqLogout))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_MatchGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqJoinMatchQueue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).MatchGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/MatchGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).MatchGame(ctx, req.(*ReqJoinMatchQueue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_MatchShiLian_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).MatchShiLian(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/MatchShiLian",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).MatchShiLian(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ModifyBirthday_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqModifyBirthday)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ModifyBirthday(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ModifyBirthday",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ModifyBirthday(ctx, req.(*ReqModifyBirthday))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ModifyNickname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqModifyNickname)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ModifyNickname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ModifyNickname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ModifyNickname(ctx, req.(*ReqModifyNickname))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ModifyPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqModifyPassword)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ModifyPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ModifyPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ModifyPassword(ctx, req.(*ReqModifyPassword))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ModifyRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqModifyRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ModifyRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ModifyRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ModifyRoom(ctx, req.(*ReqModifyRoom))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ModifySignature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqModifySignature)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ModifySignature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ModifySignature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ModifySignature(ctx, req.(*ReqModifySignature))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Oauth2Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOauth2Auth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Oauth2Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Oauth2Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Oauth2Auth(ctx, req.(*ReqOauth2Auth))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Oauth2Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOauth2Check)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Oauth2Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Oauth2Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Oauth2Check(ctx, req.(*ReqOauth2Check))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Oauth2Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOauth2Login)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Oauth2Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Oauth2Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Oauth2Login(ctx, req.(*ReqOauth2Login))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Oauth2Signup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOauth2Signup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Oauth2Signup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Oauth2Signup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Oauth2Signup(ctx, req.(*ReqOauth2Signup))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_OpenChest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOpenChest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).OpenChest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/OpenChest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).OpenChest(ctx, req.(*ReqOpenChest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_OpenManualItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOpenManualItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).OpenManualItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/OpenManualItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).OpenManualItem(ctx, req.(*ReqOpenManualItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_OpenRandomRewardItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqOpenRandomRewardItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).OpenRandomRewardItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/OpenRandomRewardItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).OpenRandomRewardItem(ctx, req.(*ReqOpenRandomRewardItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReadAnnouncement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReadAnnouncement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReadAnnouncement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReadAnnouncement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReadAnnouncement(ctx, req.(*ReqReadAnnouncement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReadMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqReadMail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReadMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReadMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReadMail(ctx, req.(*ReqReadMail))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ReadyPlay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRoomReady)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ReadyPlay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ReadyPlay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ReadyPlay(ctx, req.(*ReqRoomReady))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RefreshDailyTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRefreshDailyTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RefreshDailyTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RefreshDailyTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RefreshDailyTask(ctx, req.(*ReqRefreshDailyTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RefreshZHPShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RefreshZHPShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RefreshZHPShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RefreshZHPShop(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RemoveCollectedGameRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRemoveCollectedGameRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RemoveCollectedGameRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RemoveCollectedGameRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RemoveCollectedGameRecord(ctx, req.(*ReqRemoveCollectedGameRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_RemoveFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRemoveFriend)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).RemoveFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/RemoveFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).RemoveFriend(ctx, req.(*ReqRemoveFriend))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SayChatMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSayChatMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SayChatMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SayChatMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SayChatMessage(ctx, req.(*ReqSayChatMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SearchAccountById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSearchAccountById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SearchAccountById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SearchAccountById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SearchAccountById(ctx, req.(*ReqSearchAccountById))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SearchAccountByPattern_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSearchAccountByPattern)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SearchAccountByPattern(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SearchAccountByPattern",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SearchAccountByPattern(ctx, req.(*ReqSearchAccountByPattern))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SellItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSellItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SellItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SellItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SellItem(ctx, req.(*ReqSellItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SendClientMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSendClientMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SendClientMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SendClientMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SendClientMessage(ctx, req.(*ReqSendClientMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SendGiftToCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSendGiftToCharacter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SendGiftToCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SendGiftToCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SendGiftToCharacter(ctx, req.(*ReqSendGiftToCharacter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_ShopPurchase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqShopPurchase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).ShopPurchase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/ShopPurchase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).ShopPurchase(ctx, req.(*ReqShopPurchase))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_Signup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSignupAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).Signup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/Signup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).Signup(ctx, req.(*ReqSignupAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_SolveGooglePlayOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSolveGooglePlayOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).SolveGooglePlayOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/SolveGooglePlayOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).SolveGooglePlayOrder(ctx, req.(*ReqSolveGooglePlayOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_StartCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqStartCustomizedContest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).StartCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/StartCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).StartCustomizedContest(ctx, req.(*ReqStartCustomizedContest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_StartRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRoomStart)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).StartRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/StartRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).StartRoom(ctx, req.(*ReqRoomStart))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_StopCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCommon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).StopCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/StopCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).StopCustomizedContest(ctx, req.(*ReqCommon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_TakeAttachmentFromMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTakeAttachment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).TakeAttachmentFromMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/TakeAttachmentFromMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).TakeAttachmentFromMail(ctx, req.(*ReqTakeAttachment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UnfollowCustomizedContest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTargetCustomizedContest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UnfollowCustomizedContest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UnfollowCustomizedContest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UnfollowCustomizedContest(ctx, req.(*ReqTargetCustomizedContest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpdateAccountSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateAccountSettings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpdateAccountSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpdateAccountSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpdateAccountSettings(ctx, req.(*ReqUpdateAccountSettings))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpdateClientValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateClientValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpdateClientValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpdateClientValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpdateClientValue(ctx, req.(*ReqUpdateClientValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpdateCommentSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateCommentSetting)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpdateCommentSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpdateCommentSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpdateCommentSetting(ctx, req.(*ReqUpdateCommentSetting))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpdateIDCardInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateIDCardInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpdateIDCardInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpdateIDCardInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpdateIDCardInfo(ctx, req.(*ReqUpdateIDCardInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpdateReadComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateReadComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpdateReadComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpdateReadComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpdateReadComment(ctx, req.(*ReqUpdateReadComment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UpgradeCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpgradeCharacter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UpgradeCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UpgradeCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UpgradeCharacter(ctx, req.(*ReqUpgradeCharacter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UseBagItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUseBagItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UseBagItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UseBagItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UseBagItem(ctx, req.(*ReqUseBagItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UseGiftCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUseGiftCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UseGiftCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UseGiftCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UseGiftCode(ctx, req.(*ReqUseGiftCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_UseTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUseTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).UseTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/UseTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).UseTitle(ctx, req.(*ReqUseTitle))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_VerfifyCodeForSecure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqVerifyCodeForSecure)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).VerfifyCodeForSecure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lq.Lobby/VerfifyCodeForSecure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).VerfifyCodeForSecure(ctx, req.(*ReqVerifyCodeForSecure))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lobby_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lq.Lobby",
	HandlerType: (*LobbyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addCollectedGameRecord",
			Handler:    _Lobby_AddCollectedGameRecord_Handler,
		},
		{
			MethodName: "applyFriend",
			Handler:    _Lobby_ApplyFriend_Handler,
		},
		{
			MethodName: "bindAccount",
			Handler:    _Lobby_BindAccount_Handler,
		},
		{
			MethodName: "bindEmail",
			Handler:    _Lobby_BindEmail_Handler,
		},
		{
			MethodName: "bindPhoneNumber",
			Handler:    _Lobby_BindPhoneNumber_Handler,
		},
		{
			MethodName: "buyFromChestShop",
			Handler:    _Lobby_BuyFromChestShop_Handler,
		},
		{
			MethodName: "buyFromShop",
			Handler:    _Lobby_BuyFromShop_Handler,
		},
		{
			MethodName: "buyFromZHP",
			Handler:    _Lobby_BuyFromZHP_Handler,
		},
		{
			MethodName: "buyShiLian",
			Handler:    _Lobby_BuyShiLian_Handler,
		},
		{
			MethodName: "cancelGooglePlayOrder",
			Handler:    _Lobby_CancelGooglePlayOrder_Handler,
		},
		{
			MethodName: "cancelMatch",
			Handler:    _Lobby_CancelMatch_Handler,
		},
		{
			MethodName: "changeAvatar",
			Handler:    _Lobby_ChangeAvatar_Handler,
		},
		{
			MethodName: "changeCharacterSkin",
			Handler:    _Lobby_ChangeCharacterSkin_Handler,
		},
		{
			MethodName: "changeCharacterView",
			Handler:    _Lobby_ChangeCharacterView_Handler,
		},
		{
			MethodName: "changeCollectedGameRecordRemarks",
			Handler:    _Lobby_ChangeCollectedGameRecordRemarks_Handler,
		},
		{
			MethodName: "changeCommonView",
			Handler:    _Lobby_ChangeCommonView_Handler,
		},
		{
			MethodName: "changeMainCharacter",
			Handler:    _Lobby_ChangeMainCharacter_Handler,
		},
		{
			MethodName: "clientMessage",
			Handler:    _Lobby_ClientMessage_Handler,
		},
		{
			MethodName: "completeActivityTask",
			Handler:    _Lobby_CompleteActivityTask_Handler,
		},
		{
			MethodName: "composeShard",
			Handler:    _Lobby_ComposeShard_Handler,
		},
		{
			MethodName: "createAlipayAppOrder",
			Handler:    _Lobby_CreateAlipayAppOrder_Handler,
		},
		{
			MethodName: "createAlipayOrder",
			Handler:    _Lobby_CreateAlipayOrder_Handler,
		},
		{
			MethodName: "createAlipayScanOrder",
			Handler:    _Lobby_CreateAlipayScanOrder_Handler,
		},
		{
			MethodName: "createBillingOrder",
			Handler:    _Lobby_CreateBillingOrder_Handler,
		},
		{
			MethodName: "createENAlipayOrder",
			Handler:    _Lobby_CreateENAlipayOrder_Handler,
		},
		{
			MethodName: "createENJCBOrder",
			Handler:    _Lobby_CreateENJCBOrder_Handler,
		},
		{
			MethodName: "createENMasterCardOrder",
			Handler:    _Lobby_CreateENMasterCardOrder_Handler,
		},
		{
			MethodName: "createENPaypalOrder",
			Handler:    _Lobby_CreateENPaypalOrder_Handler,
		},
		{
			MethodName: "createENVisaOrder",
			Handler:    _Lobby_CreateENVisaOrder_Handler,
		},
		{
			MethodName: "createEmailVerifyCode",
			Handler:    _Lobby_CreateEmailVerifyCode_Handler,
		},
		{
			MethodName: "createJPAuOrder",
			Handler:    _Lobby_CreateJPAuOrder_Handler,
		},
		{
			MethodName: "createJPCreditCardOrder",
			Handler:    _Lobby_CreateJPCreditCardOrder_Handler,
		},
		{
			MethodName: "createJPDocomoOrder",
			Handler:    _Lobby_CreateJPDocomoOrder_Handler,
		},
		{
			MethodName: "createJPPaypalOrder",
			Handler:    _Lobby_CreateJPPaypalOrder_Handler,
		},
		{
			MethodName: "createJPSoftbankOrder",
			Handler:    _Lobby_CreateJPSoftbankOrder_Handler,
		},
		{
			MethodName: "createNickname",
			Handler:    _Lobby_CreateNickname_Handler,
		},
		{
			MethodName: "createPhoneVerifyCode",
			Handler:    _Lobby_CreatePhoneVerifyCode_Handler,
		},
		{
			MethodName: "createRoom",
			Handler:    _Lobby_CreateRoom_Handler,
		},
		{
			MethodName: "createWechatAppOrder",
			Handler:    _Lobby_CreateWechatAppOrder_Handler,
		},
		{
			MethodName: "createWechatNativeOrder",
			Handler:    _Lobby_CreateWechatNativeOrder_Handler,
		},
		{
			MethodName: "deleteComment",
			Handler:    _Lobby_DeleteComment_Handler,
		},
		{
			MethodName: "deleteMail",
			Handler:    _Lobby_DeleteMail_Handler,
		},
		{
			MethodName: "doDailySignIn",
			Handler:    _Lobby_DoDailySignIn_Handler,
		},
		{
			MethodName: "emailLogin",
			Handler:    _Lobby_EmailLogin_Handler,
		},
		{
			MethodName: "enterCustomizedContest",
			Handler:    _Lobby_EnterCustomizedContest_Handler,
		},
		{
			MethodName: "exchangeActivityItem",
			Handler:    _Lobby_ExchangeActivityItem_Handler,
		},
		{
			MethodName: "exchangeChestStone",
			Handler:    _Lobby_ExchangeChestStone_Handler,
		},
		{
			MethodName: "exchangeCurrency",
			Handler:    _Lobby_ExchangeCurrency_Handler,
		},
		{
			MethodName: "fetchAccountActivityData",
			Handler:    _Lobby_FetchAccountActivityData_Handler,
		},
		{
			MethodName: "fetchAccountCharacterInfo",
			Handler:    _Lobby_FetchAccountCharacterInfo_Handler,
		},
		{
			MethodName: "fetchAccountInfo",
			Handler:    _Lobby_FetchAccountInfo_Handler,
		},
		{
			MethodName: "fetchAccountSettings",
			Handler:    _Lobby_FetchAccountSettings_Handler,
		},
		{
			MethodName: "fetchAccountState",
			Handler:    _Lobby_FetchAccountState_Handler,
		},
		{
			MethodName: "fetchAccountStatisticInfo",
			Handler:    _Lobby_FetchAccountStatisticInfo_Handler,
		},
		{
			MethodName: "fetchAchievement",
			Handler:    _Lobby_FetchAchievement_Handler,
		},
		{
			MethodName: "fetchActivityList",
			Handler:    _Lobby_FetchActivityList_Handler,
		},
		{
			MethodName: "fetchAnnouncement",
			Handler:    _Lobby_FetchAnnouncement_Handler,
		},
		{
			MethodName: "fetchBagInfo",
			Handler:    _Lobby_FetchBagInfo_Handler,
		},
		{
			MethodName: "fetchCharacterInfo",
			Handler:    _Lobby_FetchCharacterInfo_Handler,
		},
		{
			MethodName: "fetchClientValue",
			Handler:    _Lobby_FetchClientValue_Handler,
		},
		{
			MethodName: "fetchCollectedGameRecordList",
			Handler:    _Lobby_FetchCollectedGameRecordList_Handler,
		},
		{
			MethodName: "fetchCommentContent",
			Handler:    _Lobby_FetchCommentContent_Handler,
		},
		{
			MethodName: "fetchCommentList",
			Handler:    _Lobby_FetchCommentList_Handler,
		},
		{
			MethodName: "fetchCommentSetting",
			Handler:    _Lobby_FetchCommentSetting_Handler,
		},
		{
			MethodName: "fetchCommonView",
			Handler:    _Lobby_FetchCommonView_Handler,
		},
		{
			MethodName: "fetchConnectionInfo",
			Handler:    _Lobby_FetchConnectionInfo_Handler,
		},
		{
			MethodName: "fetchCurrentMatchInfo",
			Handler:    _Lobby_FetchCurrentMatchInfo_Handler,
		},
		{
			MethodName: "fetchCustomizedContestByContestId",
			Handler:    _Lobby_FetchCustomizedContestByContestId_Handler,
		},
		{
			MethodName: "fetchCustomizedContestExtendInfo",
			Handler:    _Lobby_FetchCustomizedContestExtendInfo_Handler,
		},
		{
			MethodName: "fetchCustomizedContestGameLiveList",
			Handler:    _Lobby_FetchCustomizedContestGameLiveList_Handler,
		},
		{
			MethodName: "fetchCustomizedContestGameRecords",
			Handler:    _Lobby_FetchCustomizedContestGameRecords_Handler,
		},
		{
			MethodName: "fetchCustomizedContestList",
			Handler:    _Lobby_FetchCustomizedContestList_Handler,
		},
		{
			MethodName: "fetchCustomizedContestOnlineInfo",
			Handler:    _Lobby_FetchCustomizedContestOnlineInfo_Handler,
		},
		{
			MethodName: "fetchDailySignInInfo",
			Handler:    _Lobby_FetchDailySignInInfo_Handler,
		},
		{
			MethodName: "fetchDailyTask",
			Handler:    _Lobby_FetchDailyTask_Handler,
		},
		{
			MethodName: "fetchFriendApplyList",
			Handler:    _Lobby_FetchFriendApplyList_Handler,
		},
		{
			MethodName: "fetchFriendList",
			Handler:    _Lobby_FetchFriendList_Handler,
		},
		{
			MethodName: "fetchGameLiveInfo",
			Handler:    _Lobby_FetchGameLiveInfo_Handler,
		},
		{
			MethodName: "fetchGameLiveLeftSegment",
			Handler:    _Lobby_FetchGameLiveLeftSegment_Handler,
		},
		{
			MethodName: "fetchGameLiveList",
			Handler:    _Lobby_FetchGameLiveList_Handler,
		},
		{
			MethodName: "fetchGameRecord",
			Handler:    _Lobby_FetchGameRecord_Handler,
		},
		{
			MethodName: "fetchGameRecordList",
			Handler:    _Lobby_FetchGameRecordList_Handler,
		},
		{
			MethodName: "fetchGameRecordsDetail",
			Handler:    _Lobby_FetchGameRecordsDetail_Handler,
		},
		{
			MethodName: "fetchIDCardInfo",
			Handler:    _Lobby_FetchIDCardInfo_Handler,
		},
		{
			MethodName: "fetchLevelLeaderboard",
			Handler:    _Lobby_FetchLevelLeaderboard_Handler,
		},
		{
			MethodName: "fetchMailInfo",
			Handler:    _Lobby_FetchMailInfo_Handler,
		},
		{
			MethodName: "fetchMisc",
			Handler:    _Lobby_FetchMisc_Handler,
		},
		{
			MethodName: "fetchModNicknameTime",
			Handler:    _Lobby_FetchModNicknameTime_Handler,
		},
		{
			MethodName: "fetchMultiAccountBrief",
			Handler:    _Lobby_FetchMultiAccountBrief_Handler,
		},
		{
			MethodName: "fetchPlatformProducts",
			Handler:    _Lobby_FetchPlatformProducts_Handler,
		},
		{
			MethodName: "fetchRankPointLeaderboard",
			Handler:    _Lobby_FetchRankPointLeaderboard_Handler,
		},
		{
			MethodName: "fetchReviveCoinInfo",
			Handler:    _Lobby_FetchReviveCoinInfo_Handler,
		},
		{
			MethodName: "fetchRollingNotice",
			Handler:    _Lobby_FetchRollingNotice_Handler,
		},
		{
			MethodName: "fetchRoom",
			Handler:    _Lobby_FetchRoom_Handler,
		},
		{
			MethodName: "fetchServerSettings",
			Handler:    _Lobby_FetchServerSettings_Handler,
		},
		{
			MethodName: "fetchServerTime",
			Handler:    _Lobby_FetchServerTime_Handler,
		},
		{
			MethodName: "fetchShopInfo",
			Handler:    _Lobby_FetchShopInfo_Handler,
		},
		{
			MethodName: "fetchTitleList",
			Handler:    _Lobby_FetchTitleList_Handler,
		},
		{
			MethodName: "fetchVipReward",
			Handler:    _Lobby_FetchVipReward_Handler,
		},
		{
			MethodName: "followCustomizedContest",
			Handler:    _Lobby_FollowCustomizedContest_Handler,
		},
		{
			MethodName: "gainAccumulatedPointActivityReward",
			Handler:    _Lobby_GainAccumulatedPointActivityReward_Handler,
		},
		{
			MethodName: "gainRankPointReward",
			Handler:    _Lobby_GainRankPointReward_Handler,
		},
		{
			MethodName: "gainReviveCoin",
			Handler:    _Lobby_GainReviveCoin_Handler,
		},
		{
			MethodName: "gainVipReward",
			Handler:    _Lobby_GainVipReward_Handler,
		},
		{
			MethodName: "gameMasterCommand",
			Handler:    _Lobby_GameMasterCommand_Handler,
		},
		{
			MethodName: "goNextShiLian",
			Handler:    _Lobby_GoNextShiLian_Handler,
		},
		{
			MethodName: "handleFriendApply",
			Handler:    _Lobby_HandleFriendApply_Handler,
		},
		{
			MethodName: "heatbeat",
			Handler:    _Lobby_Heatbeat_Handler,
		},
		{
			MethodName: "joinCustomizedContestChatRoom",
			Handler:    _Lobby_JoinCustomizedContestChatRoom_Handler,
		},
		{
			MethodName: "joinRoom",
			Handler:    _Lobby_JoinRoom_Handler,
		},
		{
			MethodName: "kickPlayer",
			Handler:    _Lobby_KickPlayer_Handler,
		},
		{
			MethodName: "leaveComment",
			Handler:    _Lobby_LeaveComment_Handler,
		},
		{
			MethodName: "leaveCustomizedContest",
			Handler:    _Lobby_LeaveCustomizedContest_Handler,
		},
		{
			MethodName: "leaveCustomizedContestChatRoom",
			Handler:    _Lobby_LeaveCustomizedContestChatRoom_Handler,
		},
		{
			MethodName: "leaveRoom",
			Handler:    _Lobby_LeaveRoom_Handler,
		},
		{
			MethodName: "login",
			Handler:    _Lobby_Login_Handler,
		},
		{
			MethodName: "logout",
			Handler:    _Lobby_Logout_Handler,
		},
		{
			MethodName: "matchGame",
			Handler:    _Lobby_MatchGame_Handler,
		},
		{
			MethodName: "matchShiLian",
			Handler:    _Lobby_MatchShiLian_Handler,
		},
		{
			MethodName: "modifyBirthday",
			Handler:    _Lobby_ModifyBirthday_Handler,
		},
		{
			MethodName: "modifyNickname",
			Handler:    _Lobby_ModifyNickname_Handler,
		},
		{
			MethodName: "modifyPassword",
			Handler:    _Lobby_ModifyPassword_Handler,
		},
		{
			MethodName: "modifyRoom",
			Handler:    _Lobby_ModifyRoom_Handler,
		},
		{
			MethodName: "modifySignature",
			Handler:    _Lobby_ModifySignature_Handler,
		},
		{
			MethodName: "oauth2Auth",
			Handler:    _Lobby_Oauth2Auth_Handler,
		},
		{
			MethodName: "oauth2Check",
			Handler:    _Lobby_Oauth2Check_Handler,
		},
		{
			MethodName: "oauth2Login",
			Handler:    _Lobby_Oauth2Login_Handler,
		},
		{
			MethodName: "oauth2Signup",
			Handler:    _Lobby_Oauth2Signup_Handler,
		},
		{
			MethodName: "openChest",
			Handler:    _Lobby_OpenChest_Handler,
		},
		{
			MethodName: "openManualItem",
			Handler:    _Lobby_OpenManualItem_Handler,
		},
		{
			MethodName: "openRandomRewardItem",
			Handler:    _Lobby_OpenRandomRewardItem_Handler,
		},
		{
			MethodName: "readAnnouncement",
			Handler:    _Lobby_ReadAnnouncement_Handler,
		},
		{
			MethodName: "readMail",
			Handler:    _Lobby_ReadMail_Handler,
		},
		{
			MethodName: "readyPlay",
			Handler:    _Lobby_ReadyPlay_Handler,
		},
		{
			MethodName: "refreshDailyTask",
			Handler:    _Lobby_RefreshDailyTask_Handler,
		},
		{
			MethodName: "refreshZHPShop",
			Handler:    _Lobby_RefreshZHPShop_Handler,
		},
		{
			MethodName: "removeCollectedGameRecord",
			Handler:    _Lobby_RemoveCollectedGameRecord_Handler,
		},
		{
			MethodName: "removeFriend",
			Handler:    _Lobby_RemoveFriend_Handler,
		},
		{
			MethodName: "sayChatMessage",
			Handler:    _Lobby_SayChatMessage_Handler,
		},
		{
			MethodName: "searchAccountById",
			Handler:    _Lobby_SearchAccountById_Handler,
		},
		{
			MethodName: "searchAccountByPattern",
			Handler:    _Lobby_SearchAccountByPattern_Handler,
		},
		{
			MethodName: "sellItem",
			Handler:    _Lobby_SellItem_Handler,
		},
		{
			MethodName: "sendClientMessage",
			Handler:    _Lobby_SendClientMessage_Handler,
		},
		{
			MethodName: "sendGiftToCharacter",
			Handler:    _Lobby_SendGiftToCharacter_Handler,
		},
		{
			MethodName: "shopPurchase",
			Handler:    _Lobby_ShopPurchase_Handler,
		},
		{
			MethodName: "signup",
			Handler:    _Lobby_Signup_Handler,
		},
		{
			MethodName: "solveGooglePlayOrder",
			Handler:    _Lobby_SolveGooglePlayOrder_Handler,
		},
		{
			MethodName: "startCustomizedContest",
			Handler:    _Lobby_StartCustomizedContest_Handler,
		},
		{
			MethodName: "startRoom",
			Handler:    _Lobby_StartRoom_Handler,
		},
		{
			MethodName: "stopCustomizedContest",
			Handler:    _Lobby_StopCustomizedContest_Handler,
		},
		{
			MethodName: "takeAttachmentFromMail",
			Handler:    _Lobby_TakeAttachmentFromMail_Handler,
		},
		{
			MethodName: "unfollowCustomizedContest",
			Handler:    _Lobby_UnfollowCustomizedContest_Handler,
		},
		{
			MethodName: "updateAccountSettings",
			Handler:    _Lobby_UpdateAccountSettings_Handler,
		},
		{
			MethodName: "updateClientValue",
			Handler:    _Lobby_UpdateClientValue_Handler,
		},
		{
			MethodName: "updateCommentSetting",
			Handler:    _Lobby_UpdateCommentSetting_Handler,
		},
		{
			MethodName: "updateIDCardInfo",
			Handler:    _Lobby_UpdateIDCardInfo_Handler,
		},
		{
			MethodName: "updateReadComment",
			Handler:    _Lobby_UpdateReadComment_Handler,
		},
		{
			MethodName: "upgradeCharacter",
			Handler:    _Lobby_UpgradeCharacter_Handler,
		},
		{
			MethodName: "useBagItem",
			Handler:    _Lobby_UseBagItem_Handler,
		},
		{
			MethodName: "useGiftCode",
			Handler:    _Lobby_UseGiftCode_Handler,
		},
		{
			MethodName: "useTitle",
			Handler:    _Lobby_UseTitle_Handler,
		},
		{
			MethodName: "verfifyCodeForSecure",
			Handler:    _Lobby_VerfifyCodeForSecure_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "liqi.proto",
}

func init() { proto.RegisterFile("liqi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 17272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0x6d, 0x8c, 0x1c, 0x49,
	0x96, 0x18, 0xe6, 0xaa, 0xfe, 0xaa, 0x7a, 0xd5, 0x55, 0xdd, 0x9d, 0x64, 0x93, 0xcd, 0x22, 0x39,
	0xc3, 0xc9, 0x99, 0xe1, 0x70, 0x66, 0xc8, 0x1e, 0x4e, 0x73, 0xbe, 0x76, 0x66, 0x67, 0x67, 0x9b,
	0xcd, 0xaf, 0x9e, 0x25, 0x39, 0xbd, 0xd9, 0x24, 0x57, 0xb3, 0xbb, 0xb7, 0xa5, 0xe8, 0xaa, 0xa8,
	0xae, 0x64, 0x67, 0x65, 0x16, 0xf3, 0xa3, 0x9b, 0x3d, 0x3e, 0xc1, 0x32, 0xd6, 0x27, 0x9c, 0x7f,
	0xdc, 0xe2, 0x0c, 0xdb, 0x67, 0xc0, 0xbe, 0xb3, 0x2c, 0x5b, 0x07, 0xe3, 0x7c, 0x16, 0x0c, 0xf9,
	0x6c, 0x18, 0xd2, 0x49, 0x3e, 0xdb, 0x80, 0x00, 0x1b, 0x10, 0x60, 0x1b, 0x36, 0x0c, 0x08, 0xfe,
	0x25, 0xf8, 0x8f, 0x21, 0xcb, 0x80, 0x60, 0x18, 0x06, 0x6c, 0x58, 0x86, 0x11, 0xef, 0x45, 0x44,
	0x46, 0x66, 0x65, 0x7d, 0xf4, 0x0c, 0x77, 0xb5, 0x03, 0xe9, 0x4f, 0x77, 0xc5, 0x8b, 0x17, 0x2f,
	0x22, 0xe3, 0xe3, 0xc5, 0x8b, 0x17, 0xef, 0xbd, 0x00, 0xf0, 0xdc, 0x67, 0xee, 0xfa, 0x20, 0x0c,
	0xe2, 0xc0, 0x2a, 0x7b, 0xcf, 0xec, 0xdf, 0x9d, 0x83, 0x85, 0xcd, 0x76, 0x3b, 0x48, 0xfc, 0xd8,
	0xba, 0x08, 0xc0, 0xe8, 0x67, 0xcb, 0xed, 0xac, 0x95, 0x2e, 0x95, 0xae, 0xd4, 0x9d, 0xaa, 0x84,
	0x6c, 0x77, 0xac, 0x26, 0x54, 0x7c, 0xb7, 0x7d, 0xe0, 0xb3, 0x3e, 0x5f, 0x2b, 0x5f, 0x2a, 0x5d,
	0xa9, 0x3a, 0x3a, 0x2d, 0x8a, 0x7a, 0xc1, 0xbe, 0xeb, 0xb7, 0x62, 0xb7, 0xcf, 0xd7, 0x66, 0xa8,
	0x28, 0x42, 0x1e, 0xb9, 0x7d, 0x6e, 0xbd, 0x0c, 0x35, 0x2f, 0xd8, 0x0f, 0x92, 0x98, 0xf2, 0x67,
	0x31, 0x1f, 0x08, 0x84, 0x08, 0x67, 0x61, 0x21, 0x0c, 0x82, 0xbe, 0xa8, 0x77, 0x0e, 0x33, 0xe7,
	0x45, 0x72, 0xbb, 0x63, 0x7d, 0x04, 0x0d, 0xe6, 0xc7, 0x6e, 0x8b, 0x75, 0x3a, 0x6e, 0x3b, 0x76,
	0x03, 0x7f, 0x6d, 0xfe, 0x52, 0xe9, 0x4a, 0x6d, 0x63, 0x65, 0xdd, 0x7b, 0xb6, 0xbe, 0xe9, 0xc7,
	0xee, 0xa6, 0xca, 0x70, 0xea, 0xcc, 0x4c, 0x5a, 0xa7, 0x61, 0x2e, 0x76, 0x63, 0x8f, 0xaf, 0x2d,
	0x20, 0x41, 0x4a, 0x58, 0x17, 0xa0, 0x1a, 0xb9, 0xfb, 0x3e, 0x8b, 0x93, 0x90, 0xaf, 0x55, 0xf0,
	0x2b, 0x52, 0x80, 0x28, 0xc3, 0xfb, 0xcc, 0xf5, 0xd6, 0xaa, 0x98, 0x43, 0x09, 0xeb, 0x15, 0x58,
	0xc4, 0x1f, 0xad, 0x43, 0x1e, 0xba, 0xdd, 0xe3, 0x35, 0x40, 0x82, 0x35, 0x84, 0x3d, 0x41, 0x90,
	0x65, 0xc1, 0xec, 0x7e, 0xe0, 0x75, 0xd6, 0x6a, 0x98, 0x85, 0xbf, 0xad, 0x35, 0x58, 0xe8, 0xb8,
	0xac, 0x1f, 0xf8, 0x9d, 0xb5, 0x45, 0x04, 0xab, 0xa4, 0x75, 0x1e, 0xaa, 0xec, 0x90, 0xc5, 0x2c,
	0x14, 0xdf, 0x5b, 0xc7, 0xbc, 0x0a, 0x01, 0xb6, 0x3b, 0xd6, 0x32, 0xcc, 0x1c, 0xba, 0x83, 0xb5,
	0x06, 0x82, 0xc5, 0x4f, 0xd1, 0xf1, 0x7b, 0x6e, 0x18, 0xf7, 0x3a, 0xec, 0x78, 0x6d, 0x89, 0xb0,
	0x55, 0xda, 0xba, 0x03, 0xcb, 0x03, 0x8f, 0xc5, 0xdd, 0x20, 0xec, 0xb7, 0x54, 0x6d, 0xd6, 0xa5,
	0x99, 0x2b, 0xb5, 0x8d, 0xf3, 0xd8, 0x43, 0x34, 0x7a, 0xeb, 0x3b, 0x12, 0xe7, 0x16, 0xa1, 0x38,
	0x4b, 0x83, 0x2c, 0xc0, 0xba, 0x0c, 0x73, 0x1e, 0x3f, 0xe4, 0xde, 0xda, 0x2a, 0x76, 0xef, 0xb2,
	0x51, 0xf8, 0xbe, 0x80, 0x3b, 0x94, 0x6d, 0x5d, 0x81, 0x79, 0xfc, 0x71, 0x63, 0xed, 0xcc, 0x08,
	0x44, 0x99, 0xdf, 0xfc, 0x10, 0x96, 0x72, 0xb5, 0x5a, 0x0d, 0x28, 0xeb, 0x89, 0x55, 0x76, 0x3b,
	0xa2, 0xbb, 0xb1, 0x20, 0x4e, 0xa7, 0xba, 0x43, 0x09, 0xfb, 0xbf, 0x2a, 0x81, 0x25, 0x29, 0x6e,
	0xb6, 0x63, 0xf7, 0x90, 0xef, 0xc6, 0x2c, 0xe6, 0x93, 0x66, 0x67, 0x76, 0x06, 0x96, 0x27, 0xcc,
	0xc0, 0x99, 0xa1, 0x19, 0x78, 0x1e, 0xaa, 0x6e, 0xd4, 0x0a, 0x7c, 0xcf, 0xf5, 0x69, 0x82, 0x56,
	0x9c, 0x8a, 0x1b, 0x7d, 0x81, 0x69, 0xeb, 0x3a, 0x2c, 0x0c, 0x3c, 0x76, 0xec, 0xfa, 0xfb, 0x38,
	0x3d, 0x6b, 0x1b, 0x67, 0x8c, 0xcf, 0xde, 0xa1, 0x9c, 0xbb, 0xac, 0xcf, 0x1d, 0x85, 0x66, 0xff,
	0xcd, 0x19, 0x58, 0x96, 0xf9, 0x5b, 0xac, 0xdd, 0xe3, 0x4f, 0x5c, 0x7e, 0x64, 0xbd, 0x0a, 0xf5,
	0xb6, 0x48, 0x88, 0x89, 0x14, 0x89, 0xb9, 0x4c, 0x5f, 0xb1, 0x88, 0xc0, 0x27, 0x04, 0xcb, 0x7d,
	0x67, 0x79, 0xdc, 0x2a, 0x9c, 0x19, 0xbb, 0x0a, 0x67, 0x27, 0xf4, 0xc1, 0xdc, 0xf8, 0x3e, 0x98,
	0xcf, 0xf5, 0x81, 0xb1, 0x44, 0x17, 0x32, 0x4b, 0x54, 0x2f, 0xb4, 0x8a, 0xb9, 0xd0, 0x32, 0x73,
	0xbc, 0x5a, 0x3c, 0xc7, 0x21, 0x9d, 0xe3, 0x7a, 0xfe, 0xd5, 0xc6, 0xcf, 0xbf, 0xef, 0xc0, 0xa2,
	0xec, 0xe2, 0xd6, 0xbe, 0xe8, 0x82, 0xc5, 0xb1, 0xc3, 0x51, 0x1b, 0xa4, 0x09, 0x63, 0xea, 0xd6,
	0xc7, 0x4f, 0x5d, 0xfb, 0xef, 0x97, 0xe0, 0x8c, 0xcc, 0xb8, 0xc5, 0x63, 0xe6, 0x7a, 0x62, 0x06,
	0xba, 0x51, 0xec, 0xb6, 0xad, 0x4f, 0xa0, 0x2a, 0xea, 0x6d, 0xf5, 0x83, 0x0e, 0x5f, 0x2b, 0xe1,
	0x42, 0x7b, 0xc9, 0xa0, 0xa3, 0x11, 0x6f, 0x1e, 0x8b, 0x3a, 0x1f, 0x04, 0x1d, 0xee, 0x54, 0xf6,
	0xe5, 0x2f, 0xeb, 0x6d, 0x98, 0xe9, 0x32, 0x7f, 0xad, 0x8c, 0xc5, 0xce, 0x15, 0x17, 0xbb, 0xc3,
	0x7c, 0x47, 0x60, 0x59, 0x36, 0x2c, 0x7a, 0x6e, 0xf2, 0x34, 0xe9, 0x33, 0x7f, 0x3f, 0x61, 0xbe,
	0x9c, 0xb2, 0x19, 0x98, 0xe8, 0x8d, 0x2e, 0xf3, 0x5b, 0xac, 0xdd, 0x73, 0xf9, 0x21, 0xef, 0xac,
	0xcd, 0x22, 0x65, 0xb3, 0x37, 0xee, 0x30, 0x7f, 0x53, 0xe6, 0x3a, 0xb5, 0x6e, 0x9a, 0xb0, 0x7f,
	0xab, 0x04, 0x97, 0x8a, 0xbf, 0xf1, 0xe6, 0xf1, 0x16, 0x8b, 0xf9, 0x7e, 0x10, 0x1e, 0x8b, 0xc9,
	0xd6, 0x96, 0xbf, 0xe5, 0x5c, 0xd5, 0x69, 0xeb, 0x36, 0x2c, 0x77, 0xb0, 0x60, 0x2b, 0x52, 0x25,
	0x71, 0xb6, 0xd6, 0x36, 0x9a, 0x46, 0xfd, 0x39, 0xda, 0xce, 0x52, 0x27, 0x0b, 0xb0, 0xff, 0x46,
	0x05, 0xd6, 0x8a, 0x71, 0x9f, 0x6c, 0x58, 0x0f, 0x61, 0xb5, 0x1b, 0xba, 0xdc, 0xef, 0xb4, 0x70,
	0xea, 0xa5, 0x15, 0x95, 0x26, 0x56, 0x74, 0x8a, 0x0a, 0x3a, 0x41, 0xd0, 0x4f, 0x47, 0xef, 0x87,
	0xd0, 0x08, 0x99, 0x7f, 0x30, 0xd4, 0xe2, 0xb7, 0x46, 0x13, 0x7a, 0xb2, 0xb1, 0xee, 0x30, 0xff,
	0x20, 0x25, 0x5c, 0x0f, 0xcd, 0xa4, 0x75, 0x0c, 0x17, 0xda, 0x49, 0x14, 0x07, 0x7d, 0xf7, 0x2b,
	0xde, 0x69, 0xb5, 0x03, 0x3f, 0xe6, 0x51, 0x6c, 0x54, 0x30, 0x83, 0x15, 0x7c, 0x38, 0xb6, 0x82,
	0x2d, 0x4d, 0x60, 0x8b, 0xca, 0xa7, 0xb5, 0x35, 0xdb, 0x23, 0xf3, 0x9a, 0xff, 0x63, 0x09, 0x9a,
	0xa3, 0x8b, 0x5a, 0x5b, 0xb0, 0x14, 0x07, 0x31, 0xf3, 0x4e, 0xd4, 0x6d, 0x0d, 0x2c, 0x92, 0x21,
	0xd2, 0x0f, 0xfc, 0xb8, 0x77, 0xa2, 0x41, 0x6e, 0x60, 0x91, 0x94, 0xc8, 0x55, 0xb0, 0x88, 0x48,
	0xc8, 0xbb, 0x21, 0x8f, 0x7a, 0x26, 0x0f, 0x5e, 0xc6, 0x1c, 0x87, 0x32, 0x04, 0x17, 0x6a, 0xfe,
	0xfb, 0xb3, 0x50, 0xcf, 0x74, 0xb9, 0xf5, 0xd3, 0x51, 0x5f, 0x72, 0x63, 0xfa, 0x71, 0xc3, 0xd4,
	0x2d, 0x16, 0xb3, 0xa1, 0x4f, 0xfc, 0xe9, 0xa8, 0x4f, 0xfc, 0x7a, 0xd4, 0xbf, 0xd1, 0xb7, 0xff,
	0x71, 0x19, 0x2a, 0x8a, 0x94, 0xf5, 0x39, 0x9c, 0x62, 0x9e, 0xd7, 0x42, 0xa6, 0x74, 0xa2, 0x41,
	0x5c, 0x61, 0x9e, 0x87, 0x1c, 0x2d, 0x6d, 0x86, 0x0b, 0x4b, 0x44, 0xa7, 0xc3, 0x62, 0xd6, 0xf2,
	0xdc, 0x28, 0x96, 0x6c, 0x68, 0xf3, 0x6b, 0x7c, 0x24, 0xfe, 0xc0, 0x0a, 0xf0, 0x93, 0xeb, 0x9e,
	0xfa, 0x79, 0xdf, 0x8d, 0xe2, 0x66, 0x8f, 0x86, 0x4f, 0xe7, 0x8b, 0x6d, 0x09, 0x57, 0x1d, 0x31,
	0x78, 0xb9, 0x73, 0x87, 0x0a, 0xc5, 0xfa, 0x08, 0xaa, 0x27, 0x99, 0x5c, 0x29, 0xb2, 0xfd, 0xbb,
	0xa9, 0xa4, 0x60, 0xf0, 0x39, 0xeb, 0x4d, 0x58, 0xee, 0xb3, 0xde, 0xd3, 0xc0, 0xdf, 0x6f, 0xe5,
	0xb8, 0xd7, 0x92, 0x84, 0x6b, 0x06, 0xf7, 0xa2, 0x39, 0xb2, 0xfd, 0x1e, 0x2c, 0x9a, 0x5b, 0x4a,
	0x91, 0xc8, 0x13, 0xb5, 0x83, 0x50, 0x49, 0x28, 0x94, 0xb0, 0xff, 0x1a, 0xc0, 0x59, 0x59, 0xec,
	0x01, 0xb5, 0x30, 0x1d, 0xb9, 0x0d, 0x58, 0xed, 0xba, 0x3e, 0xf3, 0x5a, 0x83, 0x20, 0x72, 0x85,
	0x64, 0xdb, 0x42, 0xbc, 0x08, 0x77, 0x9f, 0xba, 0x73, 0x0a, 0x33, 0x77, 0x64, 0xde, 0x16, 0x66,
	0x59, 0x3f, 0x80, 0xc5, 0x90, 0xb7, 0xb9, 0x1f, 0xb7, 0xc2, 0x20, 0xf1, 0x3b, 0xb2, 0x57, 0xaf,
	0x18, 0xdf, 0x97, 0xaf, 0x66, 0xdd, 0x11, 0x88, 0xbb, 0x49, 0xbf, 0xcf, 0xc2, 0x63, 0xa7, 0x46,
	0xa5, 0x11, 0x66, 0xdd, 0x84, 0xaa, 0x24, 0xd6, 0x4b, 0x24, 0x3b, 0x7b, 0x7d, 0x1c, 0xa5, 0x7b,
	0x89, 0x22, 0x53, 0xa1, 0x72, 0xf7, 0x12, 0xeb, 0x73, 0x80, 0x9e, 0xbb, 0xdf, 0x13, 0xac, 0xb1,
	0x97, 0xa0, 0x64, 0x52, 0xdb, 0x78, 0x7b, 0x2c, 0x11, 0xc2, 0xbe, 0x97, 0x38, 0xbc, 0x1d, 0x84,
	0x1d, 0xa7, 0xda, 0x53, 0x00, 0xeb, 0xc7, 0x70, 0x5a, 0xb6, 0x67, 0xe3, 0x7a, 0xab, 0x97, 0xb4,
	0x22, 0xaa, 0x4d, 0x1e, 0x0c, 0xde, 0x1c, 0x47, 0xf5, 0xbe, 0xfb, 0xcc, 0xdd, 0xb8, 0xae, 0x9a,
	0xb7, 0x42, 0x64, 0x36, 0xae, 0xeb, 0x16, 0x1b, 0xb4, 0xdf, 0xcd, 0xd0, 0x5e, 0x98, 0x86, 0xf6,
	0x0f, 0xdd, 0x77, 0xf3, 0xb4, 0xdf, 0x35, 0x68, 0x7f, 0x09, 0xab, 0x29, 0x6d, 0x14, 0x22, 0x42,
	0x1e, 0x25, 0x5e, 0xbc, 0x56, 0xc1, 0xd9, 0x77, 0x79, 0x1c, 0x71, 0x94, 0x66, 0x10, 0xdb, 0xb1,
	0x14, 0xe5, 0x14, 0xd6, 0xdc, 0x04, 0x48, 0x53, 0xe2, 0x30, 0x22, 0x56, 0x97, 0x9c, 0x75, 0xf8,
	0x5b, 0xc8, 0x7e, 0x6a, 0x16, 0xb9, 0x52, 0xe0, 0x9e, 0x73, 0x40, 0xce, 0x1d, 0xd7, 0x8f, 0x9b,
	0xff, 0x49, 0x09, 0x96, 0x72, 0x9d, 0x6e, 0x9d, 0x81, 0xf9, 0x2e, 0xf3, 0xa3, 0x5e, 0x22, 0x49,
	0xc9, 0x14, 0x9e, 0x6c, 0x82, 0x90, 0xf9, 0x49, 0x5f, 0x4e, 0x63, 0x95, 0x4c, 0x65, 0x41, 0x12,
	0x4d, 0xa5, 0x2c, 0x78, 0x1a, 0xe6, 0x7a, 0xcc, 0xef, 0x44, 0x28, 0x9f, 0x54, 0x1d, 0x4a, 0x88,
	0x66, 0xf6, 0x49, 0xa2, 0x16, 0x40, 0xfc, 0x8d, 0x98, 0xc9, 0x80, 0xb9, 0x38, 0x98, 0x02, 0x53,
	0x24, 0xac, 0x73, 0x50, 0x41, 0x42, 0xa9, 0xec, 0xb9, 0x80, 0xe9, 0xed, 0x4e, 0x33, 0x82, 0x6a,
	0xda, 0xc3, 0x2f, 0x43, 0x8d, 0xf6, 0x09, 0x3a, 0x55, 0x50, 0xa3, 0x01, 0x41, 0xb8, 0x30, 0xac,
	0x2b, 0xb0, 0x2c, 0x5a, 0x4a, 0xab, 0xa2, 0x65, 0x9e, 0x3d, 0x1a, 0x02, 0x8e, 0xf3, 0x9d, 0x30,
	0xcf, 0x43, 0x95, 0x48, 0x75, 0xf5, 0x42, 0xaf, 0x20, 0xe0, 0x0e, 0xf3, 0x9b, 0x3f, 0x81, 0x7a,
	0x66, 0xb4, 0xad, 0x37, 0xd4, 0x06, 0xf5, 0x3c, 0x11, 0x3d, 0xc4, 0xfc, 0x7d, 0x59, 0x39, 0xed,
	0x35, 0x7f, 0x4e, 0x41, 0xc5, 0x51, 0x52, 0x93, 0x15, 0xfd, 0x4a, 0x95, 0xd7, 0x14, 0xe5, 0xa8,
	0x97, 0x34, 0x7f, 0xbb, 0x24, 0xa8, 0x1b, 0xf3, 0x74, 0xf2, 0x67, 0x5d, 0x05, 0x8b, 0x10, 0x3c,
	0x17, 0x3f, 0xcf, 0xfc, 0xb0, 0x65, 0xcc, 0xb9, 0x8f, 0x19, 0xba, 0x13, 0xd8, 0x21, 0x0f, 0xd9,
	0x3e, 0x17, 0x33, 0x9c, 0xe6, 0x03, 0x7d, 0x61, 0x43, 0xc2, 0xef, 0x25, 0x34, 0x27, 0x7e, 0xaf,
	0x04, 0x8b, 0x26, 0x5f, 0x98, 0xdc, 0x12, 0xc1, 0xea, 0x91, 0xef, 0x1a, 0x2d, 0xa8, 0x0a, 0x88,
	0xce, 0xfe, 0xca, 0xed, 0x07, 0x32, 0x5b, 0xaa, 0x09, 0x04, 0x84, 0xb2, 0xdf, 0x80, 0xa5, 0x2e,
	0xf3, 0xf7, 0xdb, 0xbd, 0x94, 0x04, 0x1d, 0x62, 0x1a, 0x1a, 0x8c, 0x88, 0xf6, 0x67, 0xfa, 0x70,
	0xf5, 0xc5, 0x91, 0xcf, 0x43, 0xdc, 0x65, 0xde, 0x86, 0x95, 0xc4, 0xf7, 0x82, 0xf6, 0x41, 0xab,
	0xdd, 0x63, 0x21, 0x6b, 0xc7, 0x3c, 0x54, 0x3c, 0x72, 0x99, 0x32, 0xb6, 0x34, 0xdc, 0x8e, 0xf4,
	0xc6, 0x61, 0x1c, 0x17, 0xc4, 0xa0, 0xe3, 0xba, 0x4c, 0x12, 0xc9, 0xb3, 0xab, 0x24, 0xbc, 0x3f,
	0x4e, 0xdc, 0x4e, 0x46, 0x16, 0x2e, 0xe7, 0x64, 0xe1, 0xd7, 0x60, 0xb6, 0xcf, 0x63, 0x26, 0xb9,
	0x23, 0x1e, 0x2c, 0x50, 0xfc, 0xe7, 0x31, 0xc3, 0x1d, 0x12, 0x73, 0xed, 0x8f, 0xa0, 0xa1, 0x76,
	0x17, 0x1e, 0xc7, 0x62, 0xba, 0x2f, 0xc3, 0xcc, 0x01, 0x57, 0x9b, 0x93, 0xf8, 0x29, 0x16, 0xc0,
	0x21, 0xf3, 0x12, 0xbd, 0x3f, 0x60, 0xc2, 0xfe, 0x38, 0x2d, 0xd9, 0x73, 0xef, 0xbb, 0xcc, 0x17,
	0x8b, 0x27, 0x8a, 0xf9, 0x40, 0xad, 0x71, 0xf1, 0x1b, 0xf7, 0x16, 0x71, 0x54, 0xd6, 0x7b, 0x8b,
	0x48, 0xd8, 0xdf, 0x87, 0xd5, 0xc2, 0x3d, 0xcd, 0x5a, 0xc5, 0xd5, 0x9d, 0x1e, 0xa6, 0xe7, 0xba,
	0xcc, 0xa7, 0xb3, 0x59, 0xa4, 0x17, 0xb6, 0xf8, 0x69, 0xff, 0xa3, 0x39, 0x68, 0x8e, 0x3e, 0xdf,
	0xe0, 0x3a, 0xa6, 0xd3, 0x10, 0x36, 0x45, 0xfc, 0xb6, 0x5e, 0x83, 0x06, 0xf6, 0x24, 0x9d, 0x63,
	0x53, 0x7a, 0x8b, 0x02, 0x8a, 0x63, 0xb8, 0x9b, 0xf4, 0xad, 0x75, 0x38, 0x85, 0x58, 0xd9, 0xfd,
	0x6d, 0x6d, 0x06, 0x07, 0x6d, 0x45, 0x64, 0xdd, 0x31, 0x37, 0x37, 0x31, 0x3e, 0x5d, 0xef, 0x38,
	0x33, 0x33, 0x2a, 0x5d, 0xef, 0x98, 0x26, 0x8f, 0x0d, 0xf5, 0xfd, 0xc0, 0xeb, 0xb4, 0x38, 0x0b,
	0x7d, 0xac, 0x51, 0x9c, 0x6f, 0xcb, 0x4e, 0x4d, 0x00, 0x6f, 0xb3, 0xd0, 0x17, 0x15, 0x5e, 0x86,
	0x25, 0x63, 0xe9, 0x23, 0xd6, 0x3c, 0x92, 0xa9, 0x87, 0x7a, 0xe9, 0x0b, 0xbc, 0x8b, 0x00, 0x1d,
	0xd6, 0x71, 0x19, 0x11, 0x5a, 0x40, 0x42, 0x55, 0x82, 0x88, 0xec, 0x7b, 0x50, 0x25, 0x32, 0xdc,
	0xef, 0x48, 0xee, 0xfd, 0xf6, 0xf8, 0x43, 0x20, 0x6d, 0xaf, 0xb7, 0xfd, 0x0e, 0x4e, 0x87, 0x4a,
	0x28, 0x53, 0xa2, 0x9f, 0x04, 0xdf, 0x33, 0xda, 0x43, 0x47, 0xe5, 0x45, 0x01, 0xd5, 0xcd, 0x79,
	0x0d, 0x1a, 0x9e, 0xfb, 0xcc, 0x35, 0xb0, 0x40, 0x89, 0x1e, 0xcf, 0x5c, 0x8d, 0x65, 0x43, 0xfd,
	0x79, 0xe2, 0x1b, 0x48, 0xa4, 0x8c, 0xaa, 0x3d, 0x4f, 0x7c, 0x8d, 0x73, 0x0d, 0x2c, 0xb5, 0x0f,
	0x7b, 0x2e, 0xf3, 0xbf, 0xea, 0x25, 0x82, 0x57, 0x91, 0x7a, 0x6a, 0x45, 0xe6, 0xdc, 0xd7, 0x19,
	0xa2, 0x62, 0x14, 0x50, 0xd2, 0x4e, 0x25, 0x6d, 0xd5, 0x22, 0x42, 0x55, 0xaf, 0xde, 0x95, 0xf2,
	0x1d, 0x09, 0x36, 0x0d, 0xec, 0x8f, 0x2b, 0x93, 0xfa, 0x43, 0x08, 0x96, 0x02, 0x9f, 0x24, 0x41,
	0xfc, 0xd9, 0x74, 0xa0, 0xaa, 0xe1, 0x85, 0xbb, 0xd8, 0x79, 0xa8, 0x52, 0x7b, 0xd4, 0x8c, 0x9a,
	0x73, 0x2a, 0x08, 0xd8, 0xa5, 0xbd, 0xc7, 0xe4, 0x2b, 0x94, 0x68, 0xbe, 0x27, 0x59, 0x98, 0xec,
	0x7b, 0x41, 0x36, 0x3e, 0x1e, 0xe8, 0xd9, 0x2a, 0x7e, 0x17, 0x4c, 0xf9, 0xbf, 0x52, 0x82, 0xd3,
	0xf9, 0xd6, 0x63, 0xf1, 0x13, 0xc8, 0x96, 0xaf, 0x42, 0x9d, 0xd6, 0x40, 0x96, 0x6b, 0xd0, 0x12,
	0x50, 0x48, 0xdf, 0x31, 0x85, 0x5f, 0x62, 0x1f, 0xe7, 0xc7, 0x08, 0x02, 0xa6, 0xf4, 0xfb, 0xd7,
	0x17, 0xa0, 0x2e, 0xd1, 0x1e, 0x0f, 0x3a, 0x2c, 0xe6, 0xd6, 0x67, 0x50, 0xf5, 0x93, 0x3e, 0x0f,
	0xdd, 0x36, 0xf3, 0xa4, 0x72, 0xe2, 0x15, 0x83, 0x18, 0x61, 0xad, 0x3f, 0x54, 0x28, 0x94, 0x76,
	0xd2, 0x32, 0x82, 0x80, 0x66, 0x9e, 0x52, 0x68, 0x2c, 0x20, 0xa0, 0xf9, 0xa8, 0x22, 0xa0, 0xcb,
	0x58, 0x2f, 0xc3, 0xcc, 0x1e, 0xdb, 0x97, 0x1f, 0x52, 0x17, 0x45, 0x6f, 0xb2, 0x7d, 0x89, 0x26,
	0x72, 0xac, 0xdb, 0x50, 0x93, 0xda, 0x8a, 0x3e, 0x97, 0x8b, 0xb8, 0xb6, 0xf1, 0xea, 0x70, 0x1d,
	0x9b, 0x29, 0x92, 0x2c, 0x6e, 0x96, 0xb3, 0xae, 0xc2, 0x42, 0xd4, 0x73, 0xc5, 0x14, 0x96, 0x0a,
	0x39, 0xcb, 0x9c, 0x6f, 0xc4, 0x23, 0x1d, 0x85, 0x62, 0x7d, 0x5f, 0x2c, 0x67, 0xd7, 0x3b, 0x6e,
	0xc5, 0x2c, 0x3a, 0x90, 0x72, 0x62, 0xc1, 0x77, 0xdd, 0x12, 0x38, 0x8f, 0x58, 0x74, 0xa0, 0xbe,
	0xab, 0xa3, 0x00, 0xd6, 0x0d, 0x53, 0x99, 0x5c, 0xdb, 0xb8, 0x38, 0x5c, 0xf8, 0x91, 0xc8, 0x96,
	0x05, 0xa5, 0xd8, 0x73, 0x15, 0x2c, 0x9f, 0x1f, 0xb5, 0x42, 0x2e, 0xfa, 0x67, 0x9f, 0x77, 0xe8,
	0xd8, 0x55, 0xa1, 0x2d, 0xc9, 0xe7, 0x47, 0x8e, 0xca, 0x10, 0xc7, 0x26, 0x6b, 0x1b, 0xea, 0xac,
	0x1d, 0xbb, 0x87, 0x6e, 0x2c, 0xdb, 0x59, 0xc5, 0xaa, 0x5e, 0x2b, 0xea, 0x1b, 0x42, 0x33, 0x9a,
	0xba, 0xc8, 0x0c, 0x58, 0xf3, 0x3e, 0xac, 0x0c, 0xf5, 0x9f, 0xf5, 0x21, 0xc0, 0x20, 0x0c, 0xf6,
	0x43, 0x1e, 0x45, 0x3c, 0x92, 0xb3, 0xe3, 0x2c, 0x11, 0xd7, 0xa8, 0x3b, 0x12, 0xc1, 0x31, 0x50,
	0x9b, 0x77, 0xc4, 0x5e, 0x99, 0xaf, 0xd1, 0xba, 0x5e, 0x40, 0x0e, 0x37, 0x3e, 0x81, 0x53, 0x48,
	0xe7, 0x09, 0x2c, 0xe5, 0x66, 0x8e, 0x75, 0x0d, 0xc0, 0xd8, 0xac, 0xe9, 0x14, 0x86, 0xb3, 0x46,
	0x23, 0x3a, 0x06, 0x02, 0x6e, 0x70, 0x07, 0xae, 0x1f, 0xc9, 0x1d, 0x82, 0x12, 0xcd, 0x2d, 0x58,
	0xca, 0x8d, 0xdc, 0xd7, 0x68, 0xdc, 0x87, 0xb0, 0x94, 0x5b, 0x17, 0x45, 0x47, 0x37, 0xdc, 0xa8,
	0x14, 0x7f, 0xc1, 0x44, 0xf3, 0x2a, 0xd4, 0x8c, 0xa1, 0x17, 0x3b, 0x87, 0x18, 0x73, 0x9c, 0x00,
	0x4a, 0xfc, 0xa8, 0xfa, 0xfc, 0x08, 0x71, 0x22, 0x3b, 0x80, 0x53, 0x05, 0xdd, 0x3d, 0x54, 0xd5,
	0x1a, 0x2c, 0xe0, 0x80, 0xcb, 0x55, 0x58, 0x77, 0x54, 0x52, 0x48, 0x21, 0x5a, 0xdb, 0x37, 0x43,
	0x1a, 0x5a, 0x95, 0x16, 0xac, 0x4d, 0xb4, 0x41, 0xee, 0x8c, 0xf8, 0xdb, 0xfe, 0xdf, 0x4a, 0xa2,
	0x46, 0xb1, 0x7b, 0x6e, 0xfa, 0x77, 0x99, 0xbf, 0xbf, 0xd9, 0xe9, 0x88, 0x7f, 0x28, 0x3f, 0x70,
	0x16, 0x6b, 0xf9, 0x81, 0xb3, 0x58, 0xb3, 0xc6, 0xb2, 0xc1, 0x1a, 0x51, 0xa0, 0x17, 0x9f, 0xa2,
	0x05, 0x7a, 0x8f, 0x47, 0xd6, 0x87, 0x50, 0x0d, 0x06, 0x3c, 0x64, 0xb8, 0x5d, 0xd3, 0x1a, 0xc6,
	0xc3, 0xf3, 0x17, 0x03, 0x01, 0x61, 0xde, 0x17, 0x2a, 0x53, 0xcc, 0x6c, 0x27, 0xc5, 0x15, 0xe4,
	0x84, 0x20, 0x1a, 0xad, 0xcd, 0xd3, 0x49, 0x00, 0x13, 0xe2, 0xa3, 0xbe, 0xea, 0x71, 0x5f, 0x88,
	0x44, 0xb8, 0xc0, 0x2a, 0x8e, 0x4e, 0x5b, 0x6f, 0x0b, 0xd9, 0xdf, 0xdf, 0x1f, 0x30, 0x37, 0x92,
	0x5b, 0xed, 0x12, 0x0e, 0xa4, 0xeb, 0xef, 0xef, 0x30, 0x77, 0xdb, 0xef, 0x06, 0x8e, 0x46, 0xb0,
	0xff, 0xdb, 0x12, 0xd4, 0xe8, 0x6b, 0x6f, 0xb2, 0x9b, 0xdc, 0x2d, 0xfc, 0xca, 0x5f, 0xd3, 0xb6,
	0x0b, 0xf2, 0xfd, 0xe0, 0x99, 0xcb, 0x71, 0xdd, 0x57, 0x1c, 0x4a, 0xd8, 0xff, 0x7a, 0x59, 0xac,
	0x65, 0x3c, 0xda, 0xf7, 0xdc, 0x1d, 0x2e, 0x04, 0xd5, 0xaf, 0x37, 0x7a, 0x33, 0xe9, 0xe8, 0x89,
	0x89, 0x1c, 0x06, 0x7d, 0x3a, 0x8e, 0x89, 0x89, 0x2c, 0x12, 0xd6, 0xab, 0x30, 0x2b, 0xc4, 0x09,
	0xc9, 0x4f, 0xb1, 0xa1, 0xe2, 0x90, 0xb3, 0x9b, 0xb4, 0xdb, 0x62, 0xb1, 0x60, 0x66, 0xb6, 0xf3,
	0xe6, 0x4f, 0xd0, 0x79, 0xe3, 0xba, 0x69, 0x63, 0xa8, 0x9b, 0xce, 0x18, 0xdd, 0x74, 0xcb, 0x8d,
	0xda, 0x2c, 0xec, 0xe4, 0x46, 0xfa, 0xaf, 0x96, 0x85, 0x48, 0x2c, 0x48, 0xdf, 0xe2, 0xcc, 0x7b,
	0xe4, 0x7a, 0x7c, 0x64, 0xa7, 0xb8, 0x9e, 0xba, 0xaf, 0xc4, 0xdf, 0x42, 0x08, 0xf4, 0x78, 0x37,
	0x6e, 0x89, 0x44, 0xe6, 0x24, 0x52, 0x17, 0x60, 0x41, 0x8a, 0x04, 0xca, 0xaf, 0x3d, 0x51, 0xa6,
	0xea, 0xc9, 0x93, 0xcf, 0xa6, 0xaf, 0xd3, 0x4d, 0x7f, 0xa0, 0xa7, 0x8f, 0xcc, 0x3f, 0x51, 0x4f,
	0x9d, 0x85, 0x05, 0x37, 0x6a, 0xe1, 0xb7, 0x10, 0xaf, 0x99, 0x77, 0xa3, 0xfb, 0x43, 0xd3, 0xe0,
	0x84, 0x6b, 0x88, 0x26, 0xf9, 0x9c, 0x31, 0xc9, 0x33, 0x5f, 0x3d, 0x3f, 0x66, 0x0d, 0x2d, 0x4c,
	0xb1, 0x86, 0xa8, 0x53, 0x2b, 0x66, 0xa7, 0x9e, 0x83, 0x8a, 0x1b, 0xb5, 0x8e, 0xf0, 0x3b, 0x68,
	0x71, 0x2d, 0xb8, 0xd1, 0x8f, 0x44, 0xd2, 0xfe, 0x07, 0x25, 0x00, 0xea, 0x9f, 0x7b, 0x89, 0xc7,
	0x2d, 0x1b, 0xe6, 0x7a, 0x89, 0xa7, 0xb7, 0x8c, 0x45, 0x51, 0x93, 0xc8, 0xc0, 0x6a, 0x28, 0x4b,
	0x70, 0x78, 0x71, 0xcc, 0x40, 0xb1, 0x93, 0xf6, 0xac, 0x39, 0xa7, 0x1a, 0x78, 0x1d, 0x94, 0x5a,
	0x23, 0x71, 0xc2, 0xef, 0x70, 0x2f, 0x66, 0x0a, 0x61, 0x06, 0x11, 0x6a, 0x08, 0x4b, 0x51, 0x8e,
	0x98, 0x4b, 0xb7, 0x70, 0x41, 0xa2, 0x4e, 0x32, 0x35, 0x01, 0x7b, 0x44, 0x20, 0xeb, 0x0c, 0xcc,
	0xcb, 0xf2, 0x73, 0x58, 0x5e, 0xa6, 0xac, 0xd7, 0x61, 0x41, 0x88, 0x8f, 0xe2, 0xdc, 0x41, 0xab,
	0xaf, 0xa6, 0xce, 0x9a, 0xb7, 0xfd, 0x8e, 0xa3, 0xf2, 0xd2, 0x7e, 0x58, 0x30, 0xfa, 0xc1, 0xfe,
	0x33, 0xcd, 0x1d, 0xef, 0xbb, 0xc9, 0xe7, 0x49, 0xa1, 0x28, 0x6c, 0x54, 0x50, 0x1e, 0x53, 0x81,
	0x9a, 0x41, 0x33, 0xc6, 0x0c, 0xd2, 0xcc, 0x66, 0xd6, 0x64, 0x36, 0x53, 0x2d, 0x86, 0xcb, 0xd0,
	0x60, 0x9e, 0x37, 0xf0, 0xd8, 0x31, 0x0f, 0x89, 0x06, 0xad, 0x8a, 0x1c, 0xd4, 0x5e, 0x12, 0x12,
	0xaf, 0xf8, 0x80, 0x07, 0x9f, 0xef, 0xc6, 0x2c, 0x8c, 0xed, 0x5f, 0xcc, 0x28, 0x36, 0xf0, 0x90,
	0x1f, 0x91, 0xba, 0x52, 0x1c, 0x03, 0x0c, 0x0d, 0x0c, 0x25, 0xc4, 0x0e, 0xfb, 0x54, 0xa9, 0x5b,
	0xca, 0x4f, 0x13, 0x21, 0xf2, 0xef, 0x71, 0xa5, 0xd9, 0x11, 0x3f, 0x47, 0x34, 0x5f, 0xec, 0xa9,
	0x41, 0xc8, 0xb0, 0xf9, 0x55, 0x07, 0x7f, 0x1b, 0x83, 0x33, 0x9f, 0x19, 0x9c, 0xcc, 0xaa, 0x58,
	0x38, 0x19, 0x73, 0x14, 0xdd, 0xb0, 0x27, 0x5a, 0x4d, 0x97, 0xa8, 0x3a, 0x6d, 0xbd, 0x07, 0x55,
	0x35, 0xbd, 0xaf, 0xaf, 0x55, 0xc7, 0x2e, 0xfb, 0x14, 0xd1, 0xba, 0x96, 0x96, 0x7a, 0x77, 0x0d,
	0x8a, 0x97, 0x4d, 0x8a, 0x21, 0x7a, 0x87, 0xd1, 0xd5, 0x6b, 0xc5, 0x29, 0x33, 0x4f, 0xf4, 0x4e,
	0xbf, 0xf3, 0x3e, 0x9e, 0x0b, 0xab, 0x8e, 0xf8, 0x59, 0xc4, 0x34, 0xeb, 0x05, 0x4c, 0xd3, 0xfe,
	0xa3, 0x12, 0x2c, 0xca, 0x01, 0x09, 0x90, 0xd7, 0xe4, 0x95, 0xe6, 0x25, 0xac, 0x24, 0x7b, 0x8d,
	0xb9, 0x4e, 0xd7, 0xeb, 0xa9, 0x0c, 0x78, 0x5a, 0xb4, 0x95, 0x08, 0xec, 0x60, 0x06, 0x36, 0x58,
	0x21, 0x59, 0x6f, 0xeb, 0x01, 0x98, 0x41, 0xf4, 0x53, 0x29, 0x3a, 0x2e, 0x31, 0xc4, 0x56, 0xa3,
	0xb2, 0x96, 0xce, 0x68, 0xba, 0xd6, 0x57, 0x49, 0xfb, 0x01, 0x2c, 0x51, 0x53, 0x77, 0xc2, 0x20,
	0x0e, 0x70, 0xfa, 0x17, 0xa9, 0x55, 0x2c, 0x98, 0x35, 0x6c, 0x5e, 0xf0, 0xb7, 0x14, 0xb5, 0x48,
	0xe1, 0xb3, 0x88, 0xa2, 0x16, 0xb3, 0x8f, 0xa1, 0xa2, 0xe4, 0x64, 0xeb, 0x65, 0x71, 0xcc, 0x91,
	0xc2, 0xbc, 0x96, 0xec, 0x40, 0x81, 0xc8, 0x5c, 0x21, 0x12, 0x33, 0x38, 0x63, 0xae, 0x80, 0x10,
	0xbc, 0x89, 0x3f, 0x07, 0x15, 0xee, 0x77, 0xcc, 0xbb, 0xa2, 0x05, 0xee, 0x77, 0x30, 0x4b, 0xad,
	0xda, 0x59, 0xc9, 0xa8, 0x8f, 0x07, 0xdc, 0xfe, 0x79, 0x09, 0x2e, 0xa8, 0xba, 0x37, 0xdb, 0xed,
	0xa4, 0x9f, 0x78, 0x2c, 0xe6, 0x1d, 0xd4, 0xe2, 0xe1, 0xb1, 0x75, 0x62, 0x7b, 0x4e, 0xc3, 0x9c,
	0xa9, 0x19, 0xa6, 0x84, 0x38, 0xc1, 0xec, 0x33, 0xd7, 0xe7, 0x9d, 0x56, 0xc8, 0x8f, 0x58, 0x28,
	0x4f, 0x30, 0x24, 0x7d, 0x2f, 0x53, 0x8e, 0x83, 0x19, 0x62, 0x46, 0xdb, 0xff, 0x76, 0x09, 0x56,
	0x55, 0x2b, 0xc4, 0x39, 0x3e, 0xad, 0xfe, 0x75, 0x68, 0x78, 0x9c, 0x75, 0x78, 0xb8, 0x17, 0x08,
	0x2a, 0xba, 0x05, 0x75, 0x03, 0x3a, 0xb2, 0x11, 0x78, 0x8e, 0x36, 0x1a, 0x21, 0xf7, 0xa2, 0x45,
	0xb3, 0x7e, 0x85, 0xc4, 0xf6, 0x3c, 0x6e, 0x5a, 0x3f, 0x2c, 0x2a, 0xa0, 0xe8, 0x3a, 0xfb, 0x21,
	0x2c, 0x6e, 0xfa, 0x7e, 0x90, 0xf8, 0x6d, 0x3a, 0x45, 0x16, 0x48, 0xf8, 0x74, 0xca, 0x2b, 0x9b,
	0xda, 0x6b, 0x14, 0xc6, 0xfd, 0x98, 0x4b, 0x39, 0xa1, 0xea, 0xa8, 0xa4, 0xfd, 0x11, 0xd4, 0x33,
	0x26, 0x48, 0xd6, 0x1b, 0xb0, 0x44, 0xd6, 0x13, 0xad, 0x4e, 0x22, 0xf9, 0x80, 0xd4, 0x03, 0x13,
	0xf8, 0x96, 0x84, 0xda, 0xaf, 0xc3, 0xcc, 0x4d, 0xb6, 0x6f, 0xbd, 0x04, 0x73, 0x6e, 0xcc, 0xfb,
	0x6a, 0xbf, 0xa9, 0x88, 0x79, 0xbc, 0x1d, 0xf3, 0xbe, 0x43, 0x60, 0xfb, 0x23, 0xa8, 0xea, 0xf3,
	0xb3, 0xf5, 0x36, 0x2c, 0x26, 0xf8, 0xab, 0x55, 0x5c, 0xa6, 0x46, 0xb9, 0xdb, 0x58, 0xf2, 0xdf,
	0x2d, 0xc1, 0xe2, 0x4d, 0xd7, 0xf3, 0x5c, 0x7f, 0xff, 0x6e, 0x10, 0x74, 0xcc, 0x23, 0x46, 0x15,
	0xbf, 0x75, 0xd4, 0xac, 0xe6, 0x51, 0x5b, 0x7e, 0x26, 0xfe, 0x16, 0x30, 0xb7, 0x2d, 0x77, 0xf9,
	0xaa, 0x83, 0xbf, 0xc5, 0x6c, 0x0a, 0x79, 0x14, 0x24, 0x61, 0x9b, 0xa7, 0x16, 0x5b, 0xa0, 0x40,
	0xdb, 0x1d, 0x31, 0xde, 0x1a, 0x81, 0x98, 0x85, 0x52, 0xb3, 0x49, 0x28, 0x31, 0x8b, 0x3f, 0x2c,
	0x41, 0x43, 0x36, 0x72, 0x27, 0x0c, 0x3a, 0x49, 0x3b, 0xb6, 0x2e, 0xc3, 0xdc, 0xbe, 0x68, 0xaf,
	0xbc, 0xe5, 0xc4, 0x43, 0x9b, 0xf9, 0x1d, 0x0e, 0x65, 0xa3, 0x29, 0x4d, 0x12, 0x86, 0xdc, 0x6f,
	0x1f, 0xb7, 0xda, 0x41, 0x47, 0x7d, 0xc7, 0xa2, 0x02, 0x6e, 0x05, 0x1d, 0xb1, 0x99, 0x35, 0x34,
	0xd2, 0x20, 0x74, 0xdb, 0x6a, 0x2d, 0xe9, 0xa2, 0x3b, 0x02, 0x28, 0x3e, 0x27, 0x0a, 0xc2, 0xb8,
	0x75, 0xc4, 0xdd, 0xfd, 0x9e, 0xda, 0x8e, 0x41, 0x80, 0x7e, 0x84, 0x10, 0xfb, 0x5d, 0xa8, 0xde,
	0x4c, 0x8e, 0xe5, 0xa5, 0xc8, 0x74, 0x46, 0x4c, 0x0f, 0xe1, 0xf4, 0x96, 0xd8, 0x78, 0xf8, 0x43,
	0x69, 0x9c, 0x23, 0x4b, 0x5b, 0x30, 0x2b, 0xc4, 0x6d, 0x39, 0x10, 0xf8, 0x5b, 0x50, 0x8c, 0x03,
	0xf9, 0x01, 0xe5, 0x38, 0x20, 0x51, 0x4c, 0x2f, 0x7c, 0xfc, 0x6d, 0xff, 0xa2, 0x0c, 0x55, 0x7d,
	0x28, 0x16, 0x3b, 0x90, 0x38, 0x16, 0xeb, 0x76, 0xc8, 0x94, 0x68, 0x0b, 0x5d, 0xb2, 0xca, 0xb6,
	0x90, 0xcd, 0xcc, 0x32, 0xcc, 0xf0, 0xe7, 0x03, 0xb5, 0xd7, 0xf1, 0xe7, 0x03, 0xeb, 0x1d, 0x98,
	0x3b, 0x74, 0xf9, 0x51, 0x24, 0x0d, 0x46, 0xce, 0x65, 0x8e, 0xdc, 0xeb, 0x4f, 0x5c, 0x7e, 0xb4,
	0xeb, 0x05, 0xf1, 0x2e, 0x8f, 0x1d, 0xc2, 0x43, 0xbe, 0x78, 0xe0, 0xfa, 0x72, 0xa8, 0xf1, 0xb7,
	0xe8, 0x36, 0x37, 0x6a, 0x25, 0x83, 0xfd, 0x90, 0x75, 0x78, 0x47, 0x0a, 0x6e, 0xe0, 0x46, 0x8f,
	0x25, 0x44, 0x20, 0xf0, 0xe7, 0x71, 0xc8, 0x5a, 0xbc, 0x1f, 0x3c, 0x75, 0x51, 0x16, 0xa9, 0x3b,
	0x80, 0xa0, 0xdb, 0x02, 0xd2, 0xfc, 0x18, 0x6a, 0x46, 0x5d, 0x58, 0x89, 0x17, 0xa4, 0x62, 0xa9,
	0x17, 0xc4, 0x28, 0x82, 0xc6, 0xbc, 0x9f, 0x9a, 0x42, 0xcd, 0x8b, 0xe4, 0x76, 0xc7, 0xfe, 0xcb,
	0x25, 0xd1, 0x21, 0x3c, 0x22, 0x06, 0x73, 0x0e, 0x2a, 0x6d, 0xd4, 0x6a, 0xea, 0x2e, 0x59, 0xc0,
	0xf4, 0x76, 0xc7, 0xba, 0x02, 0x74, 0x05, 0xd2, 0x0a, 0x06, 0xdc, 0xcf, 0xde, 0xf9, 0x20, 0xfc,
	0x8b, 0x01, 0x27, 0xfd, 0x28, 0xce, 0xa9, 0xc0, 0x8f, 0x92, 0x7e, 0xf6, 0x58, 0xb0, 0x28, 0x81,
	0xfa, 0xf6, 0xa4, 0xcb, 0xda, 0xbc, 0xb5, 0xe7, 0xb1, 0xf6, 0x41, 0xfe, 0x92, 0xa2, 0xcd, 0x6f,
	0x0a, 0x30, 0xcd, 0xee, 0xdf, 0x84, 0x9a, 0x6e, 0xe0, 0x93, 0x8d, 0x17, 0xd3, 0xc4, 0xa2, 0xda,
	0x67, 0x46, 0xd4, 0xbe, 0xbc, 0xe5, 0xb9, 0xdc, 0x8f, 0x6f, 0xf1, 0x43, 0xb7, 0x8d, 0x5b, 0xa2,
	0x18, 0x90, 0x0e, 0xa6, 0x5a, 0x5a, 0xee, 0xab, 0x3a, 0x40, 0xa0, 0x47, 0x62, 0xfb, 0x6b, 0x40,
	0x39, 0x88, 0xd4, 0x4c, 0x0c, 0x48, 0xd6, 0x8d, 0xb4, 0xb5, 0x1a, 0xb1, 0x85, 0x6a, 0x10, 0x29,
	0x53, 0xb5, 0x35, 0x58, 0xd8, 0x0b, 0x83, 0xa3, 0x88, 0x87, 0x92, 0x3d, 0xa8, 0xa4, 0xfd, 0x7b,
	0x25, 0xa8, 0x6d, 0x05, 0x7d, 0xc1, 0x65, 0x05, 0x3f, 0x12, 0x84, 0xda, 0x94, 0x34, 0x8c, 0xf7,
	0x24, 0x64, 0xbb, 0x63, 0x5d, 0x10, 0xe2, 0x4a, 0x9f, 0x47, 0x31, 0xeb, 0x0f, 0xd4, 0x66, 0xa8,
	0x01, 0xd6, 0x75, 0x50, 0xa8, 0x3c, 0x94, 0xaa, 0x45, 0x54, 0xf7, 0x91, 0x68, 0x70, 0x93, 0x45,
	0x68, 0x5d, 0xe7, 0xa4, 0x48, 0x26, 0xcb, 0x9e, 0xcd, 0xb2, 0xec, 0xff, 0xa6, 0x0c, 0xe7, 0x86,
	0x6c, 0x66, 0x36, 0xf7, 0xa2, 0x58, 0xcc, 0x7d, 0xeb, 0x3c, 0x54, 0x13, 0xdf, 0x7d, 0x96, 0xf0,
	0xb4, 0x95, 0x15, 0x02, 0xd0, 0x96, 0xad, 0xcc, 0x7b, 0x52, 0xc3, 0x3c, 0x09, 0xd9, 0xee, 0x08,
	0xa9, 0x5e, 0x65, 0x1b, 0xc6, 0x79, 0x35, 0x09, 0x7b, 0x28, 0xf8, 0xab, 0xbe, 0xa0, 0x99, 0x35,
	0x2e, 0x68, 0x90, 0x6e, 0xc8, 0x59, 0x1c, 0x84, 0x29, 0x33, 0xad, 0x4a, 0xc8, 0x36, 0xae, 0x22,
	0x4c, 0xc8, 0x7d, 0x8d, 0x18, 0x29, 0x95, 0xc0, 0x5d, 0x2d, 0x27, 0x4a, 0x2c, 0xe4, 0x45, 0x09,
	0xba, 0xf9, 0x75, 0x95, 0xe5, 0x09, 0xc9, 0x97, 0x40, 0x20, 0x25, 0x50, 0x88, 0x79, 0x27, 0x8f,
	0x46, 0xf8, 0x5b, 0x2c, 0x85, 0x41, 0xb2, 0xe7, 0xb9, 0xed, 0x96, 0x1f, 0xc4, 0x82, 0x71, 0x02,
	0xb1, 0x57, 0x02, 0x3e, 0x44, 0x98, 0xfd, 0xef, 0x94, 0x61, 0x75, 0xa8, 0x2f, 0xc5, 0x70, 0xfc,
	0xb3, 0x7e, 0x94, 0xfd, 0x68, 0xff, 0x2b, 0x33, 0x70, 0x76, 0xa8, 0x8b, 0xc8, 0xa2, 0xe5, 0x9f,
	0x75, 0x92, 0x9a, 0x6c, 0xe7, 0x01, 0xef, 0x80, 0x5a, 0x61, 0xe2, 0x71, 0x79, 0xb3, 0x55, 0x11,
	0x00, 0x47, 0x1c, 0xc9, 0xdf, 0x34, 0x0d, 0x2e, 0xc9, 0x38, 0x74, 0x51, 0xdf, 0xaf, 0x66, 0xcd,
	0x2b, 0x5f, 0x87, 0xc6, 0x20, 0x74, 0x0f, 0x45, 0xeb, 0xe5, 0xac, 0xa5, 0x03, 0x4c, 0x5d, 0x42,
	0xe5, 0xb4, 0xfd, 0x49, 0xc1, 0x90, 0xdc, 0x7e, 0x1e, 0x73, 0x32, 0xcc, 0x1e, 0x3d, 0x24, 0x43,
	0x6b, 0xa2, 0x5c, 0xb0, 0x26, 0xfe, 0xb4, 0x04, 0x6b, 0x43, 0xd4, 0xe5, 0xf1, 0xd9, 0xfa, 0x24,
	0x3d, 0xe7, 0x18, 0xb7, 0x33, 0xa3, 0xd0, 0x49, 0xaa, 0x53, 0x25, 0x9a, 0x7b, 0x30, 0xab, 0x58,
	0xe9, 0xd7, 0xb5, 0xd2, 0xd7, 0xd7, 0xf7, 0xe9, 0xa5, 0xff, 0x9c, 0xbc, 0xbe, 0x47, 0x59, 0x5d,
	0x48, 0xf0, 0xcd, 0xc2, 0xe6, 0xe0, 0x69, 0xdb, 0xfa, 0x34, 0xdf, 0xfe, 0x57, 0x47, 0xb6, 0x1f,
	0x0b, 0xe4, 0xbe, 0x60, 0xf3, 0x1b, 0x7f, 0x81, 0xfd, 0xb7, 0x4a, 0x70, 0x71, 0xa8, 0x3e, 0xda,
	0x07, 0x1c, 0x3e, 0x08, 0xc2, 0x38, 0x3b, 0x99, 0x4a, 0xb9, 0xc9, 0xa4, 0xee, 0x14, 0xcb, 0xc6,
	0x9d, 0xa2, 0x3e, 0x74, 0xcc, 0x98, 0x87, 0x8e, 0xb7, 0x40, 0x5a, 0xf0, 0x48, 0x4b, 0x1d, 0xe6,
	0x1f, 0x28, 0x7d, 0xe9, 0x12, 0x65, 0xa0, 0xc1, 0x8d, 0x00, 0xa7, 0xdb, 0x77, 0x7a, 0xe5, 0x2d,
	0x57, 0x16, 0x6d, 0xdf, 0x77, 0xd5, 0x9d, 0xb7, 0xfd, 0x1c, 0xe6, 0x6e, 0x87, 0x61, 0x10, 0x8a,
	0x86, 0xb4, 0x8d, 0x3b, 0x73, 0xf1, 0x5b, 0x74, 0x4b, 0x72, 0x63, 0xa3, 0x35, 0x60, 0x21, 0xeb,
	0xd3, 0x41, 0xb8, 0xee, 0x54, 0x93, 0x1b, 0x1b, 0x3b, 0x08, 0xa0, 0x95, 0x17, 0xaa, 0x6c, 0x52,
	0xe8, 0x56, 0xa3, 0x38, 0x4c, 0xb3, 0x9f, 0x46, 0x81, 0x4f, 0xf9, 0x72, 0xd7, 0xab, 0x0a, 0x08,
	0xe6, 0xdb, 0x77, 0xa1, 0x71, 0xfb, 0x39, 0xaa, 0x42, 0x94, 0x24, 0x8a, 0xd2, 0x19, 0x41, 0x8c,
	0x23, 0xa1, 0x02, 0x6d, 0x8f, 0x12, 0x6c, 0xff, 0x52, 0x09, 0xea, 0xb7, 0x9f, 0xf3, 0x76, 0x12,
	0x73, 0x79, 0xf4, 0xba, 0x0c, 0xf3, 0xf2, 0x60, 0x46, 0x32, 0x7b, 0x43, 0x4c, 0x0a, 0xca, 0x13,
	0x92, 0x9d, 0x23, 0x73, 0xad, 0x2b, 0xb0, 0x10, 0xf2, 0x81, 0xc7, 0xe4, 0xca, 0x19, 0x46, 0x54,
	0xd9, 0x62, 0xa5, 0xc9, 0x9f, 0x59, 0x41, 0x4c, 0x02, 0xa9, 0x2f, 0x13, 0xa8, 0xde, 0x61, 0x6e,
	0xdc, 0x53, 0xf2, 0x5f, 0x57, 0x24, 0x0c, 0xe1, 0x0a, 0xd3, 0x2f, 0x5c, 0xfe, 0xb3, 0x3f, 0x83,
	0x85, 0x3b, 0xcc, 0x47, 0x71, 0x4a, 0x1d, 0xa1, 0x4a, 0xc6, 0x11, 0x6a, 0x19, 0x66, 0x0e, 0x99,
	0x92, 0xbf, 0xc5, 0x4f, 0x79, 0x5e, 0x98, 0x51, 0xe7, 0x05, 0xfb, 0x67, 0x30, 0x7f, 0x07, 0x4d,
	0x93, 0xad, 0xcb, 0x30, 0xbb, 0xc7, 0x22, 0x2e, 0xbb, 0xad, 0x48, 0xa4, 0xc1, 0x7c, 0xeb, 0xaa,
	0x69, 0xd7, 0x91, 0x35, 0xef, 0x36, 0x1c, 0x24, 0x94, 0xbd, 0xc7, 0x80, 0x6c, 0xc1, 0xb6, 0x02,
	0xbf, 0xeb, 0xee, 0x8f, 0xb5, 0xe0, 0xbe, 0x24, 0x0d, 0x37, 0xca, 0x05, 0x5c, 0x55, 0x99, 0x71,
	0x4c, 0x63, 0xd7, 0x12, 0xc0, 0x92, 0xac, 0xd1, 0xe7, 0xed, 0x18, 0xbb, 0x86, 0xba, 0x52, 0x24,
	0x5b, 0x71, 0x70, 0xc0, 0x7d, 0x7d, 0x3c, 0x23, 0xe0, 0x23, 0x01, 0xcb, 0x9a, 0xdb, 0xcc, 0x0c,
	0x9b, 0xdb, 0x78, 0x41, 0x3b, 0xd5, 0x30, 0x57, 0x1d, 0x9d, 0xb6, 0xaf, 0xc1, 0x8a, 0xa8, 0x90,
	0xf6, 0x51, 0x9a, 0xce, 0xa8, 0xe7, 0x09, 0xe9, 0x27, 0x32, 0xa7, 0x45, 0x47, 0x25, 0xed, 0xbf,
	0xb7, 0x08, 0x0d, 0x03, 0x5f, 0x30, 0x82, 0x8b, 0x00, 0x62, 0x83, 0x6a, 0x75, 0xdd, 0xe7, 0x5c,
	0xb3, 0x20, 0x01, 0xb9, 0x23, 0x00, 0x64, 0x70, 0xd6, 0xe7, 0x2d, 0xd6, 0x51, 0x7b, 0xef, 0x82,
	0x48, 0x6f, 0x76, 0x70, 0x63, 0x36, 0x6c, 0xac, 0xa4, 0x09, 0x53, 0x6a, 0x5c, 0xb5, 0x86, 0x17,
	0xd3, 0x9d, 0x84, 0xf9, 0x72, 0xdf, 0x55, 0x49, 0x51, 0xd0, 0xf5, 0xdd, 0x58, 0xf2, 0x5e, 0xb9,
	0xf3, 0x0a, 0x08, 0xb2, 0x5e, 0x51, 0xb0, 0xcb, 0xfc, 0x8e, 0xcb, 0x7c, 0xb9, 0xeb, 0xaa, 0xa4,
	0xe8, 0xa6, 0x36, 0xf3, 0x5b, 0x4f, 0xdd, 0x2e, 0x77, 0xd5, 0xa5, 0x40, 0x9b, 0xf9, 0x9f, 0x8b,
	0xb4, 0xd8, 0xf3, 0x62, 0x97, 0xf9, 0x7b, 0x2e, 0xf3, 0x5b, 0x64, 0x38, 0x44, 0x7b, 0x6e, 0x5d,
	0x41, 0x9f, 0x08, 0x20, 0x2a, 0x60, 0xa4, 0x46, 0x51, 0xa2, 0x55, 0xa5, 0x02, 0x46, 0x42, 0x09,
	0xed, 0x0d, 0x58, 0xc2, 0xe5, 0x6f, 0xe0, 0xd1, 0x7e, 0xdc, 0xd0, 0x60, 0x42, 0xb4, 0xa1, 0x2e,
	0x36, 0x41, 0x7f, 0xbf, 0xd5, 0x65, 0xdd, 0xa4, 0xf5, 0xae, 0xb2, 0x35, 0x21, 0xe0, 0x1d, 0xd6,
	0x4d, 0xde, 0xcd, 0xe3, 0x6c, 0x48, 0x33, 0x13, 0x03, 0x67, 0x23, 0x8f, 0x73, 0x43, 0x2a, 0x15,
	0x0d, 0x9c, 0x1b, 0xd6, 0xdb, 0xb0, 0xd2, 0x63, 0x87, 0xbc, 0x95, 0x51, 0x23, 0x36, 0xb0, 0x1f,
	0x96, 0x45, 0xc6, 0x7d, 0x53, 0x95, 0xf8, 0x2e, 0x9c, 0x46, 0xe4, 0x67, 0x2e, 0x47, 0x8b, 0x3b,
	0x85, 0xbf, 0x84, 0xf8, 0xa7, 0x44, 0xde, 0x0f, 0xb3, 0x59, 0xd6, 0x6b, 0xd0, 0xc0, 0x22, 0x7b,
	0x2e, 0x0b, 0x5a, 0xa8, 0xec, 0x5d, 0x26, 0x05, 0x93, 0x80, 0xde, 0x74, 0x59, 0x70, 0x2b, 0x08,
	0x99, 0x75, 0x0d, 0xb0, 0x70, 0x6b, 0x5f, 0x74, 0x4d, 0x8a, 0xba, 0x92, 0xb6, 0xe3, 0x2e, 0xf3,
	0xf7, 0x35, 0xfa, 0x27, 0xd0, 0x44, 0xc3, 0x1e, 0x9c, 0x2b, 0x6e, 0xbf, 0xcf, 0x3b, 0x2e, 0x8b,
	0xb9, 0x77, 0x8c, 0x5c, 0x68, 0xcd, 0xc2, 0x52, 0x67, 0x05, 0x86, 0xc0, 0xde, 0x4e, 0xf3, 0x05,
	0x37, 0xb2, 0x2e, 0xc1, 0xa2, 0xfc, 0x62, 0xaa, 0xe4, 0x14, 0x1d, 0xad, 0xe9, 0x63, 0x91, 0xfc,
	0x9b, 0xb2, 0x4f, 0xb0, 0x35, 0x0a, 0xed, 0x34, 0xa2, 0x35, 0x54, 0x5b, 0x24, 0xaa, 0xea, 0xbe,
	0xc8, 0xed, 0x72, 0x7f, 0xdf, 0x73, 0x99, 0xdf, 0x61, 0xe8, 0xe5, 0x25, 0x9b, 0xbd, 0x6b, 0xc0,
	0xad, 0x37, 0x61, 0x59, 0x22, 0x0b, 0xca, 0x11, 0xf3, 0x3d, 0x8e, 0x8e, 0x5e, 0x15, 0x67, 0x89,
	0x70, 0x35, 0x58, 0xcc, 0x15, 0x89, 0xfa, 0xd4, 0x65, 0x9e, 0xfb, 0x55, 0xcf, 0x5d, 0x3b, 0x9b,
	0x36, 0x60, 0x57, 0x43, 0xad, 0x77, 0x64, 0xcf, 0x3d, 0x75, 0x93, 0xaf, 0x7a, 0x81, 0xbf, 0xff,
	0xd4, 0x45, 0x0b, 0xcf, 0x35, 0x44, 0xb6, 0x44, 0xd6, 0xe7, 0x99, 0x9c, 0x94, 0x32, 0xf3, 0x9f,
	0xba, 0xac, 0xc7, 0x3d, 0xbe, 0x76, 0xce, 0xa0, 0xac, 0xa1, 0x42, 0x0a, 0x46, 0xc4, 0x38, 0x48,
	0x62, 0x97, 0x05, 0x6b, 0x4d, 0xc4, 0xaa, 0x09, 0xd8, 0x23, 0x02, 0xe9, 0xca, 0x05, 0xbe, 0x61,
	0xf1, 0x74, 0x3e, 0xad, 0xfc, 0x5e, 0x26, 0x47, 0xf7, 0x80, 0x28, 0x40, 0x8d, 0x4a, 0xd6, 0x2e,
	0xa4, 0x3d, 0x70, 0x2f, 0x05, 0x5b, 0xef, 0xc3, 0x19, 0xaa, 0x9e, 0xf4, 0xe8, 0x06, 0xf9, 0x8b,
	0x58, 0x60, 0x15, 0x1b, 0x92, 0xcf, 0xd4, 0x4d, 0x92, 0xc5, 0x54, 0x25, 0x2f, 0xa5, 0x4d, 0x7a,
	0x94, 0xc9, 0x11, 0x0c, 0x00, 0x0b, 0x1c, 0xbb, 0x5d, 0xb6, 0xf6, 0x32, 0x31, 0x00, 0x01, 0xf8,
	0xd2, 0xed, 0xa2, 0x6a, 0x15, 0x33, 0x7d, 0xe6, 0x87, 0xc9, 0x73, 0x37, 0x4c, 0xd6, 0x2e, 0x21,
	0x46, 0x5d, 0x40, 0x1f, 0x2a, 0xa0, 0xf5, 0x16, 0x2c, 0x3f, 0x75, 0xfd, 0xfd, 0x28, 0x61, 0xfe,
	0x71, 0x22, 0xf9, 0xcc, 0x2b, 0x64, 0x20, 0x9a, 0x87, 0xa3, 0x3e, 0xac, 0x97, 0xf8, 0x47, 0xdc,
	0xed, 0xb3, 0xd6, 0xc6, 0x9a, 0x4d, 0x62, 0xa2, 0x06, 0x6d, 0x64, 0x11, 0x6e, 0xac, 0xbd, 0x9a,
	0x43, 0xb8, 0x91, 0x45, 0x78, 0x6f, 0xed, 0xb5, 0x1c, 0xc2, 0x7b, 0x96, 0x0d, 0x8b, 0x82, 0x39,
	0x3d, 0x75, 0x79, 0xec, 0x46, 0x3d, 0x77, 0xed, 0x75, 0x5a, 0x71, 0x26, 0x4c, 0x30, 0x61, 0xe6,
	0x4a, 0xa7, 0x81, 0xcb, 0xc4, 0x12, 0x99, 0x4b, 0x56, 0xf5, 0x6a, 0xe0, 0xbf, 0x72, 0xfb, 0x41,
	0x94, 0xf8, 0x6b, 0x6f, 0xa4, 0x03, 0xff, 0x63, 0x02, 0x59, 0x1b, 0xb0, 0xda, 0x71, 0x23, 0xd4,
	0x07, 0xf7, 0x13, 0x2f, 0x76, 0x5b, 0xc7, 0xc9, 0x01, 0xeb, 0x33, 0x7f, 0xed, 0x0a, 0x71, 0x02,
	0x99, 0xf9, 0x40, 0xe4, 0x7d, 0x49, 0x59, 0x78, 0x31, 0xce, 0xfc, 0x6e, 0xb2, 0xf6, 0xa6, 0x36,
	0x88, 0xec, 0x62, 0xf7, 0xef, 0x27, 0xc7, 0x2e, 0x9d, 0x40, 0xde, 0xa2, 0x3d, 0x54, 0x00, 0xc4,
	0x3e, 0x69, 0xbf, 0x02, 0x0b, 0x4a, 0xba, 0x4f, 0xaf, 0x85, 0x4a, 0xe6, 0xb5, 0x90, 0xfd, 0x3a,
	0xd4, 0x25, 0xca, 0xa6, 0xf6, 0x4c, 0xa5, 0xfd, 0xbc, 0x64, 0xda, 0x69, 0xfe, 0x76, 0x59, 0xe3,
	0x49, 0x3b, 0xee, 0x0f, 0xf2, 0xe2, 0xf6, 0x05, 0xf3, 0x2e, 0x0e, 0x71, 0xa4, 0xc0, 0x90, 0x95,
	0xb3, 0xff, 0xf3, 0x12, 0x40, 0x0a, 0x2f, 0xbc, 0xed, 0xcd, 0x9d, 0x04, 0xca, 0xf9, 0x93, 0x80,
	0x60, 0x41, 0x03, 0x71, 0xcc, 0xc3, 0xfc, 0xd6, 0xbb, 0xea, 0xac, 0x20, 0x60, 0x88, 0xf0, 0x6e,
	0x0e, 0x63, 0x03, 0xb7, 0x3b, 0x13, 0x63, 0x03, 0x75, 0xf2, 0x21, 0xeb, 0x08, 0x36, 0x48, 0xa6,
	0x81, 0x73, 0x88, 0xb2, 0x28, 0x81, 0xda, 0xcc, 0x0f, 0x3d, 0x67, 0xe7, 0x31, 0x0f, 0x7f, 0xdb,
	0x7f, 0x56, 0xa1, 0x0d, 0x1e, 0xad, 0x3f, 0x77, 0x7d, 0x36, 0x88, 0x7a, 0x01, 0xaa, 0x07, 0x0d,
	0xc3, 0x5c, 0xfc, 0x5d, 0x6c, 0xf2, 0x9a, 0x11, 0x7a, 0x66, 0x46, 0x08, 0x3d, 0xb3, 0x13, 0x85,
	0x9e, 0xb9, 0x71, 0x42, 0x8f, 0xf5, 0x00, 0x96, 0xda, 0xcc, 0x6b, 0xe3, 0x45, 0x8b, 0x14, 0xba,
	0xe7, 0x53, 0x83, 0xad, 0xa1, 0xd6, 0xaf, 0x6f, 0x29, 0x64, 0x94, 0xc7, 0x9d, 0x46, 0x3b, 0x93,
	0xce, 0x1f, 0xbc, 0x17, 0x26, 0x1c, 0xbc, 0x2b, 0x13, 0x0e, 0xde, 0xd5, 0xa1, 0x83, 0xf7, 0x7b,
	0x30, 0x27, 0x46, 0x3e, 0x92, 0xb7, 0x81, 0x2f, 0x15, 0xb7, 0x12, 0x8f, 0x6e, 0x9c, 0xc5, 0x0e,
	0x21, 0x5b, 0xd7, 0x60, 0x1e, 0x6d, 0x55, 0xa3, 0xb5, 0x1a, 0x16, 0x5b, 0x55, 0xc5, 0xc8, 0x2c,
	0x5c, 0x16, 0x73, 0x24, 0x92, 0xf5, 0x21, 0xd4, 0xd5, 0xc9, 0x8e, 0xf4, 0xcb, 0x8b, 0x58, 0xca,
	0x10, 0x6d, 0x45, 0x59, 0x14, 0x6d, 0x17, 0x25, 0xe2, 0x13, 0xd4, 0x2f, 0xdf, 0x81, 0xba, 0x34,
	0x02, 0x96, 0x13, 0xbe, 0x9e, 0x9e, 0x8f, 0x87, 0x5b, 0x49, 0x56, 0xc1, 0x74, 0xea, 0x5b, 0xec,
	0xa6, 0x89, 0xa8, 0xf9, 0x9b, 0xd0, 0xc8, 0x76, 0x74, 0x4e, 0xec, 0x2a, 0xe5, 0xc5, 0xae, 0x22,
	0xbe, 0x58, 0x1e, 0xcd, 0x17, 0xf1, 0x68, 0x89, 0xa4, 0xd4, 0xcd, 0x3e, 0x9a, 0xbe, 0x22, 0xad,
	0xa8, 0xf9, 0x67, 0x25, 0xa8, 0x19, 0x6d, 0xfb, 0xf6, 0xad, 0xbc, 0xe6, 0xdf, 0x29, 0x41, 0x45,
	0xcd, 0x81, 0x42, 0xfb, 0x80, 0x09, 0xde, 0xc9, 0xdf, 0x85, 0x25, 0x21, 0xba, 0x75, 0x8f, 0x5b,
	0xdc, 0xef, 0xa4, 0xc7, 0x6a, 0x75, 0x45, 0xcb, 0xe3, 0xa3, 0x20, 0x3c, 0xb8, 0x2d, 0xb3, 0x9c,
	0x06, 0xe1, 0xaa, 0x34, 0xde, 0xd7, 0xa0, 0xce, 0x5a, 0x08, 0xde, 0x21, 0x8f, 0x22, 0x29, 0xf9,
	0xd7, 0x09, 0xba, 0x49, 0x40, 0xc1, 0xfd, 0xdd, 0xa8, 0x25, 0x8f, 0x12, 0xbc, 0x23, 0x6d, 0x49,
	0x6a, 0x6e, 0xb4, 0xa5, 0x40, 0xf6, 0xdf, 0x2e, 0xc1, 0xa2, 0xf8, 0x8e, 0xfb, 0xae, 0xd8, 0xb2,
	0x59, 0xa7, 0x90, 0x79, 0x4c, 0xb8, 0x83, 0x7d, 0x07, 0x6a, 0xf2, 0x40, 0x2f, 0x4e, 0x52, 0xf2,
	0x3b, 0x1a, 0x6a, 0x46, 0xd2, 0xf9, 0xca, 0x81, 0xfd, 0xf4, 0xac, 0x75, 0x35, 0xe5, 0xd7, 0xb3,
	0x23, 0xe7, 0xbd, 0xbe, 0xc4, 0x3e, 0x0f, 0x55, 0x31, 0x21, 0xe8, 0x4a, 0x75, 0x0e, 0x4f, 0xfb,
	0x15, 0x01, 0xc0, 0xab, 0xd4, 0x4f, 0xe9, 0x48, 0x25, 0x9a, 0xbf, 0xcb, 0xf7, 0xf1, 0xb2, 0xf2,
	0x2d, 0x58, 0x60, 0xb8, 0x7f, 0x64, 0x0c, 0x1a, 0x15, 0xd6, 0x63, 0xdf, 0x8d, 0x1d, 0x85, 0x60,
	0x3f, 0x02, 0x2b, 0x57, 0xfc, 0x71, 0xe8, 0xe2, 0xf7, 0x52, 0xca, 0xd0, 0xbb, 0x48, 0x08, 0xe9,
	0xfe, 0x54, 0x76, 0x12, 0xba, 0xf2, 0xc4, 0xa6, 0x4a, 0x3c, 0x0e, 0x5d, 0xfb, 0x30, 0xed, 0x53,
	0x51, 0x5d, 0x56, 0x6b, 0x5f, 0xca, 0x6b, 0xed, 0xdf, 0x80, 0x25, 0x6a, 0x4e, 0xde, 0x00, 0xba,
	0x41, 0x60, 0x6d, 0x02, 0x2d, 0xef, 0xa6, 0x03, 0xbf, 0x65, 0x5c, 0xa9, 0x03, 0x81, 0x04, 0xc3,
	0xb5, 0x19, 0xd5, 0xab, 0x18, 0xb0, 0xe9, 0x89, 0x5e, 0xca, 0x78, 0xa2, 0x9f, 0x85, 0x05, 0xc1,
	0xc1, 0x8d, 0xcb, 0x22, 0x91, 0x94, 0x6a, 0x4d, 0xa9, 0x2e, 0x4d, 0xf4, 0x61, 0x5c, 0x29, 0x58,
	0x1f, 0xbb, 0x1d, 0xfb, 0x7f, 0x90, 0xf3, 0x7e, 0xa4, 0x43, 0x43, 0x03, 0xca, 0xcc, 0x95, 0x06,
	0x04, 0x65, 0xe6, 0x5a, 0x2f, 0x01, 0x70, 0xd4, 0x19, 0xba, 0x7e, 0x37, 0x90, 0xd6, 0x21, 0x06,
	0xc4, 0xba, 0x01, 0x35, 0xe9, 0x1d, 0x8d, 0x8a, 0xa8, 0xf9, 0xf4, 0x88, 0x9f, 0x3d, 0x89, 0x3a,
	0xd0, 0x49, 0x4f, 0xa5, 0x0f, 0xe1, 0x94, 0x68, 0x90, 0x58, 0xb6, 0xdc, 0x3f, 0x74, 0xc3, 0xc0,
	0x47, 0x23, 0x69, 0xc3, 0xe6, 0x58, 0x14, 0x7e, 0x44, 0x28, 0xb7, 0x53, 0x8c, 0x5d, 0x1e, 0x3b,
	0x56, 0x3c, 0x04, 0xb6, 0xdf, 0xa3, 0x6d, 0x54, 0x99, 0xc6, 0x50, 0x1c, 0x05, 0x1c, 0x66, 0x46,
	0x2e, 0xca, 0xda, 0x44, 0x15, 0x04, 0x08, 0xf3, 0x23, 0x7b, 0x99, 0x4e, 0xcb, 0x0f, 0x83, 0x60,
	0x40, 0x02, 0x8b, 0xfd, 0x5b, 0x65, 0xa8, 0x49, 0xff, 0xb2, 0x58, 0x70, 0x8e, 0xab, 0x50, 0x89,
	0x24, 0x2f, 0x36, 0xef, 0x69, 0x91, 0x71, 0xa8, 0x2d, 0x41, 0x63, 0x58, 0xd7, 0xd2, 0x89, 0x5b,
	0x4e, 0xcd, 0x35, 0x72, 0x96, 0x17, 0x7a, 0xee, 0x5a, 0xeb, 0x70, 0x6a, 0xc0, 0xa2, 0x88, 0x77,
	0x5a, 0x47, 0xcc, 0xc5, 0xbe, 0x30, 0x2e, 0x43, 0x57, 0x28, 0xeb, 0x47, 0x94, 0xa3, 0x36, 0x46,
	0x5c, 0xa6, 0xa6, 0xb2, 0x1b, 0xf5, 0x0a, 0x3a, 0x6c, 0x84, 0xb1, 0xc8, 0xe7, 0xf2, 0x8b, 0xfc,
	0x6d, 0xb0, 0x3c, 0x16, 0xc5, 0xad, 0x01, 0x4b, 0x22, 0xda, 0x7b, 0x5b, 0xfd, 0x48, 0x9e, 0xc0,
	0x97, 0x44, 0xce, 0x8e, 0xc8, 0x10, 0xa8, 0x0f, 0x22, 0xfb, 0xbf, 0x9e, 0xa5, 0x65, 0x89, 0xbd,
	0x79, 0x2f, 0xc1, 0xc9, 0xf8, 0x8e, 0xf2, 0x58, 0x2b, 0xa5, 0x06, 0x3f, 0x39, 0x9c, 0xf5, 0x7b,
	0xc9, 0x0e, 0x73, 0x95, 0x33, 0xdb, 0xdb, 0x30, 0xdb, 0x65, 0xba, 0x2f, 0xce, 0x16, 0xe1, 0xdf,
	0x61, 0xbe, 0x83, 0x48, 0xa9, 0xbb, 0xe8, 0x8c, 0xe1, 0x2e, 0x6a, 0x2d, 0xc3, 0xcc, 0xf3, 0x44,
	0x29, 0x18, 0xc4, 0xcf, 0x8c, 0x87, 0xdc, 0x5c, 0xc6, 0x43, 0x4e, 0x2c, 0x8a, 0xae, 0x74, 0x64,
	0x99, 0xd7, 0x5e, 0x7c, 0xbb, 0x49, 0x1f, 0xfd, 0x7f, 0x12, 0xed, 0xe0, 0x22, 0xc4, 0xdd, 0x44,
	0x80, 0x5f, 0x85, 0xfa, 0x31, 0x3b, 0x10, 0x07, 0x6a, 0xa9, 0xe3, 0x20, 0x59, 0x63, 0x51, 0x02,
	0x49, 0xcd, 0x71, 0x19, 0x96, 0xf4, 0x19, 0x58, 0xa2, 0x49, 0x85, 0xc2, 0x9e, 0x3c, 0x01, 0x13,
	0xde, 0x6b, 0xd0, 0x08, 0x79, 0xc7, 0x44, 0x03, 0xa5, 0xca, 0xeb, 0xa4, 0x58, 0x36, 0xd4, 0xe5,
	0x19, 0x56, 0x22, 0x49, 0x6d, 0x82, 0xe7, 0xa6, 0x38, 0x2f, 0x43, 0x6d, 0x8f, 0xed, 0x71, 0xe9,
	0x04, 0x23, 0x75, 0x09, 0x80, 0x20, 0x7d, 0x35, 0xfa, 0x3c, 0x11, 0x1f, 0x2a, 0xce, 0xf6, 0x19,
	0x13, 0xa5, 0x86, 0x80, 0xef, 0x0a, 0x30, 0x62, 0x36, 0x3f, 0x85, 0x99, 0x3b, 0xcc, 0x9f, 0xee,
	0x22, 0x5f, 0xf4, 0x75, 0xea, 0x02, 0x28, 0x7e, 0x36, 0xb7, 0x60, 0x0e, 0x07, 0x54, 0x9b, 0x4c,
	0x96, 0x0c, 0x93, 0x49, 0xb5, 0xe5, 0x97, 0xb3, 0xa6, 0x95, 0xda, 0x86, 0xb2, 0x4e, 0x16, 0x6f,
	0xb6, 0x6f, 0xcc, 0x24, 0x29, 0x2d, 0xe8, 0xb1, 0x2e, 0x91, 0x22, 0x3a, 0xca, 0xb8, 0xc1, 0x98,
	0x2a, 0xeb, 0x77, 0x61, 0x5e, 0xba, 0x8e, 0xce, 0x14, 0x4c, 0x3a, 0xa5, 0x0e, 0x47, 0x6f, 0x51,
	0x89, 0x68, 0xff, 0x3f, 0x25, 0x58, 0x2d, 0xc4, 0x28, 0xdc, 0xe5, 0xb5, 0xc3, 0x66, 0xb9, 0xc8,
	0x61, 0x73, 0xc6, 0x70, 0xd8, 0x3c, 0x0f, 0x55, 0x74, 0x4d, 0xd2, 0x26, 0x49, 0xd2, 0x76, 0x0d,
	0xaf, 0x93, 0xc9, 0x7e, 0xb4, 0x9b, 0x78, 0x89, 0xdc, 0xa3, 0xe7, 0xdd, 0xe8, 0x4e, 0xe2, 0x25,
	0x62, 0x6f, 0x40, 0xc3, 0x52, 0x43, 0xa1, 0x43, 0xe6, 0x03, 0x0d, 0x37, 0xca, 0xa8, 0x73, 0x5e,
	0x86, 0x9a, 0x38, 0x39, 0xb7, 0xe4, 0xb9, 0x5a, 0x8a, 0xc5, 0x02, 0xf4, 0x63, 0x3a, 0x4c, 0xbf,
	0x0a, 0xe5, 0x5e, 0x82, 0x53, 0x54, 0xf2, 0x95, 0xdc, 0x5a, 0x72, 0xca, 0xbd, 0xc4, 0xee, 0x10,
	0x1f, 0xcc, 0xc8, 0xac, 0xd2, 0x22, 0xb0, 0x94, 0xb7, 0x08, 0x2c, 0xa7, 0x16, 0x81, 0xd7, 0xd2,
	0xfd, 0xdc, 0xb0, 0x33, 0xcb, 0xf7, 0xa2, 0xc2, 0xb1, 0xff, 0xa3, 0x59, 0xda, 0xa7, 0x74, 0x0d,
	0x5f, 0xd7, 0x12, 0x51, 0xc8, 0x37, 0x7e, 0x87, 0x3f, 0x97, 0xc2, 0xb0, 0xb2, 0x0f, 0x45, 0x98,
	0x9c, 0x2b, 0x05, 0xe6, 0x78, 0x73, 0x45, 0x36, 0xcc, 0x7a, 0x20, 0xe7, 0xcd, 0x81, 0x2c, 0x34,
	0x0f, 0x1d, 0x6b, 0x85, 0xf8, 0x9d, 0xb4, 0x2b, 0xc8, 0x06, 0xf1, 0xe5, 0x3c, 0xc3, 0x97, 0x72,
	0x8e, 0xe6, 0xff, 0x5a, 0xce, 0x31, 0x8d, 0x7b, 0x21, 0x6b, 0xdc, 0xdb, 0xfc, 0x7f, 0x4b, 0xd0,
	0xc8, 0x96, 0x1b, 0xb1, 0x0a, 0xd0, 0x8a, 0xf0, 0x99, 0xab, 0x5d, 0x04, 0x49, 0x6c, 0xce, 0xc0,
	0xac, 0x35, 0x58, 0x10, 0xdd, 0xe1, 0x27, 0x7d, 0x65, 0x32, 0x27, 0x93, 0xe2, 0x64, 0xfe, 0xcc,
	0x45, 0x0b, 0x62, 0xb2, 0xed, 0x94, 0x29, 0xeb, 0x63, 0x98, 0x13, 0x93, 0x98, 0x8c, 0x6c, 0x8d,
	0x93, 0xdb, 0x88, 0x6f, 0x5a, 0x17, 0x73, 0xd7, 0xa1, 0x22, 0xcd, 0x9b, 0x30, 0x8b, 0x53, 0xb9,
	0x68, 0xf9, 0xa4, 0xb6, 0xd4, 0x33, 0x26, 0x63, 0x40, 0xc3, 0x1f, 0x32, 0x9e, 0xc3, 0xdf, 0xf6,
	0x23, 0x38, 0x37, 0x72, 0x43, 0x17, 0x9f, 0x33, 0x60, 0xee, 0x73, 0x57, 0xcf, 0x1f, 0x95, 0xc4,
	0x30, 0x3f, 0x62, 0xf0, 0x33, 0x4e, 0xb6, 0x02, 0x42, 0x37, 0x14, 0xff, 0xeb, 0x0c, 0x54, 0x94,
	0xd1, 0xb2, 0xa8, 0x56, 0x8c, 0x39, 0x6e, 0xf3, 0x55, 0x07, 0x7f, 0xeb, 0x75, 0x5c, 0x36, 0xd6,
	0xf1, 0x59, 0x58, 0xe8, 0x25, 0x38, 0x9d, 0xa4, 0x26, 0x7e, 0xbe, 0x97, 0x64, 0x6c, 0xc5, 0x67,
	0xb3, 0x0c, 0xed, 0x2b, 0xb7, 0x1f, 0xc8, 0x45, 0x8d, 0xbf, 0xa9, 0x8f, 0xfd, 0xa7, 0x2e, 0x93,
	0x2b, 0x59, 0xa6, 0x34, 0xf3, 0x23, 0xc5, 0x75, 0xce, 0xf6, 0x3d, 0x6f, 0xa6, 0x2d, 0x77, 0x01,
	0x9a, 0x64, 0x55, 0x67, 0x81, 0x36, 0x00, 0x9c, 0xb0, 0xc7, 0x6e, 0x9f, 0xf9, 0x72, 0x02, 0x51,
	0x22, 0x65, 0xd8, 0x35, 0x93, 0x61, 0xbf, 0x2c, 0xf7, 0x57, 0x3a, 0x7a, 0xa2, 0xf9, 0xb2, 0xbc,
	0xb0, 0x91, 0x7b, 0x6a, 0x03, 0xca, 0xdd, 0x44, 0x6e, 0x0d, 0xe5, 0x6e, 0x92, 0x5a, 0xfd, 0x35,
	0x4c, 0xab, 0xbf, 0x8b, 0x00, 0x74, 0xbe, 0x0a, 0x03, 0x7f, 0x5f, 0x86, 0xdd, 0xaa, 0xd2, 0xb1,
	0x25, 0x20, 0xcf, 0x48, 0xca, 0x46, 0x7f, 0xe6, 0x67, 0xae, 0x8f, 0x4a, 0xe3, 0xba, 0xb3, 0x88,
	0xd0, 0x1f, 0xbb, 0xfd, 0xe0, 0x87, 0xae, 0x2f, 0x96, 0xa9, 0x81, 0xf5, 0x5c, 0x1c, 0x2e, 0x57,
	0x68, 0x99, 0x6a, 0xb4, 0x3f, 0x27, 0x4e, 0x96, 0xe6, 0xf6, 0x6d, 0x65, 0xb7, 0xef, 0xf3, 0x40,
	0xb5, 0xe2, 0x46, 0x7d, 0x8a, 0x96, 0x25, 0x02, 0x76, 0x93, 0xbe, 0xfd, 0xbe, 0xbc, 0x51, 0x35,
	0xac, 0xa4, 0x4a, 0xa6, 0x95, 0x94, 0xd4, 0x8f, 0xb4, 0x0f, 0x0c, 0xfd, 0x48, 0xfb, 0xc0, 0xde,
	0x85, 0x9a, 0x61, 0x83, 0x5d, 0x78, 0x4c, 0xcd, 0xc4, 0xa9, 0xd0, 0xcb, 0xd0, 0x64, 0x11, 0x33,
	0x59, 0x16, 0x61, 0xff, 0x61, 0x19, 0x66, 0x1f, 0x30, 0xd7, 0x43, 0x29, 0x5c, 0x08, 0xbe, 0x69,
	0x63, 0x44, 0x72, 0x7b, 0x94, 0xb2, 0xe6, 0x0d, 0x58, 0x8a, 0xd9, 0x01, 0x6f, 0xb1, 0x38, 0x66,
	0xed, 0x5e, 0x5f, 0x99, 0x59, 0x56, 0x9c, 0x86, 0x00, 0x6f, 0x6a, 0x68, 0x3a, 0x4e, 0xb3, 0x23,
	0xac, 0x33, 0xe7, 0x32, 0xa6, 0x3e, 0xd6, 0x75, 0xa8, 0xa5, 0x34, 0x89, 0x03, 0x0e, 0xdf, 0x39,
	0x9a, 0x28, 0x93, 0x95, 0x30, 0x78, 0x67, 0x3a, 0x70, 0x43, 0x9e, 0x31, 0x6f, 0x20, 0x10, 0x22,
	0xbc, 0x02, 0x8b, 0x21, 0xef, 0xf2, 0x90, 0xfb, 0x64, 0x1a, 0x49, 0x42, 0x51, 0x4d, 0xc3, 0xb6,
	0x3b, 0xf6, 0x8f, 0x60, 0x29, 0x77, 0x0e, 0xa6, 0x38, 0x0b, 0x7d, 0xd7, 0x3b, 0x96, 0xa2, 0x84,
	0x4c, 0x89, 0x6f, 0x53, 0x07, 0x61, 0x3a, 0x8d, 0xa9, 0xa4, 0x18, 0xb2, 0x41, 0x10, 0x6a, 0xfb,
	0x7b, 0xf1, 0xdb, 0xde, 0x87, 0xe5, 0xbc, 0xc9, 0x34, 0xf1, 0x44, 0x54, 0x26, 0xcb, 0x4e, 0x55,
	0x49, 0xcd, 0x18, 0x66, 0x0d, 0xc6, 0xf0, 0xba, 0xe8, 0xe1, 0x94, 0x1f, 0x0e, 0x59, 0x8c, 0x53,
	0xae, 0xfd, 0xa7, 0x25, 0x58, 0xca, 0x59, 0x5b, 0x17, 0xce, 0xa1, 0x6f, 0xee, 0x29, 0x51, 0xd4,
	0xc8, 0x11, 0x61, 0x23, 0x0a, 0x9c, 0x69, 0xf4, 0x1c, 0x5e, 0x30, 0x63, 0xad, 0xfc, 0xc5, 0x12,
	0xac, 0x3d, 0x44, 0xbd, 0x83, 0x19, 0xa8, 0x85, 0x8c, 0x35, 0xad, 0x2b, 0x30, 0x1f, 0x84, 0xee,
	0xbe, 0xeb, 0x9b, 0xe7, 0x9a, 0x6c, 0x8c, 0x30, 0xca, 0xb7, 0x2e, 0x2b, 0x6f, 0xc0, 0xf2, 0xa8,
	0x80, 0x65, 0x98, 0xad, 0xf7, 0x87, 0x99, 0x74, 0x7f, 0xb0, 0x57, 0xe1, 0x54, 0xb6, 0x05, 0x18,
	0x82, 0xcd, 0xfe, 0x7e, 0x0e, 0x2c, 0xed, 0x7e, 0xdf, 0x84, 0x79, 0xb2, 0xec, 0x95, 0x6d, 0x5a,
	0x19, 0xf2, 0x08, 0x75, 0x24, 0x82, 0x1d, 0xc2, 0x69, 0x45, 0x81, 0xcc, 0xb0, 0xe5, 0x67, 0xdd,
	0x80, 0x86, 0xcf, 0x8f, 0x5a, 0xd2, 0xde, 0xdb, 0xcd, 0x3a, 0xb8, 0x68, 0x93, 0xed, 0xba, 0xcf,
	0x8f, 0x36, 0x35, 0x8a, 0xf5, 0x3a, 0x34, 0xb8, 0xdf, 0x31, 0x0b, 0x91, 0x4d, 0x42, 0x9d, 0x93,
	0x26, 0x9b, 0x80, 0xf6, 0x5f, 0x2b, 0xa5, 0xcd, 0x26, 0x42, 0xa4, 0xc7, 0x7a, 0x48, 0xe7, 0x7f,
	0x34, 0x39, 0x97, 0x1a, 0x33, 0xaa, 0xf4, 0x75, 0xb2, 0xd6, 0x1f, 0x2a, 0xb1, 0x9e, 0x49, 0x91,
	0x9a, 0x40, 0x27, 0xa3, 0xe6, 0x1d, 0xf2, 0xfd, 0x48, 0x2b, 0x38, 0x99, 0x4d, 0x7b, 0x5d, 0x5a,
	0x76, 0xd8, 0x7f, 0xa7, 0x94, 0xef, 0x24, 0x69, 0xc7, 0xb0, 0x63, 0x34, 0x58, 0x1b, 0x34, 0x88,
	0x06, 0xbf, 0x31, 0xdc, 0x60, 0x2a, 0xb2, 0x9e, 0x4d, 0xa6, 0x4d, 0xa6, 0x74, 0xf3, 0x27, 0xe4,
	0x9c, 0x62, 0xd4, 0x31, 0xb1, 0xcd, 0x68, 0x24, 0x21, 0x50, 0xd5, 0x01, 0xb1, 0xc0, 0x48, 0x02,
	0xb3, 0xed, 0xfb, 0xe9, 0x34, 0xfe, 0xe6, 0xce, 0xb9, 0x76, 0x57, 0x53, 0x33, 0x0c, 0xe4, 0x25,
	0xb5, 0x0f, 0xa0, 0xce, 0x0c, 0x68, 0x86, 0xa0, 0x89, 0xee, 0x64, 0xd1, 0x90, 0x27, 0x08, 0x26,
	0x45, 0xd3, 0x06, 0x7f, 0xdb, 0xa7, 0xc1, 0x52, 0xf5, 0x04, 0x71, 0x8f, 0x87, 0xf7, 0x83, 0x7d,
	0xd7, 0xb7, 0x03, 0x35, 0x85, 0xc8, 0x64, 0xf5, 0x01, 0x8f, 0x22, 0xb6, 0xcf, 0xad, 0xb7, 0x60,
	0x3e, 0xe2, 0x7e, 0x87, 0x87, 0x63, 0x4c, 0x24, 0x24, 0x46, 0xa1, 0xfb, 0xe3, 0x68, 0xcb, 0xfd,
	0xdf, 0x29, 0xc1, 0x45, 0x59, 0x23, 0x5a, 0x13, 0x29, 0x43, 0x50, 0xe9, 0x75, 0x1f, 0xed, 0x4f,
	0xb4, 0xce, 0x1b, 0xa7, 0x05, 0x3d, 0xa3, 0xdb, 0x2d, 0x65, 0x29, 0xd9, 0xc6, 0xd1, 0x66, 0xa9,
	0x0f, 0x54, 0xf7, 0x67, 0x9a, 0x43, 0x1a, 0x8c, 0xb1, 0x2d, 0x29, 0x8e, 0xf9, 0xf1, 0x3f, 0x97,
	0xe0, 0x42, 0x11, 0xbd, 0xe3, 0x28, 0xe6, 0xfd, 0x89, 0x5f, 0x57, 0xd4, 0x95, 0x4a, 0x7f, 0x3a,
	0x63, 0xe8, 0x4f, 0x3f, 0x4d, 0x35, 0x2f, 0xa1, 0x72, 0xe5, 0x7f, 0x69, 0xbc, 0x45, 0x98, 0xd6,
	0xcc, 0x84, 0xb1, 0xf5, 0x21, 0xa0, 0xb5, 0x07, 0x06, 0xd1, 0xa0, 0xbb, 0x96, 0x0b, 0xe3, 0xcc,
	0xe1, 0xc8, 0x6f, 0xe7, 0xb6, 0xdf, 0xb1, 0xb7, 0x61, 0x95, 0x3e, 0xee, 0x1b, 0xbb, 0x7d, 0xdb,
	0xef, 0x89, 0x3d, 0x13, 0x49, 0x71, 0x8f, 0xc7, 0x1c, 0xe5, 0x97, 0x4b, 0xb0, 0x28, 0xe5, 0x17,
	0xd2, 0xcd, 0x4a, 0x0d, 0x19, 0x09, 0x31, 0xa8, 0x9d, 0x3d, 0x50, 0x93, 0x98, 0x0c, 0x79, 0x24,
	0x93, 0x9d, 0x60, 0xd6, 0x56, 0xd4, 0xab, 0x36, 0xcc, 0x53, 0x98, 0x42, 0x79, 0x90, 0x07, 0x94,
	0x56, 0x29, 0x70, 0xa1, 0xcc, 0xb1, 0x9f, 0xc1, 0x59, 0xb3, 0x32, 0x9c, 0x13, 0xb2, 0xc6, 0xf3,
	0x50, 0x8d, 0x59, 0xb8, 0xcf, 0x8d, 0x0a, 0x2b, 0x04, 0xd8, 0xee, 0x58, 0xdf, 0x01, 0x0a, 0x0a,
	0xa0, 0x34, 0x63, 0xe3, 0x8d, 0x87, 0x88, 0x2d, 0x51, 0xc2, 0xfe, 0x0d, 0x38, 0x63, 0x56, 0x29,
	0xd6, 0xd9, 0x34, 0x35, 0x2a, 0x7b, 0xa6, 0xf2, 0x78, 0x7b, 0x26, 0x7b, 0x4b, 0xad, 0x76, 0x31,
	0xb2, 0x37, 0xc3, 0x80, 0x75, 0xda, 0x2c, 0x8a, 0x0b, 0x45, 0x08, 0x63, 0xc5, 0x94, 0xb3, 0x2b,
	0xe6, 0xfb, 0x26, 0x91, 0xf4, 0xce, 0xf4, 0x4d, 0xad, 0x1a, 0x31, 0x36, 0xcb, 0x0c, 0x8a, 0x56,
	0x89, 0xfc, 0xc9, 0xbc, 0xfa, 0x4c, 0x79, 0xc3, 0xe4, 0x46, 0x3d, 0xc9, 0xa6, 0x0d, 0x45, 0x72,
	0x29, 0xa3, 0x48, 0xde, 0x86, 0x45, 0x0a, 0xa3, 0x47, 0x56, 0x72, 0xf2, 0x53, 0x2f, 0xa7, 0x1b,
	0x44, 0x9e, 0xd4, 0xba, 0x21, 0x5d, 0x38, 0x35, 0xcf, 0x10, 0x35, 0xee, 0x40, 0xad, 0xcf, 0xe2,
	0x76, 0xaf, 0x85, 0x5e, 0x00, 0x66, 0x60, 0xb5, 0x11, 0x94, 0x1e, 0x08, 0x6c, 0xf4, 0x28, 0x10,
	0x93, 0x51, 0xfd, 0xb6, 0xbe, 0x80, 0x46, 0x9f, 0xb9, 0x7e, 0x1a, 0xf5, 0x48, 0xae, 0xc4, 0x2b,
	0x63, 0x49, 0xb9, 0x7e, 0x1a, 0x62, 0xa1, 0xde, 0x37, 0x93, 0x82, 0xa0, 0xa6, 0xd5, 0xda, 0x77,
	0xbb, 0xb1, 0x5c, 0x9d, 0xe3, 0x08, 0xea, 0xd2, 0x77, 0xdd, 0x6e, 0xec, 0xd4, 0xdb, 0x66, 0xb2,
	0xe9, 0x41, 0x3d, 0x93, 0x2f, 0xf8, 0xa3, 0x21, 0x65, 0xd5, 0xb5, 0x4c, 0x75, 0xda, 0x94, 0xa9,
	0x54, 0x84, 0x05, 0x6b, 0x19, 0x66, 0x58, 0x47, 0x29, 0xed, 0xc5, 0x4f, 0x19, 0xa7, 0x56, 0xfa,
	0x9d, 0xe8, 0x58, 0xbd, 0x77, 0x31, 0xdd, 0x8c, 0xa0, 0xf6, 0x2b, 0x97, 0xe8, 0x9a, 0xdb, 0x50,
	0xcf, 0xf4, 0x69, 0xea, 0x89, 0x53, 0x2a, 0xf0, 0xc4, 0x29, 0xa7, 0x9e, 0x38, 0x43, 0x1f, 0xd7,
	0xfc, 0xfd, 0x12, 0x40, 0x3a, 0xd4, 0xe3, 0xdc, 0x46, 0xd2, 0x6e, 0x2c, 0x17, 0x77, 0xa3, 0x19,
	0xa8, 0x62, 0x6c, 0xa7, 0x99, 0x62, 0xc7, 0xdc, 0x78, 0xb1, 0xe3, 0x4d, 0x21, 0xfb, 0xab, 0x39,
	0x80, 0xca, 0x71, 0xd1, 0x0e, 0x54, 0x9f, 0x77, 0xa4, 0x73, 0xa7, 0x4c, 0xd9, 0xd7, 0xcc, 0x25,
	0xfa, 0x88, 0x87, 0x7d, 0xd7, 0x17, 0x5c, 0xfa, 0x8c, 0x58, 0xa2, 0x2c, 0x92, 0xbe, 0x71, 0x55,
	0x47, 0xa6, 0xec, 0xb3, 0x8a, 0xad, 0x8b, 0x39, 0xb2, 0x2b, 0x58, 0x20, 0x05, 0xc6, 0x14, 0x12,
	0x9b, 0x5c, 0xa8, 0xf7, 0x53, 0x77, 0x41, 0x92, 0x01, 0x7f, 0x0c, 0x96, 0xe9, 0x58, 0x98, 0x91,
	0x33, 0xdf, 0x4e, 0xe7, 0x6b, 0xbe, 0xdc, 0x7a, 0x1e, 0xe0, 0xac, 0x78, 0x39, 0x48, 0xd4, 0xfc,
	0x02, 0x96, 0x87, 0xea, 0xfb, 0x3a, 0x8e, 0x8c, 0x5a, 0xf2, 0xfc, 0x13, 0x2d, 0x79, 0xe2, 0xf8,
	0xa6, 0x76, 0xd5, 0xe7, 0xe4, 0x4e, 0x98, 0x84, 0x9e, 0xec, 0x13, 0xdc, 0xeb, 0x1e, 0x87, 0xde,
	0x0b, 0x30, 0xa4, 0xb4, 0xa1, 0x4e, 0x7c, 0x46, 0x71, 0x34, 0xa9, 0x4e, 0x44, 0xe0, 0x03, 0x62,
	0x6b, 0xa6, 0xb1, 0xe5, 0x5c, 0xce, 0xd8, 0x52, 0x4b, 0x6c, 0xd8, 0x68, 0xe9, 0xa0, 0x6e, 0x5b,
	0x6a, 0xe3, 0x7c, 0xc8, 0x8f, 0xa4, 0xa3, 0x8f, 0x1d, 0xa9, 0xcf, 0x7b, 0xc8, 0x8f, 0x68, 0xe7,
	0xd8, 0x1c, 0x0c, 0xbc, 0xe3, 0x29, 0x22, 0x77, 0x33, 0x81, 0x97, 0xb9, 0x86, 0x45, 0x88, 0xba,
	0xdf, 0x09, 0x79, 0x3f, 0x38, 0xe4, 0xd8, 0xdd, 0xd2, 0xe0, 0x52, 0x42, 0xb6, 0x3b, 0xf6, 0x03,
	0xa8, 0xeb, 0x4a, 0x27, 0x07, 0x71, 0x7b, 0x19, 0x6a, 0xa4, 0x97, 0x4c, 0x43, 0xa0, 0x56, 0x1d,
	0x20, 0x10, 0x6e, 0xed, 0xd7, 0x0c, 0x72, 0x28, 0x0d, 0x5c, 0x80, 0x59, 0x8c, 0x08, 0x4f, 0xdc,
	0x03, 0xbd, 0x2d, 0x05, 0xdc, 0x41, 0xa8, 0xdd, 0x55, 0xab, 0x61, 0x87, 0x1d, 0xcb, 0x1d, 0xe8,
	0x22, 0xc0, 0x80, 0x1d, 0xb7, 0x8c, 0x5d, 0xa8, 0xee, 0x54, 0x07, 0x3a, 0xfb, 0x1c, 0x54, 0x82,
	0xb0, 0xc3, 0x43, 0x25, 0x38, 0x56, 0x9d, 0x05, 0x4c, 0x6f, 0xa3, 0xd5, 0x29, 0x3a, 0x37, 0xa6,
	0xdf, 0xb9, 0x80, 0xe9, 0xed, 0x8e, 0xfd, 0x53, 0x38, 0x2f, 0xeb, 0xc1, 0xa6, 0xca, 0x8b, 0x6e,
	0x37, 0xf0, 0x49, 0x44, 0x2c, 0xda, 0x3a, 0xdf, 0x34, 0x25, 0xc3, 0x46, 0xaa, 0xbb, 0x96, 0x3a,
	0x4d, 0xd3, 0x64, 0xf8, 0x33, 0x38, 0x67, 0x52, 0xbf, 0x1f, 0xb0, 0x0e, 0x5d, 0xf7, 0xb1, 0xce,
	0xb1, 0x98, 0x3f, 0xa1, 0xf8, 0x91, 0x93, 0x87, 0x6a, 0x08, 0x94, 0x02, 0xd1, 0x87, 0x6a, 0x81,
	0x3a, 0xfc, 0xd0, 0x3d, 0xe4, 0x5b, 0x81, 0xeb, 0xa7, 0xf1, 0x70, 0x7a, 0x2c, 0x6a, 0x91, 0xaf,
	0xae, 0xe4, 0x0f, 0xd5, 0x1e, 0x8b, 0xee, 0x22, 0x20, 0xdd, 0xc5, 0x9d, 0x00, 0x7d, 0x3c, 0xc9,
	0x8b, 0x42, 0xec, 0xe2, 0xd2, 0xc7, 0xc2, 0xd8, 0xc5, 0x33, 0x28, 0x8e, 0x44, 0xb0, 0x7f, 0x51,
	0x4a, 0x49, 0x04, 0xfd, 0x5f, 0xd1, 0x9a, 0x1a, 0x67, 0x9c, 0x7c, 0x0a, 0x56, 0xd2, 0xf6, 0xfc,
	0xc0, 0x6d, 0x1f, 0x7c, 0x91, 0xc4, 0xf6, 0x7d, 0xc5, 0xdb, 0x04, 0x50, 0x5d, 0xbf, 0x88, 0xde,
	0x9d, 0xb0, 0x36, 0x4e, 0xc3, 0x1c, 0xf6, 0x33, 0x36, 0xb1, 0xe2, 0x50, 0xc2, 0xfe, 0x0f, 0x34,
	0x43, 0x4c, 0xc9, 0xc9, 0xfe, 0xbe, 0x01, 0xd2, 0x0d, 0x38, 0x1d, 0xab, 0x62, 0x51, 0x0c, 0x08,
	0x0d, 0x43, 0x4f, 0xa1, 0x3f, 0xaf, 0x58, 0x50, 0xe9, 0xaa, 0x40, 0x7f, 0x5e, 0x01, 0x42, 0x04,
	0x31, 0x69, 0x8f, 0x7c, 0x9a, 0xb4, 0x72, 0x66, 0x62, 0x9a, 0xae, 0xd6, 0xc3, 0x60, 0x2f, 0x88,
	0x33, 0xae, 0x90, 0x80, 0x20, 0x52, 0x47, 0xdf, 0x56, 0xe3, 0xb3, 0xcb, 0xc3, 0x43, 0x1e, 0xaa,
	0xd0, 0x87, 0xeb, 0x50, 0x89, 0xe8, 0x67, 0x64, 0x9e, 0xee, 0x32, 0x48, 0x91, 0xa3, 0x71, 0xec,
	0x4f, 0x15, 0xc3, 0xd9, 0xed, 0x05, 0x03, 0xad, 0x19, 0xa9, 0x46, 0xbd, 0x60, 0xd0, 0xc2, 0x3b,
	0xf8, 0x52, 0x6a, 0xd0, 0x25, 0x50, 0x28, 0x32, 0x48, 0x24, 0x7f, 0xd9, 0xbf, 0x5f, 0x56, 0xcc,
	0xe9, 0x89, 0x3b, 0x30, 0xe5, 0x83, 0x8b, 0x00, 0x42, 0xc6, 0x69, 0x79, 0x6e, 0xdf, 0xd5, 0xcb,
	0x55, 0x40, 0xee, 0x0b, 0x00, 0x3a, 0x5c, 0x52, 0x04, 0xf2, 0x3e, 0x7b, 0x9e, 0xf5, 0x1e, 0x20,
	0xf8, 0x03, 0xf6, 0x9c, 0xae, 0x5a, 0x6e, 0xc0, 0x99, 0xaf, 0x7a, 0x83, 0x56, 0x37, 0xe4, 0x5c,
	0xc7, 0x7a, 0x26, 0xa2, 0xd4, 0x63, 0xa7, 0xbe, 0xea, 0x0d, 0xee, 0x84, 0x9c, 0xcb, 0x5d, 0x8d,
	0xc8, 0xcb, 0x42, 0xed, 0x20, 0x8a, 0x73, 0x85, 0x66, 0x75, 0xa1, 0xad, 0x20, 0x8a, 0x33, 0x85,
	0x5e, 0x86, 0xda, 0x5e, 0xd2, 0xe9, 0x1c, 0xb7, 0xf6, 0x02, 0x3f, 0x89, 0x64, 0x9c, 0x43, 0x40,
	0xd0, 0x4d, 0x01, 0xb1, 0xae, 0x63, 0x14, 0xdb, 0x20, 0xec, 0xb4, 0xda, 0x81, 0xe7, 0x89, 0x79,
	0x4e, 0x34, 0xe9, 0xfe, 0xd7, 0xa2, 0xbc, 0x2d, 0xca, 0x42, 0x92, 0xf6, 0xcf, 0x00, 0xbe, 0x18,
	0x70, 0x5f, 0xf2, 0xa8, 0x17, 0xee, 0xd1, 0x61, 0x6f, 0xc3, 0xca, 0x50, 0x14, 0x8c, 0xc2, 0xab,
	0x93, 0x4b, 0x50, 0x6b, 0x07, 0xfd, 0x3d, 0x21, 0x29, 0xd0, 0x3d, 0xcf, 0x0c, 0xf9, 0xb5, 0x69,
	0x90, 0xfd, 0xef, 0x95, 0x60, 0xb5, 0x30, 0xa2, 0x46, 0x21, 0x17, 0xfc, 0x2e, 0x34, 0x74, 0x9c,
	0x0d, 0x33, 0xec, 0xf5, 0x6a, 0x61, 0x60, 0x0e, 0xa7, 0x1e, 0x64, 0x28, 0x9a, 0x7e, 0x00, 0xb3,
	0x43, 0x7e, 0x00, 0x86, 0x07, 0xc1, 0x5c, 0xce, 0x83, 0xc0, 0xfe, 0xbf, 0x67, 0xa0, 0xb1, 0xc3,
	0x8e, 0xe5, 0x65, 0x0e, 0xce, 0xf8, 0x57, 0x60, 0x11, 0x5d, 0x50, 0x06, 0x04, 0x96, 0xcd, 0xac,
	0x09, 0x98, 0xc4, 0x14, 0xd3, 0x41, 0xe6, 0xe2, 0x9c, 0x6e, 0x45, 0xbd, 0xe0, 0xa8, 0x65, 0x9c,
	0x1a, 0x4f, 0xc9, 0x5c, 0x31, 0xa5, 0x77, 0x7b, 0xc1, 0x11, 0xde, 0xb2, 0xbe, 0x02, 0x8b, 0x66,
	0x21, 0xe5, 0x0b, 0x68, 0xa0, 0x5a, 0xef, 0xc3, 0xfc, 0x11, 0x6f, 0xf7, 0x98, 0x3a, 0xa5, 0xa3,
	0x2d, 0x49, 0xb6, 0x79, 0xeb, 0x3f, 0x42, 0x04, 0xbc, 0x33, 0x95, 0xc8, 0xa2, 0x18, 0xf3, 0xdc,
	0x01, 0x3b, 0x96, 0x27, 0x80, 0xa2, 0x62, 0x9b, 0x88, 0x40, 0xc5, 0x08, 0xb9, 0x79, 0x00, 0x90,
	0x42, 0x85, 0xc8, 0xa4, 0x0c, 0x71, 0x49, 0x93, 0x2e, 0x77, 0x81, 0xba, 0x84, 0x6e, 0x21, 0xd0,
	0xfa, 0x00, 0xce, 0xaa, 0xaf, 0x90, 0x81, 0x03, 0xd4, 0x13, 0x25, 0xf2, 0xdb, 0x57, 0x65, 0xf6,
	0x2e, 0xe6, 0xaa, 0xa7, 0x45, 0x9a, 0xbf, 0x5b, 0x02, 0x48, 0x9b, 0xfe, 0x4b, 0xae, 0x4d, 0x6c,
	0x1d, 0xdc, 0x57, 0xd4, 0x3b, 0xae, 0xba, 0xaa, 0x58, 0x24, 0xe0, 0x16, 0xc2, 0xec, 0xff, 0x4e,
	0xdf, 0x6a, 0x2a, 0x6e, 0x3b, 0x89, 0xcd, 0x67, 0x1e, 0xcb, 0x28, 0xe7, 0x1e, 0xcb, 0xc8, 0xc4,
	0x54, 0xd6, 0xef, 0x6b, 0x98, 0x5e, 0x72, 0xb3, 0x39, 0x3f, 0x3f, 0xfd, 0x98, 0xc6, 0xdc, 0xb4,
	0x8f, 0xb9, 0xcc, 0x4f, 0x78, 0x11, 0xe3, 0x1f, 0xeb, 0x4f, 0x52, 0x86, 0x6c, 0xbf, 0xa6, 0x9f,
	0xf4, 0xb6, 0x19, 0xc1, 0x72, 0x3e, 0x0d, 0x43, 0x99, 0x9e, 0x76, 0x8d, 0x68, 0x95, 0xe9, 0xf7,
	0x2f, 0x4c, 0xf8, 0xfe, 0xbf, 0x5a, 0x82, 0x53, 0xe4, 0x68, 0xf4, 0x22, 0xc3, 0xe8, 0x15, 0x5f,
	0x5b, 0x7c, 0x07, 0x40, 0x73, 0x21, 0x15, 0xf3, 0x6a, 0x4c, 0x1c, 0x21, 0x03, 0xd9, 0xfe, 0xed,
	0x12, 0xd4, 0xa8, 0x99, 0xa3, 0xe3, 0xdf, 0xbd, 0xe8, 0x4a, 0xd3, 0x98, 0x5e, 0x15, 0x33, 0x70,
	0xdd, 0xdf, 0x2f, 0xc1, 0x0a, 0x35, 0xe5, 0xd7, 0x22, 0x70, 0x5d, 0x36, 0xb0, 0xda, 0x4c, 0x26,
	0xc4, 0x58, 0x26, 0x6e, 0x53, 0x65, 0xfa, 0xb8, 0x4d, 0xf6, 0x5f, 0x50, 0x93, 0x42, 0xee, 0xa5,
	0x5c, 0x87, 0x98, 0x1d, 0xb2, 0x35, 0x45, 0xef, 0xb4, 0x3e, 0x0b, 0x0f, 0xf4, 0x55, 0x9e, 0x4c,
	0xe6, 0x0c, 0xd4, 0x66, 0xc6, 0x45, 0x02, 0x9a, 0xcd, 0x44, 0x02, 0xb2, 0xff, 0x51, 0x09, 0x1a,
	0x54, 0xff, 0x2f, 0x2d, 0x06, 0xde, 0x0b, 0x0b, 0x65, 0xf7, 0x82, 0x7a, 0xfc, 0x2f, 0x97, 0xd5,
	0xac, 0x7a, 0xa1, 0xf1, 0xec, 0xa6, 0x09, 0x4b, 0x37, 0xf3, 0xab, 0x0b, 0x4b, 0x97, 0x5b, 0x8d,
	0x70, 0x12, 0x16, 0xf0, 0x7f, 0xcd, 0x00, 0x50, 0x0f, 0xdd, 0x95, 0x21, 0x7d, 0x4e, 0x6a, 0xf7,
	0x3c, 0x26, 0xf6, 0xd4, 0x65, 0x98, 0x97, 0xd6, 0xd0, 0x73, 0x85, 0xd6, 0xd0, 0x32, 0xd7, 0xfa,
	0x00, 0x2a, 0x72, 0x27, 0x50, 0x8e, 0x03, 0x4d, 0x92, 0x0c, 0x55, 0xbb, 0x14, 0x97, 0xa5, 0x8e,
	0x52, 0xb8, 0x86, 0xf6, 0x76, 0x71, 0x82, 0xf6, 0xb6, 0xf9, 0x8b, 0x32, 0xd4, 0x0c, 0x22, 0x53,
	0x68, 0xdf, 0x87, 0xec, 0xf2, 0xc6, 0x3d, 0xa5, 0x95, 0xd9, 0xbe, 0x66, 0x73, 0xdb, 0x57, 0x66,
	0x93, 0x99, 0x9b, 0xb0, 0xc9, 0xe8, 0xbd, 0x6e, 0xde, 0xdc, 0xeb, 0xf4, 0x7e, 0xb6, 0x30, 0xed,
	0x16, 0x5d, 0x99, 0xb0, 0x45, 0xfd, 0x83, 0x92, 0x1a, 0xf8, 0x7f, 0x4a, 0x42, 0x19, 0xd2, 0xc7,
	0x7e, 0x5b, 0x43, 0x19, 0xfe, 0x8b, 0xb3, 0x8a, 0x79, 0x7f, 0xe3, 0xc8, 0x85, 0x2a, 0x46, 0xe1,
	0x6c, 0x61, 0x8c, 0xc2, 0x6c, 0xaf, 0x9b, 0x16, 0x3c, 0xf3, 0x39, 0x23, 0xbf, 0x33, 0x30, 0x8f,
	0x6d, 0xbb, 0x2e, 0xfb, 0x5a, 0xa6, 0x34, 0xfc, 0x5d, 0xc9, 0xbf, 0x64, 0x4a, 0xc3, 0x37, 0xa4,
	0xb9, 0x96, 0x4c, 0x69, 0xf8, 0x0d, 0xe4, 0x5c, 0x0a, 0x7e, 0xc3, 0x7a, 0x2f, 0x35, 0x46, 0x19,
	0x62, 0x0a, 0xaa, 0x13, 0x14, 0x07, 0x4d, 0x0d, 0x55, 0x32, 0x7b, 0xc5, 0xe2, 0x09, 0xa2, 0x2a,
	0xca, 0x20, 0x86, 0xf5, 0x34, 0x88, 0x21, 0x99, 0xd4, 0x45, 0x3d, 0xe9, 0x3f, 0x5c, 0x75, 0x54,
	0xb2, 0x68, 0x3f, 0x5c, 0x2a, 0xd8, 0x0f, 0x9b, 0xf7, 0x61, 0x41, 0x36, 0xb0, 0x70, 0xd3, 0xc9,
	0x84, 0x5d, 0x2c, 0x4f, 0x0a, 0xbb, 0x88, 0xc1, 0x12, 0xe5, 0xe7, 0xff, 0xda, 0x07, 0x4b, 0x7c,
	0x47, 0x4c, 0xd7, 0x67, 0xd3, 0x73, 0x5c, 0xfb, 0x23, 0xb3, 0x00, 0x9e, 0xa6, 0x2f, 0xc3, 0x52,
	0x5a, 0xc0, 0xd4, 0x25, 0xd6, 0x75, 0x29, 0xd4, 0x26, 0x7e, 0x04, 0x67, 0xd3, 0x92, 0x3a, 0xf4,
	0xfd, 0x34, 0x75, 0xfe, 0xbc, 0x04, 0xe7, 0x44, 0xd1, 0x4e, 0x2a, 0x91, 0xdd, 0xcd, 0xc4, 0x5e,
	0xfb, 0x95, 0xc8, 0x65, 0xd7, 0xe8, 0xcb, 0x07, 0x03, 0x4f, 0x5e, 0xa0, 0x8e, 0xbd, 0x36, 0xb5,
	0x5b, 0x82, 0x95, 0x3d, 0xdb, 0x4c, 0x62, 0xbc, 0x11, 0x98, 0x42, 0x23, 0x68, 0x2a, 0x2d, 0x29,
	0x31, 0x56, 0x5b, 0x69, 0xdf, 0xc1, 0xf6, 0xdc, 0x74, 0xfd, 0x8e, 0x7a, 0xe9, 0x75, 0x0d, 0x16,
	0x24, 0x45, 0xa5, 0x1b, 0x95, 0x49, 0xc1, 0x1f, 0x06, 0x2c, 0x8a, 0x8e, 0x82, 0x50, 0xa9, 0xa7,
	0x75, 0xda, 0x7e, 0x24, 0x66, 0x2b, 0xd2, 0xb9, 0x8d, 0xef, 0xa2, 0xea, 0xd7, 0x52, 0x4b, 0xe6,
	0x6b, 0xa9, 0x2a, 0xb4, 0x89, 0x14, 0xbc, 0x30, 0xb4, 0x89, 0x49, 0x75, 0x26, 0x47, 0xf5, 0x07,
	0x60, 0x49, 0xaa, 0x3b, 0xbd, 0xc0, 0xe7, 0x0f, 0x93, 0xfe, 0x1e, 0xcf, 0x06, 0x48, 0x51, 0x54,
	0x5e, 0x81, 0xc5, 0x88, 0xb7, 0x93, 0x90, 0x67, 0xd4, 0xb6, 0x35, 0x82, 0xa1, 0xd6, 0xd6, 0xfe,
	0x82, 0x88, 0xa9, 0x3b, 0xe5, 0x6d, 0x1f, 0xbb, 0xd4, 0xb8, 0x45, 0x2e, 0x65, 0x6d, 0x04, 0x29,
	0x08, 0x0a, 0x1f, 0xc4, 0xad, 0x88, 0x7b, 0x5d, 0xa9, 0x65, 0x05, 0x02, 0xed, 0x72, 0xaf, 0x6b,
	0xdf, 0x11, 0x22, 0xfe, 0xb3, 0x9b, 0xc9, 0xf1, 0x9d, 0x30, 0xe8, 0xe3, 0x8d, 0xdc, 0x6e, 0x2f,
	0x18, 0x64, 0x54, 0xf5, 0xa5, 0x8c, 0xaa, 0x7e, 0x44, 0xd8, 0x94, 0x4d, 0x1a, 0x03, 0xa2, 0xf3,
	0xf5, 0x48, 0x7c, 0x1f, 0xea, 0x29, 0x89, 0x1f, 0xdf, 0xdb, 0x39, 0x39, 0x85, 0x57, 0x15, 0x05,
	0xe3, 0x15, 0x99, 0xfc, 0xb6, 0x69, 0xbf, 0x0f, 0x6b, 0x0e, 0x7f, 0xb6, 0xc5, 0xfc, 0x36, 0xf7,
	0xee, 0x06, 0xc1, 0x3e, 0x71, 0x95, 0x2f, 0xc2, 0x0e, 0x0f, 0x33, 0x97, 0x17, 0xa5, 0xcc, 0xe5,
	0x85, 0xfd, 0x1e, 0x76, 0x14, 0x15, 0xc3, 0x9b, 0xa2, 0x1f, 0x26, 0x3c, 0xc1, 0xd9, 0x9c, 0xde,
	0x3e, 0xa9, 0xd9, 0xac, 0xaf, 0x9e, 0xec, 0x75, 0x58, 0x12, 0xa5, 0x50, 0x15, 0xbb, 0x89, 0xe2,
	0x55, 0x56, 0xf2, 0x2a, 0x65, 0x25, 0x2f, 0xfb, 0x0b, 0x38, 0xa3, 0xf1, 0xb5, 0xb4, 0xb5, 0x7b,
	0xe0, 0xa2, 0xd1, 0x7c, 0x7a, 0x6b, 0xad, 0x4b, 0xd6, 0x34, 0x4c, 0xca, 0x80, 0x07, 0xfa, 0xb6,
	0x14, 0x7f, 0xdb, 0xbd, 0x22, 0x82, 0xa8, 0xdf, 0x98, 0x92, 0xa0, 0x17, 0xa4, 0x42, 0x65, 0x2e,
	0x60, 0xe1, 0x4c, 0x26, 0x60, 0xe1, 0x2e, 0xbc, 0x9a, 0xd6, 0x34, 0xcc, 0x9d, 0x1c, 0xc9, 0x76,
	0x4e, 0xc4, 0xa4, 0xec, 0xcf, 0xa8, 0xd7, 0x25, 0xd1, 0x7e, 0x3f, 0xf0, 0xb1, 0xed, 0x45, 0x91,
	0x14, 0x8b, 0x5f, 0x16, 0xfa, 0xc4, 0xf8, 0xfe, 0xec, 0x0d, 0xf6, 0xe4, 0xef, 0xb7, 0xff, 0x05,
	0x9c, 0xd4, 0xb9, 0xf3, 0x7d, 0x91, 0x33, 0x09, 0xba, 0x2e, 0xa8, 0x8a, 0x31, 0x61, 0xbd, 0x09,
	0xcb, 0x6d, 0x9c, 0x2c, 0xad, 0x74, 0x77, 0xa7, 0x43, 0xd9, 0x12, 0xc1, 0x53, 0x3d, 0x31, 0x1a,
	0xb1, 0xf6, 0x79, 0x12, 0x29, 0x19, 0x5a, 0x25, 0xed, 0xcf, 0x61, 0x59, 0x34, 0x20, 0x63, 0x34,
	0x36, 0xde, 0x2b, 0x71, 0x0d, 0x16, 0xfa, 0x84, 0xa8, 0xba, 0x52, 0x26, 0xed, 0x1a, 0x54, 0x05,
	0x2d, 0xec, 0x44, 0x7b, 0x03, 0xb7, 0xa0, 0xad, 0xa0, 0x3f, 0xf0, 0x78, 0xcc, 0x4d, 0x0b, 0x3b,
	0x31, 0xc0, 0x31, 0x8b, 0x0e, 0x0c, 0xdb, 0x10, 0x91, 0xdc, 0xee, 0xd8, 0x6f, 0xd1, 0x5c, 0x0e,
	0xfa, 0x83, 0x20, 0xe2, 0xbb, 0x3d, 0x69, 0x47, 0x52, 0x68, 0x97, 0x6d, 0xc7, 0x44, 0x1f, 0x95,
	0x91, 0xa4, 0x2b, 0xdd, 0x1c, 0x0c, 0xf4, 0x1a, 0x1b, 0xb5, 0xaa, 0x5f, 0x86, 0x9a, 0xf4, 0x8f,
	0x35, 0x14, 0x26, 0x40, 0xa0, 0x47, 0xc3, 0xde, 0xb9, 0x33, 0xf9, 0xed, 0xf1, 0x6f, 0x95, 0xe0,
	0x74, 0xae, 0xda, 0x5f, 0x76, 0x9d, 0xd6, 0x5b, 0xb0, 0x42, 0x6a, 0xe1, 0x56, 0x1c, 0xb2, 0x0e,
	0x6f, 0x19, 0xb1, 0x8b, 0x97, 0x28, 0xe3, 0x91, 0x80, 0x2b, 0x52, 0x21, 0x8f, 0x93, 0xd0, 0xc7,
	0x5b, 0x3b, 0xba, 0x88, 0xae, 0x12, 0xe4, 0x71, 0xe8, 0xd9, 0x09, 0x71, 0x26, 0xa3, 0xf5, 0xbb,
	0x6d, 0xe6, 0xff, 0xd2, 0x7b, 0xed, 0x0f, 0x4a, 0xb0, 0xaa, 0xeb, 0x95, 0xb1, 0x68, 0x27, 0x56,
	0xfa, 0x26, 0x2c, 0x2b, 0x05, 0x73, 0x4e, 0xb3, 0xbc, 0x24, 0xe1, 0x5a, 0xa7, 0x9c, 0x6b, 0xdf,
	0xcc, 0x84, 0xf6, 0xcd, 0xe6, 0xdb, 0xf7, 0x9f, 0x96, 0x68, 0x0d, 0x63, 0xfb, 0x6e, 0x3f, 0xfc,
	0x15, 0x8d, 0x6b, 0x76, 0xac, 0x66, 0x73, 0x63, 0x25, 0xb8, 0x07, 0xc3, 0x63, 0x91, 0xdc, 0xab,
	0x69, 0x30, 0x6b, 0x04, 0xa3, 0xbd, 0xfa, 0x3f, 0x2e, 0x11, 0xf3, 0x92, 0xed, 0xfe, 0x7c, 0xeb,
	0xe6, 0xb7, 0xa0, 0xd1, 0x7f, 0xa3, 0x04, 0x4d, 0xa3, 0xd1, 0x0f, 0x58, 0x14, 0xf3, 0x70, 0x8b,
	0x85, 0x9d, 0x6f, 0x41, 0xdb, 0x73, 0x13, 0x65, 0x87, 0x1d, 0x0f, 0x98, 0xf7, 0x2d, 0x68, 0xf7,
	0x9f, 0x98, 0x6c, 0xeb, 0xf6, 0xc3, 0x27, 0x6e, 0xc4, 0xbe, 0x05, 0xad, 0xbe, 0x63, 0x70, 0x2b,
	0x94, 0x97, 0x9f, 0xf0, 0xd0, 0xed, 0x52, 0x60, 0xea, 0x62, 0xc9, 0xf9, 0x34, 0xcc, 0x25, 0x7a,
	0x67, 0xaa, 0x3b, 0x94, 0xb0, 0xff, 0x7a, 0x09, 0x65, 0x5a, 0x22, 0xf4, 0xf9, 0xce, 0x66, 0xf2,
	0x6d, 0x5b, 0x25, 0x9f, 0xef, 0xd0, 0xbd, 0xd8, 0xb7, 0x71, 0x95, 0x7c, 0xbe, 0x73, 0x2b, 0x68,
	0x07, 0xfd, 0xe0, 0xdb, 0xd7, 0xee, 0x6f, 0xcd, 0xea, 0xfe, 0xcf, 0x4a, 0xc6, 0x42, 0xf9, 0x7c,
	0x67, 0x37, 0xe8, 0xc6, 0x7b, 0xcc, 0x3f, 0xf8, 0x16, 0xb4, 0xfc, 0x11, 0xac, 0xe8, 0x86, 0xab,
	0x30, 0xef, 0x19, 0xa5, 0x72, 0x29, 0xa7, 0x54, 0x7e, 0x15, 0xea, 0xac, 0x73, 0xc8, 0xc3, 0xd8,
	0x8d, 0x78, 0x2b, 0x8a, 0x43, 0x65, 0x78, 0xa4, 0x81, 0xbb, 0x71, 0x98, 0xe1, 0x1b, 0x78, 0x22,
	0xce, 0xf2, 0x8d, 0x81, 0x00, 0x29, 0xbe, 0x81, 0x89, 0x11, 0x7c, 0x23, 0xc1, 0xc3, 0x1e, 0xd1,
	0x71, 0x82, 0xa0, 0x8f, 0x76, 0x02, 0x64, 0xfb, 0x66, 0xbe, 0xde, 0x2a, 0xed, 0xe1, 0xe8, 0xba,
	0x67, 0x72, 0x44, 0xc8, 0x97, 0xa1, 0x26, 0x83, 0xe0, 0x7a, 0xee, 0x21, 0x97, 0x12, 0x3b, 0x10,
	0xe8, 0xbe, 0x7b, 0xc8, 0xed, 0x7f, 0xb5, 0x64, 0x88, 0xb6, 0x74, 0x31, 0xff, 0x2b, 0x10, 0x6d,
	0x33, 0xd9, 0x03, 0x35, 0x9a, 0x2a, 0x7b, 0x60, 0xff, 0x9e, 0xc9, 0x90, 0xa8, 0x55, 0x0f, 0x59,
	0xec, 0x1e, 0xf2, 0x7f, 0xd2, 0x0d, 0xdb, 0x20, 0x19, 0x08, 0xdf, 0x23, 0x88, 0xf1, 0xdc, 0x8c,
	0x7a, 0xae, 0xf3, 0x50, 0x45, 0x73, 0x4d, 0x43, 0x49, 0x56, 0x11, 0x00, 0xd4, 0x8f, 0xed, 0xe0,
	0xa9, 0x87, 0x3c, 0x16, 0xa4, 0xed, 0xe5, 0x78, 0xc3, 0x7c, 0x8c, 0xfb, 0x2e, 0xb0, 0x33, 0xf6,
	0x5d, 0x04, 0x42, 0x8a, 0x57, 0x70, 0xae, 0x18, 0x3e, 0x10, 0xa3, 0x7c, 0x38, 0xed, 0xff, 0xb0,
	0x8c, 0xa8, 0xb8, 0xa1, 0xa1, 0xef, 0xce, 0x88, 0xbd, 0x6c, 0x8c, 0x1e, 0x49, 0x9c, 0xd0, 0x42,
	0x2e, 0x8d, 0xed, 0xe4, 0x0c, 0x4a, 0x01, 0xd6, 0x55, 0x98, 0xa7, 0x88, 0xf4, 0xd2, 0x56, 0x05,
	0xd5, 0x9b, 0xf9, 0x50, 0xf6, 0x8e, 0xc4, 0x91, 0x6f, 0xcb, 0x77, 0x82, 0x7e, 0xeb, 0x80, 0x1f,
	0xeb, 0x23, 0x03, 0x42, 0x7e, 0xc0, 0x8f, 0x8d, 0x88, 0x42, 0x2a, 0x88, 0xfd, 0xbc, 0x19, 0x51,
	0x48, 0x05, 0xb2, 0xbf, 0x02, 0xcb, 0xfb, 0xdc, 0x6f, 0x65, 0x16, 0x3c, 0x39, 0x2c, 0x37, 0xf6,
	0xb9, 0xbf, 0x99, 0xae, 0x79, 0xeb, 0x1a, 0x58, 0xe9, 0x93, 0x12, 0x52, 0x82, 0x8f, 0xe4, 0x9b,
	0x8e, 0x2b, 0xfa, 0x59, 0x09, 0x95, 0x61, 0x7f, 0x84, 0xfa, 0xc8, 0xdb, 0xbe, 0x10, 0x12, 0xf3,
	0x7e, 0x2d, 0x63, 0x9d, 0x70, 0xec, 0x8f, 0x71, 0x19, 0xa9, 0x98, 0xbd, 0xea, 0x04, 0x8a, 0xde,
	0xbe, 0x93, 0x22, 0xf7, 0xda, 0x9f, 0xe0, 0xa4, 0x52, 0x65, 0xb7, 0x64, 0xab, 0xa6, 0x7c, 0xb9,
	0xe2, 0x37, 0x70, 0x1b, 0xb9, 0xc3, 0xe3, 0x76, 0x4f, 0x4e, 0xae, 0x2d, 0xa9, 0x2c, 0x9b, 0xe0,
	0xfc, 0xb1, 0x94, 0x46, 0xf8, 0x37, 0xe7, 0x59, 0x5d, 0x87, 0xf9, 0xc7, 0xa9, 0x46, 0x13, 0xde,
	0x24, 0x8f, 0xba, 0xe1, 0xb1, 0x1a, 0xd2, 0xdb, 0xf0, 0x9a, 0x2e, 0x33, 0x14, 0x6f, 0xfe, 0x78,
	0x4b, 0x47, 0x45, 0xcf, 0x06, 0x4d, 0x2f, 0xe5, 0x82, 0xa6, 0xdb, 0xdf, 0x47, 0x0d, 0x4c, 0x31,
	0x19, 0x0a, 0x00, 0x8e, 0x6b, 0xef, 0x1c, 0x54, 0x92, 0xac, 0x7e, 0x7a, 0x21, 0x71, 0xa9, 0xf1,
	0xb7, 0xe0, 0xf5, 0x91, 0x14, 0x54, 0x68, 0x24, 0xf5, 0x39, 0xa3, 0x87, 0x76, 0x6f, 0xcc, 0xe7,
	0xa4, 0x0a, 0xa1, 0x68, 0xa2, 0x0b, 0x1a, 0x06, 0xae, 0x31, 0x55, 0x2b, 0x55, 0x0f, 0x75, 0x9e,
	0x1d, 0xfe, 0xdc, 0xfe, 0x01, 0x5c, 0x1c, 0x59, 0x07, 0xb6, 0x90, 0x1c, 0xc7, 0xc2, 0xd8, 0x08,
	0x42, 0x18, 0xc6, 0x23, 0xa6, 0xc4, 0xcd, 0x31, 0x1d, 0xf7, 0x05, 0x3e, 0x6c, 0xa3, 0x98, 0xd6,
	0xe8, 0x8f, 0xbe, 0x0d, 0x17, 0x14, 0x0d, 0xfd, 0x36, 0x90, 0x61, 0x5e, 0x3f, 0xa5, 0x65, 0xbd,
	0x7d, 0x05, 0x75, 0xd0, 0x77, 0x1f, 0x88, 0xb9, 0xc3, 0x7c, 0xf9, 0x52, 0x26, 0xfe, 0x4c, 0x55,
	0xbb, 0x98, 0xb4, 0x6f, 0xe0, 0xa1, 0x41, 0x63, 0xa2, 0x2a, 0x58, 0x46, 0x2c, 0xc1, 0x40, 0xd9,
	0x18, 0x6c, 0x4a, 0xee, 0xd0, 0x02, 0x80, 0xa1, 0xa6, 0x38, 0x0e, 0xf0, 0x5d, 0xe6, 0xfa, 0xf9,
	0x67, 0x94, 0x4e, 0xea, 0xc8, 0x79, 0x5e, 0x30, 0xb9, 0x23, 0xf9, 0x29, 0xd2, 0xfe, 0x89, 0x00,
	0xdb, 0x1d, 0xfb, 0xcf, 0xe3, 0x1a, 0x13, 0xd5, 0xe8, 0xbe, 0x90, 0x74, 0xa7, 0x74, 0x30, 0xc8,
	0x55, 0x5f, 0xce, 0x57, 0x6f, 0xbf, 0x83, 0x7b, 0x84, 0xa8, 0xe1, 0x89, 0x3b, 0x90, 0xb4, 0xcf,
	0x43, 0xf5, 0xd0, 0x1d, 0xb4, 0x4c, 0xbf, 0x94, 0xca, 0xa1, 0xb4, 0x86, 0x95, 0x9a, 0x58, 0x35,
	0x89, 0xd5, 0x78, 0x8e, 0xb4, 0xa4, 0x97, 0x6c, 0x42, 0x4f, 0x7a, 0xde, 0x8d, 0x55, 0xa0, 0xb2,
	0xb1, 0x06, 0xf8, 0x97, 0x01, 0xa3, 0x2a, 0xb5, 0x8c, 0x40, 0x64, 0x65, 0xf9, 0x81, 0x2c, 0x52,
	0x24, 0xb6, 0x3b, 0xb9, 0xe6, 0xa8, 0x35, 0xd5, 0x75, 0xbd, 0x8c, 0x36, 0xb2, 0x42, 0x80, 0xed,
	0x8e, 0x7d, 0x15, 0xb7, 0x25, 0xe3, 0xb2, 0x67, 0x6c, 0xe3, 0x77, 0x51, 0x72, 0x4b, 0xb1, 0x4f,
	0xba, 0x22, 0x0a, 0xbd, 0xba, 0xe5, 0x84, 0x4b, 0x17, 0xb0, 0xf1, 0xce, 0x43, 0x86, 0xa1, 0x54,
	0x9d, 0x4a, 0xa2, 0x38, 0xca, 0x0f, 0xb0, 0xd0, 0x3d, 0xe6, 0x77, 0x3c, 0x6e, 0xfa, 0x4c, 0x8c,
	0xe5, 0xb5, 0x67, 0x60, 0xbe, 0xcf, 0xe3, 0x5e, 0x90, 0x86, 0x39, 0xc3, 0x94, 0xfd, 0x19, 0xde,
	0x24, 0xdd, 0xe3, 0x2c, 0xbe, 0xc9, 0x59, 0x6c, 0x5d, 0x87, 0xd3, 0x7e, 0x90, 0xaa, 0x57, 0x5b,
	0xea, 0x49, 0x59, 0x22, 0x67, 0xf9, 0x81, 0x56, 0xb1, 0x6e, 0x51, 0x8e, 0xfd, 0x19, 0x5c, 0x72,
	0xf8, 0xb3, 0xcf, 0x03, 0xd7, 0x1f, 0x5a, 0xe7, 0x5b, 0x3d, 0x16, 0xa3, 0x18, 0x39, 0x76, 0x95,
	0x6f, 0x60, 0xc7, 0x0a, 0x02, 0xd3, 0xdf, 0x01, 0x5c, 0xc6, 0x56, 0x8b, 0x32, 0x48, 0x7f, 0x54,
	0x74, 0x37, 0xfb, 0x1e, 0x4e, 0x89, 0xfb, 0x9c, 0x1d, 0x4e, 0x27, 0xf5, 0x8c, 0xf6, 0x1d, 0x7c,
	0x13, 0xf7, 0x20, 0x9c, 0xf7, 0x26, 0x0b, 0x2a, 0xba, 0x0d, 0xf9, 0xe3, 0x32, 0x54, 0x04, 0x2e,
	0x8a, 0x3a, 0x5f, 0xeb, 0xda, 0xec, 0x9f, 0x26, 0x71, 0x87, 0x74, 0xe8, 0x32, 0x9c, 0xc1, 0x3b,
	0x38, 0x17, 0x1e, 0x04, 0x1d, 0xb7, 0x7b, 0x7c, 0xd3, 0x0d, 0xe3, 0x5e, 0x87, 0x1d, 0x8b, 0x8e,
	0xda, 0x93, 0xbf, 0xd5, 0x80, 0xa9, 0xb4, 0xfd, 0x85, 0x51, 0x60, 0xaa, 0xf3, 0xd4, 0x4b, 0x50,
	0x4b, 0x22, 0x7a, 0x0e, 0xcd, 0xf0, 0xc3, 0x4e, 0x22, 0x7c, 0x03, 0x6d, 0xbb, 0x63, 0xff, 0xa6,
	0x41, 0x70, 0x47, 0x0d, 0xc7, 0x2b, 0xb0, 0xe8, 0xf3, 0xa3, 0x96, 0x1e, 0x2e, 0x22, 0x5a, 0xf3,
	0xf9, 0x91, 0x89, 0x12, 0x78, 0x9d, 0x56, 0x6e, 0x44, 0x6b, 0x81, 0xd7, 0x31, 0x51, 0x32, 0x77,
	0x91, 0x33, 0xc3, 0x77, 0x91, 0xd7, 0x91, 0x25, 0x51, 0xed, 0x38, 0xb3, 0x73, 0xae, 0x12, 0xa5,
	0x21, 0x57, 0x89, 0x0d, 0xd4, 0xf4, 0x50, 0x89, 0x5d, 0x77, 0xdf, 0x67, 0x71, 0x12, 0xe2, 0x85,
	0x46, 0xa4, 0x12, 0xb2, 0xb5, 0x29, 0xc0, 0xfe, 0x84, 0xbe, 0x31, 0xf1, 0x62, 0x77, 0x53, 0x1f,
	0x3a, 0xa6, 0xbd, 0x69, 0xdf, 0xc6, 0x26, 0x7e, 0xc1, 0x92, 0xb8, 0xb7, 0xb1, 0x99, 0xc4, 0xbd,
	0x51, 0xd1, 0x8c, 0x86, 0x2e, 0x74, 0x97, 0x61, 0x26, 0xbd, 0x69, 0x16, 0x3f, 0xed, 0xbb, 0x78,
	0x17, 0x44, 0xa4, 0xb6, 0x7a, 0xbc, 0x7d, 0x50, 0x48, 0x2b, 0x7f, 0xaa, 0x2e, 0x0f, 0x9f, 0xaa,
	0x7f, 0xbb, 0x6c, 0x50, 0xa2, 0x75, 0xf7, 0xf5, 0x28, 0xfd, 0x1a, 0x2e, 0xbc, 0x13, 0x2e, 0xa7,
	0x9f, 0x97, 0x90, 0xe5, 0x51, 0x57, 0x88, 0x09, 0x91, 0x0c, 0xbe, 0x6e, 0x5f, 0xe8, 0x53, 0xda,
	0x8c, 0x79, 0x4a, 0x1b, 0x52, 0x48, 0xcc, 0x16, 0x28, 0x24, 0x7e, 0x86, 0x22, 0x17, 0x3e, 0x93,
	0x31, 0xc9, 0x23, 0xb5, 0x78, 0xb3, 0xbc, 0x08, 0x40, 0xc1, 0x15, 0xdb, 0x07, 0x5c, 0x0f, 0x04,
	0x46, 0x55, 0x14, 0x00, 0xbb, 0x85, 0x33, 0x58, 0xd0, 0x7f, 0xc0, 0xfc, 0x84, 0x79, 0x13, 0x23,
	0x1a, 0x15, 0x54, 0x81, 0xc1, 0x54, 0xd1, 0xd3, 0x45, 0x9f, 0xc1, 0x2b, 0x04, 0xc0, 0x4d, 0xe9,
	0xac, 0xac, 0xc0, 0xc1, 0x01, 0x23, 0x71, 0x68, 0x6c, 0x35, 0xf6, 0x27, 0xa8, 0x2f, 0x50, 0x43,
	0x91, 0x7d, 0xa4, 0x90, 0x6c, 0x43, 0x7a, 0xdc, 0x3b, 0xe4, 0x91, 0x19, 0x49, 0x95, 0x20, 0xdb,
	0x1d, 0xfb, 0x7b, 0xb8, 0xbf, 0x38, 0x9c, 0x75, 0x32, 0xcf, 0x4d, 0xbe, 0x01, 0x4b, 0x66, 0x80,
	0x8c, 0xb4, 0x68, 0xc3, 0x04, 0x6f, 0x77, 0xe4, 0x8e, 0x28, 0xca, 0x8f, 0x3f, 0x8c, 0xaf, 0xcb,
	0x7a, 0xd0, 0x37, 0x48, 0x07, 0x43, 0x18, 0x7d, 0x43, 0xb9, 0x81, 0x32, 0xb8, 0x83, 0x7e, 0x5d,
	0x53, 0x1a, 0xc8, 0x48, 0x41, 0x8c, 0xca, 0x4c, 0x63, 0xcd, 0xf2, 0x29, 0x0a, 0x9e, 0x5f, 0xdb,
	0x9d, 0xef, 0x2a, 0x7d, 0xba, 0x74, 0x9d, 0x9b, 0x64, 0xef, 0xf3, 0x1a, 0x4e, 0x4d, 0x81, 0x4d,
	0xde, 0x74, 0xda, 0x5d, 0xae, 0x64, 0xba, 0xcb, 0x35, 0x34, 0x16, 0x3d, 0x1a, 0x7c, 0x0d, 0x27,
	0xdc, 0x2e, 0x3b, 0x16, 0x32, 0x8d, 0xba, 0x36, 0x1e, 0x69, 0x23, 0x62, 0xbf, 0x8f, 0x22, 0xda,
	0x2e, 0x67, 0x61, 0xbb, 0x27, 0x59, 0xec, 0xcd, 0xe3, 0xa1, 0x20, 0x20, 0x43, 0x6d, 0x7b, 0x82,
	0x47, 0xff, 0x5c, 0xb1, 0x1d, 0x16, 0xc7, 0x3c, 0xf4, 0x65, 0x10, 0xd6, 0xb0, 0xdd, 0x6b, 0xf9,
	0xfc, 0x79, 0x2c, 0x9b, 0x0b, 0x04, 0x7a, 0xc8, 0x9f, 0xcb, 0xe8, 0x6f, 0x88, 0xab, 0x84, 0x17,
	0x99, 0xb4, 0xff, 0xb8, 0x84, 0x3d, 0xbc, 0xcb, 0xbd, 0xee, 0x78, 0x57, 0xaa, 0xe2, 0x7b, 0x77,
	0x65, 0x17, 0x3d, 0x63, 0xd8, 0x45, 0x17, 0xdd, 0xc5, 0xcf, 0x16, 0xdf, 0xc5, 0x17, 0x5b, 0x4a,
	0x8f, 0xbe, 0xa1, 0x1f, 0xe0, 0x78, 0xee, 0x72, 0x8f, 0x96, 0xf5, 0x5b, 0x30, 0x17, 0x71, 0xcf,
	0x53, 0x56, 0xa9, 0xa7, 0xc9, 0x00, 0x50, 0xe7, 0xcb, 0xc7, 0x4f, 0x11, 0xa5, 0x39, 0x4d, 0x70,
	0xb3, 0x82, 0xc3, 0x2a, 0x93, 0xc3, 0xe5, 0x77, 0xb2, 0x76, 0x01, 0x63, 0x65, 0xc5, 0x93, 0x45,
	0x8f, 0xf9, 0x23, 0x52, 0xb5, 0x8b, 0x3a, 0xee, 0xba, 0xdd, 0xf8, 0x51, 0x70, 0x12, 0xab, 0x09,
	0xeb, 0x7d, 0x98, 0xdb, 0x77, 0xbb, 0xb1, 0x32, 0xdf, 0x7b, 0x59, 0xf7, 0xc1, 0x10, 0xb5, 0x75,
	0x8c, 0xa6, 0x40, 0xd8, 0xa2, 0x3b, 0x30, 0x78, 0xc2, 0x09, 0xbb, 0xe3, 0x7d, 0x5c, 0xbf, 0xbb,
	0xbd, 0x60, 0xb0, 0x93, 0x84, 0xed, 0x1e, 0x8b, 0x78, 0x66, 0xb2, 0xc8, 0x17, 0x84, 0xa5, 0x6e,
	0xa8, 0xac, 0x5f, 0x29, 0xfa, 0x29, 0x4d, 0x32, 0xdc, 0x73, 0xbe, 0x91, 0xd5, 0x98, 0x16, 0x1f,
	0x66, 0x52, 0xf1, 0xc1, 0xfe, 0xe7, 0x91, 0x23, 0xef, 0x06, 0xde, 0x21, 0xcf, 0x9b, 0x18, 0xad,
	0xc3, 0x29, 0xd7, 0x67, 0x83, 0x41, 0x6b, 0x20, 0x9b, 0x4b, 0x07, 0x75, 0xa2, 0xba, 0x82, 0x59,
	0xea, 0x43, 0xd0, 0xd9, 0xe2, 0x3a, 0x9c, 0x26, 0x7c, 0x81, 0xd6, 0x4a, 0x05, 0x25, 0xaa, 0xce,
	0xc2, 0x3c, 0x81, 0xa8, 0xe5, 0x29, 0xa9, 0x93, 0x43, 0x56, 0x70, 0x42, 0x9d, 0xdc, 0x77, 0x69,
	0x32, 0x1f, 0xfb, 0x6d, 0x34, 0x2b, 0x3b, 0x07, 0x15, 0x8c, 0x7b, 0x6f, 0x58, 0x43, 0x61, 0x5a,
	0x5a, 0x06, 0xc5, 0x7c, 0xa0, 0x2d, 0x83, 0x62, 0x3e, 0xb0, 0xaf, 0x22, 0xdb, 0x79, 0x94, 0x0d,
	0x6a, 0x37, 0x92, 0xb7, 0x7f, 0x07, 0x37, 0xa0, 0x47, 0x38, 0x41, 0x4f, 0xd8, 0xcc, 0x7b, 0x78,
	0x83, 0x40, 0x3e, 0xb2, 0xca, 0x8a, 0x52, 0xba, 0xd1, 0x5a, 0x57, 0x61, 0x41, 0xba, 0xd4, 0x9a,
	0x5e, 0xb7, 0x59, 0x2c, 0x47, 0xa1, 0xd8, 0xdf, 0xc3, 0xb5, 0x44, 0x94, 0x68, 0x35, 0xd1, 0xf3,
	0x3f, 0xcb, 0x30, 0x23, 0xc4, 0x20, 0xaa, 0x58, 0xfc, 0x1c, 0x61, 0x5d, 0xf4, 0x3d, 0x1c, 0x67,
	0x59, 0x9e, 0xce, 0x6c, 0xca, 0x1b, 0x12, 0x9d, 0xb0, 0x49, 0x5f, 0xc8, 0x3c, 0x2f, 0x38, 0x92,
	0xc4, 0x16, 0x25, 0x70, 0x53, 0xc0, 0xec, 0xcf, 0x71, 0x83, 0xa3, 0xf2, 0xdb, 0xb7, 0xb6, 0xe4,
	0x43, 0xe7, 0x62, 0xba, 0x75, 0x13, 0xcf, 0x33, 0xcf, 0x04, 0x2a, 0x2d, 0x3a, 0xb4, 0xcd, 0xc2,
	0x4e, 0xcb, 0x57, 0x2f, 0xea, 0xce, 0x8b, 0xe4, 0xc3, 0xc0, 0x7e, 0xc7, 0xf8, 0x16, 0xb1, 0x5b,
	0xa8, 0x33, 0xa4, 0x38, 0x6f, 0x72, 0xd6, 0x31, 0xcf, 0x9b, 0x9c, 0x75, 0xd0, 0x80, 0x95, 0x2a,
	0xc7, 0x90, 0x19, 0x27, 0xb2, 0x8b, 0x22, 0x75, 0xfa, 0xe3, 0x88, 0xdf, 0x64, 0xfb, 0xe3, 0xc5,
	0x8c, 0xd7, 0x50, 0xd6, 0x7d, 0x1c, 0x71, 0xb1, 0xb4, 0xb7, 0x64, 0xf0, 0xf1, 0xbc, 0xe1, 0xa3,
	0xfd, 0x2a, 0xce, 0xbb, 0xc7, 0x42, 0x62, 0x8a, 0x3d, 0x9e, 0x7a, 0x14, 0x94, 0x0c, 0x8f, 0x02,
	0xfb, 0x73, 0xe4, 0x49, 0xe9, 0x65, 0xd1, 0x9d, 0x20, 0xdc, 0xc5, 0xd3, 0x48, 0xa1, 0x2d, 0xe5,
	0x05, 0xd3, 0xaa, 0x5a, 0x1e, 0x9c, 0x52, 0x37, 0x9b, 0xff, 0xbe, 0x2c, 0x88, 0x45, 0x66, 0x9c,
	0x20, 0x37, 0x3e, 0x96, 0x2f, 0x89, 0xcf, 0xf1, 0x30, 0x0c, 0x54, 0x48, 0xae, 0xaa, 0x98, 0x3e,
	0xf8, 0xa6, 0x9d, 0x43, 0x70, 0xeb, 0x53, 0x58, 0xd6, 0xda, 0x69, 0xf5, 0x20, 0x57, 0x39, 0x75,
	0x43, 0xcf, 0xbe, 0x42, 0xe7, 0x2c, 0xf1, 0x4c, 0x3a, 0xb2, 0xbe, 0x07, 0x16, 0x0a, 0x2f, 0x2a,
	0x48, 0x53, 0xfa, 0xe4, 0x78, 0x51, 0x2c, 0xa7, 0xe5, 0xd8, 0x48, 0xa1, 0x16, 0xe7, 0x09, 0x9c,
	0x61, 0xa9, 0xea, 0x4e, 0xbe, 0x91, 0x80, 0x34, 0x28, 0x26, 0xff, 0x25, 0x33, 0xe4, 0x5d, 0xd1,
	0x5b, 0xe9, 0xce, 0x69, 0x96, 0x83, 0x22, 0xdd, 0xcf, 0xa0, 0x81, 0x8f, 0x3f, 0x20, 0x9b, 0xd1,
	0x31, 0xfb, 0xa5, 0x2d, 0x7a, 0xe1, 0xab, 0xe7, 0xce, 0xa2, 0x28, 0x20, 0x7e, 0xe1, 0x59, 0x0b,
	0x15, 0xfa, 0xaa, 0x4b, 0xf5, 0x74, 0x52, 0xef, 0xf2, 0x26, 0xbe, 0x17, 0xb4, 0x0f, 0x32, 0x01,
	0xa7, 0x08, 0x84, 0x65, 0x0f, 0xc5, 0x34, 0x89, 0x4c, 0xe3, 0xeb, 0x89, 0xc3, 0xf0, 0x7a, 0xca,
	0xac, 0x0d, 0xef, 0x07, 0x49, 0x22, 0xe5, 0xdc, 0x17, 0x60, 0x36, 0x0c, 0x82, 0xbe, 0x0c, 0x3f,
	0x54, 0x21, 0xc1, 0x2c, 0xe8, 0x3b, 0x08, 0xb5, 0xb9, 0x38, 0x90, 0x46, 0x79, 0x1e, 0x32, 0xb1,
	0x6e, 0xd3, 0xb7, 0xdf, 0x18, 0xfa, 0x1c, 0x97, 0x49, 0x7d, 0xfb, 0xdb, 0x62, 0xb3, 0x89, 0x0c,
	0x83, 0x6f, 0x3e, 0x55, 0x25, 0xf3, 0x32, 0x84, 0x3d, 0x55, 0x31, 0x2a, 0xb2, 0x95, 0xc4, 0xb2,
	0xff, 0x66, 0xc9, 0x1c, 0x80, 0xac, 0x59, 0xf9, 0xc4, 0xca, 0x3e, 0x83, 0x46, 0xa4, 0x4a, 0xa8,
	0x0d, 0x49, 0x54, 0xba, 0x66, 0x7e, 0x97, 0x42, 0xc0, 0xc1, 0xaf, 0x47, 0x66, 0xd2, 0xfa, 0x54,
	0xbf, 0x07, 0xa0, 0x1f, 0x39, 0x90, 0xf1, 0xce, 0x64, 0x69, 0x52, 0x16, 0x6a, 0x1a, 0x4f, 0x36,
	0xd4, 0xcb, 0x00, 0xa8, 0x97, 0xfe, 0x99, 0xd9, 0x43, 0x32, 0xfa, 0xc1, 0xc4, 0x46, 0xa7, 0x81,
	0x23, 0xcb, 0x93, 0x02, 0x47, 0x3e, 0x95, 0x13, 0xac, 0xe7, 0xf2, 0x43, 0x3a, 0xac, 0x4c, 0xa4,
	0xfe, 0x61, 0x26, 0xd8, 0x9a, 0x11, 0xcd, 0xde, 0xa0, 0x52, 0x18, 0x73, 0xed, 0xcf, 0x0b, 0x89,
	0x24, 0x52, 0x4b, 0x46, 0x06, 0xa0, 0x98, 0x50, 0xd9, 0x55, 0x80, 0x5c, 0x1c, 0xca, 0x7c, 0xf0,
	0x4a, 0x23, 0xdf, 0xfe, 0xae, 0xd8, 0xe1, 0xa3, 0x11, 0x5e, 0x00, 0x93, 0xea, 0xb2, 0xff, 0xad,
	0x12, 0x35, 0xd0, 0x3c, 0xba, 0x4d, 0x6c, 0xe0, 0x50, 0x8c, 0xc4, 0xf2, 0xc9, 0x62, 0x24, 0xce,
	0xa4, 0x31, 0x12, 0xe9, 0xea, 0x80, 0x75, 0x52, 0xae, 0x85, 0x57, 0x07, 0x8c, 0x54, 0x36, 0xff,
	0x07, 0x7a, 0x3e, 0x45, 0xda, 0x5d, 0x60, 0x8a, 0xae, 0xcb, 0xf9, 0x8b, 0x4c, 0xff, 0x2a, 0xc9,
	0x4c, 0xf6, 0x55, 0x12, 0xcb, 0x86, 0xba, 0x1b, 0xb5, 0x72, 0x31, 0xff, 0xf0, 0xe5, 0x95, 0x34,
	0xee, 0x4a, 0xee, 0xd5, 0x94, 0xb9, 0x89, 0xaf, 0xa6, 0x0c, 0xc5, 0x97, 0x99, 0x1f, 0x8e, 0x2f,
	0x73, 0x0f, 0xc0, 0xe1, 0x91, 0xd8, 0x4d, 0xa7, 0x5a, 0xad, 0xe7, 0x60, 0x66, 0x8f, 0xed, 0xcb,
	0x59, 0xbf, 0x20, 0xb2, 0x6f, 0xb2, 0x7d, 0x47, 0xc0, 0xec, 0x43, 0xb1, 0xa9, 0x47, 0x43, 0xf6,
	0xfc, 0x53, 0x90, 0x4c, 0x95, 0x1e, 0xe5, 0xac, 0xd2, 0x63, 0xaa, 0x67, 0x43, 0x7f, 0x82, 0x0b,
	0xcc, 0xb4, 0xff, 0x9f, 0x58, 0xe5, 0xf4, 0xa1, 0x40, 0xef, 0xc0, 0xab, 0x0e, 0x8f, 0x26, 0x9a,
	0x96, 0x4f, 0x9c, 0xf9, 0xff, 0x27, 0x1e, 0x2d, 0xa3, 0xfc, 0xe6, 0x34, 0xa1, 0x9d, 0xd7, 0x00,
	0xb4, 0xf0, 0xa3, 0x9a, 0x9a, 0x73, 0x87, 0x34, 0x10, 0xf0, 0x9a, 0xe5, 0xc0, 0xf5, 0x23, 0x39,
	0xbb, 0x28, 0x61, 0xbd, 0x05, 0x2b, 0xd9, 0x28, 0x76, 0xa9, 0xa9, 0xeb, 0x52, 0x26, 0x3c, 0x1d,
	0x69, 0x37, 0x23, 0xee, 0x77, 0x30, 0x36, 0x5d, 0x36, 0xf8, 0x7d, 0x24, 0xcf, 0x50, 0xfa, 0x91,
	0x8a, 0x14, 0xcf, 0x8c, 0x80, 0xa2, 0xf1, 0x28, 0xf8, 0xc9, 0xbf, 0x89, 0x7e, 0xd4, 0x91, 0x29,
	0xe0, 0xae, 0xc3, 0x9c, 0xe0, 0xd3, 0xea, 0x9c, 0xba, 0x46, 0x3d, 0x6f, 0xa2, 0xac, 0xe3, 0x5f,
	0x87, 0xd0, 0xac, 0x37, 0x60, 0x29, 0xe4, 0xa2, 0xed, 0xfb, 0xbc, 0x93, 0x8d, 0x12, 0xa3, 0xc1,
	0xe4, 0x40, 0xf6, 0x0e, 0xcc, 0x9d, 0x4c, 0x84, 0xfe, 0x23, 0xb4, 0x5c, 0x89, 0x0a, 0x86, 0x75,
	0x3a, 0xce, 0xf9, 0x11, 0xd4, 0x64, 0x2c, 0x18, 0x23, 0xfa, 0xc9, 0xd9, 0xd4, 0xf1, 0x2e, 0xe3,
	0xba, 0xee, 0x40, 0x98, 0x92, 0x1e, 0x15, 0x45, 0x66, 0x66, 0x64, 0x14, 0x99, 0x2f, 0xc5, 0x09,
	0x27, 0xca, 0x09, 0xfa, 0x13, 0x5b, 0x38, 0x74, 0x12, 0x28, 0x17, 0x9c, 0x04, 0xae, 0x42, 0x55,
	0x92, 0x0e, 0xfc, 0xc9, 0x13, 0xf9, 0x77, 0x4b, 0x42, 0x02, 0x8f, 0x0c, 0x8f, 0x88, 0x29, 0xd8,
	0xe4, 0x5c, 0xe4, 0x05, 0x71, 0x46, 0x9a, 0xc8, 0x90, 0x58, 0xc7, 0x35, 0x47, 0x48, 0xcd, 0xeb,
	0x30, 0x2b, 0x92, 0x27, 0x70, 0xb4, 0x08, 0x65, 0xdf, 0xa8, 0xc0, 0x5d, 0xd3, 0xad, 0xad, 0xef,
	0xc2, 0x92, 0xd4, 0x2b, 0xeb, 0xf7, 0xb4, 0xca, 0x63, 0xde, 0xd3, 0x22, 0x5c, 0x95, 0xb6, 0xbf,
	0x44, 0x89, 0xa7, 0xd0, 0xcb, 0x60, 0x62, 0xcd, 0x17, 0x01, 0xa4, 0xdd, 0x7e, 0x12, 0x7a, 0xf2,
	0x28, 0x55, 0x25, 0xc8, 0xe3, 0xd0, 0xb3, 0x9f, 0x88, 0xd3, 0x54, 0x34, 0xec, 0x49, 0xf0, 0x4d,
	0xe9, 0xfe, 0x6b, 0x68, 0x0d, 0x18, 0x15, 0x1b, 0xf9, 0x4f, 0x33, 0x95, 0x9e, 0x85, 0xe2, 0x7c,
	0xd3, 0xda, 0x4b, 0xba, 0x5d, 0xae, 0x0d, 0xec, 0x08, 0x78, 0x13, 0x61, 0x19, 0x27, 0xa6, 0x99,
	0x6c, 0x04, 0xb6, 0xb3, 0xb0, 0xf0, 0x2c, 0x6c, 0xb5, 0xd5, 0xfb, 0x80, 0x55, 0x67, 0xfe, 0x59,
	0x28, 0xce, 0x52, 0xf6, 0x2e, 0xac, 0xea, 0x56, 0x65, 0x5c, 0x00, 0xa6, 0xd9, 0x38, 0x46, 0xc4,
	0x7b, 0xb3, 0x1f, 0xe1, 0x21, 0xab, 0xc8, 0x6e, 0xff, 0x9b, 0x50, 0xfd, 0x21, 0xee, 0x70, 0x43,
	0x56, 0xf5, 0xdf, 0x84, 0xe4, 0x9f, 0x23, 0x16, 0x34, 0xc2, 0xe6, 0xfd, 0xc5, 0x75, 0x81, 0x69,
	0xb3, 0xfa, 0x4d, 0xa8, 0x3a, 0xc6, 0xe4, 0x34, 0xed, 0xc5, 0xbf, 0x09, 0xcd, 0x1d, 0x3c, 0x0a,
	0xe5, 0xad, 0xb0, 0x5f, 0x54, 0xaf, 0x0e, 0xdb, 0x48, 0xbf, 0xa8, 0x5e, 0xcd, 0x5a, 0x30, 0xbf,
	0x38, 0xaa, 0x2f, 0x6a, 0xac, 0x9e, 0x18, 0xeb, 0x3d, 0x6f, 0xfd, 0xfb, 0x4d, 0xe8, 0x3e, 0xa4,
	0x1d, 0x20, 0x35, 0x7f, 0x9d, 0x48, 0x4c, 0x1d, 0x85, 0xcb, 0x85, 0x47, 0xe1, 0x7f, 0x58, 0x36,
	0x98, 0x69, 0xce, 0xae, 0x75, 0x22, 0x69, 0x06, 0xab, 0x6d, 0xe6, 0x79, 0x2d, 0x8a, 0xab, 0xd5,
	0x42, 0xf5, 0x26, 0x3e, 0x19, 0x4a, 0x75, 0xad, 0xab, 0xcd, 0xa6, 0x80, 0xf8, 0xfa, 0x16, 0xf3,
	0x3c, 0x0d, 0xa2, 0xc7, 0x43, 0xad, 0xf6, 0x10, 0xac, 0xf9, 0x77, 0x4b, 0x60, 0x0d, 0xa3, 0x8a,
	0xcd, 0x88, 0x0d, 0x06, 0x5a, 0x41, 0x49, 0x09, 0xeb, 0x02, 0x54, 0x07, 0x2c, 0x8c, 0x7d, 0x1e,
	0xea, 0x8e, 0x4b, 0x01, 0xa8, 0xcd, 0x0d, 0xf9, 0x80, 0x1d, 0xa7, 0xbe, 0xc4, 0x2a, 0x4d, 0xf7,
	0x12, 0xed, 0x03, 0xb6, 0xaf, 0x38, 0xa4, 0x4a, 0xe2, 0x45, 0x7d, 0xe0, 0xb7, 0x79, 0x14, 0x87,
	0x2a, 0x86, 0xa8, 0x4a, 0x67, 0x7d, 0xf2, 0xe8, 0x66, 0xd4, 0xf0, 0xc9, 0x13, 0x9b, 0xa8, 0xbb,
	0x4f, 0x26, 0x08, 0x55, 0x07, 0x7f, 0xdb, 0x7f, 0xc1, 0x58, 0x1c, 0xc3, 0xf6, 0xba, 0xbf, 0xec,
	0x8d, 0xc0, 0xfe, 0xbb, 0x25, 0xe2, 0xa2, 0x79, 0xbb, 0xdc, 0x89, 0x15, 0xdf, 0x84, 0x05, 0xb4,
	0x6c, 0xd1, 0xa7, 0xd4, 0x2b, 0x6a, 0x6c, 0x73, 0xa4, 0xd6, 0xf3, 0x00, 0x47, 0x15, 0x6c, 0xee,
	0xc0, 0xf2, 0x50, 0xc5, 0x23, 0x23, 0x52, 0xbf, 0x0a, 0x75, 0x71, 0x76, 0x73, 0xf5, 0x9b, 0x67,
	0x52, 0x7a, 0x92, 0x40, 0x3a, 0x7d, 0xfc, 0x08, 0x99, 0x17, 0xde, 0x10, 0xee, 0xba, 0xfb, 0xfe,
	0xf6, 0x94, 0xd2, 0xc7, 0x25, 0x58, 0x14, 0x83, 0xd1, 0x72, 0xfd, 0x56, 0x87, 0x1d, 0x47, 0xca,
	0xcc, 0x2c, 0x42, 0x12, 0xb7, 0xd8, 0x71, 0x64, 0xff, 0x0e, 0x46, 0x30, 0x88, 0xd2, 0xbb, 0xc7,
	0x89, 0x34, 0xaf, 0x17, 0xa8, 0x0d, 0xc6, 0xc6, 0x68, 0x17, 0x47, 0x83, 0x1e, 0x8b, 0x74, 0x78,
	0xc4, 0xf4, 0x8c, 0x85, 0x4f, 0x72, 0x47, 0xf2, 0xfa, 0x93, 0x3e, 0xf4, 0x7f, 0xc1, 0x00, 0x00,
	0xd1, 0x08, 0x83, 0xdb, 0x29, 0xc4, 0x2d, 0xa5, 0xa5, 0xc1, 0x48, 0x7a, 0xb4, 0x3a, 0xcf, 0x17,
	0x46, 0xa5, 0x97, 0x4f, 0x38, 0x4a, 0x25, 0x0d, 0xf6, 0xe7, 0x1d, 0x1a, 0x0a, 0x1e, 0xb6, 0x42,
	0xae, 0x5f, 0x67, 0x91, 0x8f, 0xd8, 0x0e, 0x95, 0x57, 0x41, 0x40, 0x05, 0xa2, 0x23, 0x0d, 0xf3,
	0x29, 0x65, 0xbd, 0x0c, 0x35, 0x37, 0x6a, 0x75, 0x03, 0x21, 0xf8, 0xea, 0x58, 0xcd, 0xe0, 0x46,
	0x77, 0x24, 0xc4, 0xfe, 0x05, 0xf5, 0x3a, 0x7e, 0xe5, 0x74, 0x4a, 0x80, 0x55, 0x98, 0x77, 0xa3,
	0x96, 0x0a, 0x85, 0x52, 0x71, 0xe6, 0xdc, 0xe8, 0xb6, 0x9f, 0x5e, 0x53, 0xcc, 0xa4, 0xd7, 0x14,
	0xd6, 0x06, 0x2c, 0xe2, 0x01, 0x3e, 0xa4, 0xc7, 0x1e, 0xa5, 0x75, 0xc4, 0x92, 0x7e, 0xfa, 0x8c,
	0xc0, 0x0e, 0x9e, 0xf2, 0x65, 0x82, 0xdc, 0x59, 0xa3, 0x11, 0xc6, 0xca, 0x13, 0x0f, 0x28, 0x0d,
	0xfe, 0x9c, 0xb7, 0x93, 0x98, 0xab, 0x57, 0x37, 0x68, 0x52, 0xac, 0x90, 0xb6, 0x18, 0x73, 0xe4,
	0xfb, 0x1a, 0x75, 0x6e, 0x26, 0xed, 0x2e, 0x6e, 0x48, 0x45, 0x96, 0xca, 0x13, 0x2b, 0x7d, 0x1b,
	0x2a, 0xf2, 0x78, 0x11, 0x99, 0x71, 0x3a, 0x24, 0x19, 0xbc, 0x85, 0xd4, 0x08, 0xf6, 0x1f, 0x12,
	0x33, 0x18, 0xb2, 0x59, 0x7e, 0x21, 0x27, 0x9b, 0x22, 0xc3, 0xe9, 0x99, 0x02, 0xc3, 0x69, 0xb1,
	0x18, 0xd1, 0x72, 0x52, 0x5d, 0x56, 0xc8, 0x48, 0xab, 0x02, 0xe6, 0xd0, 0x85, 0xc5, 0xbf, 0x5c,
	0x82, 0xd7, 0x74, 0x3b, 0xc7, 0xd9, 0x49, 0x4f, 0x6c, 0xf8, 0xf7, 0x61, 0x51, 0x1b, 0x52, 0xa7,
	0x0b, 0xe1, 0x62, 0xe1, 0x44, 0xde, 0xdc, 0x8b, 0x62, 0x71, 0x34, 0x77, 0xd4, 0x13, 0xab, 0x18,
	0x6f, 0xf5, 0x5f, 0x2a, 0xa1, 0x4e, 0x62, 0xa2, 0xb1, 0xf5, 0x34, 0x4b, 0x92, 0x9e, 0x55, 0x35,
	0xcf, 0xaf, 0xc5, 0x4b, 0x92, 0xc8, 0xaa, 0x67, 0x58, 0x51, 0x71, 0x74, 0x04, 0xaf, 0x8f, 0x6c,
	0x45, 0xc6, 0xb8, 0x74, 0x0a, 0x2d, 0x47, 0xd5, 0x73, 0xcd, 0x08, 0xb9, 0xb9, 0x07, 0x78, 0xef,
	0x71, 0xd6, 0x71, 0x2a, 0x9e, 0xa4, 0x67, 0xff, 0x1b, 0xe3, 0xc6, 0xc2, 0x34, 0xf2, 0x9e, 0xe6,
	0xc0, 0xe4, 0xf3, 0xe7, 0x39, 0x43, 0x6f, 0x01, 0x41, 0x43, 0x6f, 0xeb, 0x9d, 0xec, 0xf9, 0x7e,
	0xc6, 0xd4, 0x14, 0xa9, 0x68, 0x5b, 0xe6, 0xb1, 0xde, 0xfe, 0xd3, 0x12, 0x5c, 0x1c, 0xd9, 0xb2,
	0xe9, 0xfa, 0xe2, 0x7d, 0xb1, 0x7a, 0x10, 0x5f, 0xad, 0x9e, 0x73, 0x85, 0x03, 0x72, 0x93, 0x45,
	0xdc, 0xd1, 0xa8, 0xd6, 0x4d, 0x58, 0x22, 0xa6, 0xd6, 0xd2, 0xa5, 0x67, 0x26, 0x95, 0x6e, 0x50,
	0x09, 0x09, 0x8a, 0xec, 0x83, 0x31, 0xd3, 0xca, 0x30, 0x45, 0x9f, 0x66, 0x69, 0x06, 0x88, 0xae,
	0x1e, 0x59, 0x94, 0x4b, 0x93, 0x80, 0xc4, 0x9c, 0xed, 0xbf, 0x52, 0x86, 0x0b, 0xaa, 0xb6, 0x42,
	0xa3, 0xf5, 0x89, 0xd5, 0x7c, 0x02, 0x73, 0x6e, 0xcc, 0xfb, 0xaa, 0x9b, 0x5e, 0x97, 0xc2, 0xc0,
	0x48, 0x8a, 0xd2, 0x00, 0x02, 0xcb, 0x88, 0x8d, 0x4f, 0xae, 0x78, 0xda, 0xf9, 0x8c, 0x40, 0x34,
	0x4b, 0xb4, 0xec, 0x11, 0xfe, 0xc8, 0xed, 0xf3, 0xe6, 0x91, 0x34, 0x96, 0x98, 0x1c, 0x06, 0x6d,
	0xe8, 0x35, 0xd1, 0xcb, 0x30, 0x7b, 0xe8, 0xf2, 0x23, 0xb9, 0x5b, 0x15, 0x3e, 0xdb, 0x21, 0xf2,
	0xd3, 0xa0, 0xf6, 0xb3, 0x66, 0x50, 0xfb, 0xff, 0x02, 0xdd, 0x53, 0x23, 0xc3, 0x76, 0x79, 0xba,
	0x39, 0xf4, 0x5d, 0x58, 0x60, 0x83, 0x81, 0x97, 0xaa, 0xf3, 0x6d, 0xd5, 0x37, 0x59, 0x4a, 0xeb,
	0x46, 0xda, 0x51, 0x45, 0x9a, 0x3f, 0x80, 0xda, 0x0b, 0x8b, 0x30, 0x6f, 0xff, 0x45, 0xd2, 0x16,
	0x11, 0xc1, 0xe9, 0x5a, 0xff, 0x1a, 0x2c, 0x50, 0xf8, 0x67, 0xd5, 0x7a, 0xf3, 0xe5, 0x16, 0x95,
	0x55, 0x18, 0x3c, 0x7a, 0xa6, 0x28, 0x78, 0xb4, 0xfd, 0x0f, 0xe9, 0xce, 0x21, 0x63, 0x7e, 0x3f,
	0x85, 0xca, 0xca, 0xc2, 0xa0, 0x55, 0x14, 0xa6, 0x28, 0xe2, 0xed, 0x80, 0xda, 0x83, 0xaf, 0xd7,
	0x8b, 0x1c, 0xd4, 0xc8, 0xef, 0x12, 0x5c, 0x33, 0xb0, 0x1e, 0x67, 0xea, 0xb9, 0x99, 0x11, 0x0c,
	0x0c, 0x1f, 0x4c, 0xdf, 0x80, 0x8a, 0xb4, 0xd1, 0x57, 0xaf, 0x99, 0x9f, 0x31, 0xb1, 0xd3, 0x67,
	0xc5, 0x1d, 0x8d, 0x67, 0xbd, 0x01, 0x4b, 0x7e, 0x70, 0xd4, 0xea, 0xbb, 0x9e, 0xe7, 0x52, 0x73,
	0xa4, 0x62, 0xb6, 0xe1, 0x07, 0x47, 0x0f, 0x52, 0xa8, 0xfd, 0xbf, 0xa3, 0x01, 0x4d, 0x54, 0xe4,
	0x3d, 0x30, 0x0d, 0x3f, 0xf4, 0xb2, 0xaf, 0xda, 0xd4, 0x1d, 0xfc, 0x32, 0x0a, 0x85, 0xff, 0xcb,
	0x6c, 0xb7, 0xf5, 0x01, 0x9c, 0x55, 0x8e, 0x0b, 0x38, 0xaa, 0x46, 0x01, 0xd2, 0x2c, 0xaf, 0xca,
	0xec, 0xdb, 0x7e, 0xc7, 0xfc, 0x5e, 0x96, 0x19, 0xdd, 0x5f, 0xca, 0x86, 0xe3, 0xe2, 0x32, 0xcc,
	0x05, 0xf8, 0x9f, 0x5c, 0xcb, 0x06, 0x46, 0xb9, 0x32, 0x3d, 0x03, 0x47, 0x3c, 0x15, 0x50, 0x45,
	0x34, 0xac, 0xea, 0xe7, 0xb4, 0x5e, 0x4e, 0x70, 0xa7, 0x66, 0xd9, 0x30, 0x6b, 0xcc, 0xbb, 0xfc,
	0xf6, 0x84, 0x79, 0x18, 0xc6, 0x8e, 0xc5, 0x14, 0xc6, 0x6e, 0xd1, 0xc1, 0xdf, 0xe2, 0x88, 0x86,
	0x17, 0xee, 0x69, 0x3c, 0x90, 0x05, 0x91, 0x7e, 0x1c, 0x7a, 0xf6, 0x5f, 0xc2, 0x00, 0xb3, 0xd1,
	0x49, 0xf5, 0xe1, 0x2f, 0x43, 0x2d, 0x0e, 0x62, 0xe6, 0x65, 0x4e, 0x4b, 0x80, 0x20, 0xba, 0x35,
	0x38, 0xf1, 0x86, 0xda, 0x43, 0x6d, 0xd3, 0xb0, 0xdf, 0xc7, 0xc4, 0xa6, 0xbc, 0x53, 0xa4, 0x9a,
	0x1f, 0x57, 0xd3, 0x3e, 0xf6, 0xbb, 0x61, 0x08, 0x33, 0xb1, 0x0a, 0x7a, 0xf4, 0x85, 0x25, 0x71,
	0x8f, 0x2b, 0xd1, 0xbf, 0xe2, 0xe2, 0xe5, 0x21, 0x97, 0x0e, 0x12, 0x89, 0x1f, 0x87, 0xc7, 0xa9,
	0x81, 0x1b, 0x26, 0xed, 0x2e, 0x5c, 0x72, 0x78, 0x34, 0xde, 0x0f, 0x64, 0x62, 0xdd, 0x64, 0x28,
	0x13, 0xb7, 0x7a, 0xae, 0x38, 0x24, 0x1c, 0xe3, 0xf7, 0x2d, 0xa2, 0xa1, 0x4c, 0x7c, 0x8f, 0x40,
	0xf6, 0x7d, 0xbc, 0xcb, 0xd4, 0xae, 0x1f, 0xdf, 0x50, 0x45, 0xf3, 0x3f, 0x91, 0x9c, 0x3e, 0xe4,
	0xd7, 0x31, 0xc5, 0x22, 0xc8, 0xec, 0xd2, 0x17, 0xe4, 0x4e, 0x94, 0x27, 0x94, 0xd9, 0x9c, 0xc9,
	0xe2, 0xb8, 0xdb, 0xc2, 0xed, 0x34, 0xb5, 0x38, 0xee, 0x8a, 0x5d, 0xbd, 0xf9, 0x60, 0xba, 0xdd,
	0x58, 0x07, 0x01, 0x2d, 0x8f, 0x0d, 0x02, 0x6a, 0xff, 0x7f, 0x25, 0xa8, 0x88, 0xf6, 0xa0, 0x31,
	0xfc, 0x54, 0x1a, 0xf6, 0x31, 0x8f, 0xd3, 0x19, 0x86, 0x21, 0x33, 0x63, 0x0c, 0x43, 0xae, 0x4b,
	0xff, 0x29, 0x94, 0xff, 0x67, 0xb3, 0xef, 0x6b, 0xcb, 0x5b, 0x0c, 0x0a, 0xde, 0x2a, 0xb0, 0x70,
	0x32, 0x7e, 0x00, 0x67, 0xc5, 0x39, 0x3d, 0xf1, 0xf1, 0x84, 0x62, 0x5e, 0x73, 0x4b, 0x63, 0xd1,
	0xd5, 0x1e, 0x8b, 0x1e, 0x63, 0x6e, 0xe6, 0x6e, 0x3d, 0x6f, 0xbd, 0x3e, 0x3f, 0xec, 0x13, 0x40,
	0xb7, 0x3f, 0xe4, 0x57, 0x32, 0xf9, 0xf6, 0xe7, 0x21, 0xce, 0xaa, 0x07, 0xea, 0x58, 0x3e, 0xb1,
	0xc3, 0x5e, 0x82, 0xb9, 0x3e, 0x73, 0x3d, 0x35, 0xfc, 0xe9, 0x1b, 0x2f, 0x04, 0xb6, 0x9f, 0xc3,
	0x82, 0xa0, 0xe7, 0x46, 0xed, 0x69, 0xcc, 0x6e, 0xd2, 0x1b, 0xbf, 0x8c, 0x17, 0xac, 0x86, 0x22,
	0x9b, 0x7a, 0x1d, 0xe6, 0xbb, 0xcc, 0x8d, 0x7b, 0x4a, 0x02, 0xae, 0xd3, 0x33, 0xc5, 0x6e, 0xdc,
	0xa3, 0x48, 0xfa, 0x94, 0x69, 0x7f, 0x84, 0x4c, 0xfd, 0x41, 0xd0, 0x51, 0xee, 0x30, 0x18, 0x7a,
	0xd0, 0x06, 0x74, 0x96, 0x6b, 0xf5, 0x03, 0x19, 0x7f, 0x50, 0x9a, 0xa0, 0x09, 0xe0, 0x83, 0x80,
	0x62, 0x10, 0x72, 0x64, 0x4a, 0xa6, 0x5b, 0xc8, 0xcd, 0xd0, 0xe5, 0xdd, 0x6f, 0x66, 0x2e, 0xa0,
	0x05, 0x42, 0xfd, 0xe6, 0xf9, 0x2e, 0x72, 0x24, 0xc3, 0x81, 0x64, 0x1a, 0xae, 0x30, 0xc9, 0x03,
	0xc4, 0xc1, 0xeb, 0x58, 0xd3, 0x95, 0x64, 0x1a, 0xae, 0x2e, 0xe6, 0x9e, 0x69, 0xf1, 0x54, 0x71,
	0xa0, 0xc7, 0x94, 0xc9, 0x8c, 0xbd, 0x81, 0x3b, 0x70, 0xc6, 0x93, 0x62, 0xe2, 0x3c, 0xfa, 0x39,
	0xa9, 0x59, 0x52, 0xcf, 0x87, 0xe9, 0xae, 0xec, 0xa3, 0xc4, 0x8b, 0x33, 0x57, 0xf6, 0xe9, 0xcb,
	0x1a, 0x8e, 0xca, 0x16, 0xa2, 0x21, 0x6d, 0x43, 0xf8, 0x24, 0x44, 0x46, 0x34, 0x44, 0x38, 0x56,
	0x8a, 0x2d, 0xef, 0xa0, 0x6e, 0xa5, 0xd0, 0x7b, 0xe1, 0xc5, 0xb5, 0xc7, 0xee, 0xa3, 0xbe, 0x75,
	0x94, 0xbf, 0xc3, 0x34, 0x16, 0x5f, 0x03, 0x89, 0x6c, 0x4e, 0x9b, 0x2c, 0x1d, 0x47, 0xe3, 0xd8,
	0x1d, 0xe4, 0xd4, 0x43, 0x9e, 0x0b, 0x53, 0xcc, 0xce, 0x8a, 0xd2, 0x0c, 0x9a, 0x4c, 0x33, 0xa3,
	0x3b, 0xd4, 0x18, 0xe4, 0xe6, 0xa9, 0x6a, 0xf9, 0xf1, 0xbd, 0x9d, 0xe9, 0xec, 0x2e, 0x2e, 0xc2,
	0xcc, 0x57, 0xbd, 0x81, 0x69, 0x35, 0x27, 0x8b, 0x3a, 0x02, 0x6e, 0x7f, 0x86, 0x67, 0xc2, 0xd1,
	0x4e, 0x14, 0x13, 0xa7, 0x95, 0x6a, 0x95, 0x7a, 0x29, 0x69, 0x3a, 0x26, 0x95, 0x7d, 0x48, 0xa9,
	0x9c, 0x7f, 0x48, 0xa9, 0x8d, 0xeb, 0x7d, 0xd8, 0x49, 0x61, 0x22, 0xdd, 0xb7, 0x60, 0xde, 0x38,
	0x01, 0x8f, 0x78, 0x63, 0x75, 0x20, 0xcf, 0xc3, 0xa4, 0x5d, 0x1d, 0xe9, 0xd3, 0x30, 0x79, 0x91,
	0xba, 0x51, 0xab, 0x8b, 0xef, 0x06, 0xea, 0x6f, 0x00, 0x37, 0xba, 0x23, 0x21, 0x82, 0x79, 0x92,
	0xa3, 0xa8, 0x0e, 0x1e, 0x2e, 0x35, 0x61, 0x08, 0xdd, 0x54, 0x51, 0xc2, 0xcf, 0x43, 0xb5, 0xc3,
	0xdb, 0x99, 0xd7, 0xcc, 0x2a, 0x04, 0xd8, 0xee, 0x48, 0x91, 0x62, 0x57, 0xec, 0xc4, 0x2f, 0x40,
	0xa4, 0x60, 0x78, 0x4e, 0x29, 0x32, 0xf4, 0x9f, 0x48, 0xf8, 0xb4, 0xb9, 0xb9, 0xe7, 0x5f, 0x00,
	0x9c, 0xd1, 0x2f, 0x00, 0xda, 0x5b, 0x38, 0x1d, 0xb2, 0xef, 0x1e, 0x9d, 0xf8, 0x75, 0x24, 0xf4,
	0x35, 0x94, 0x44, 0xd4, 0x4b, 0xe5, 0x11, 0xa6, 0xcc, 0x1d, 0x02, 0x22, 0x8d, 0x60, 0x7f, 0x49,
	0xfd, 0x24, 0xdf, 0x47, 0x9a, 0xc6, 0x98, 0xd0, 0x78, 0x6b, 0xa9, 0x3c, 0xf6, 0xad, 0xa5, 0xdf,
	0x40, 0x5e, 0x9b, 0x71, 0x39, 0x78, 0x91, 0xb6, 0x8a, 0x37, 0xd0, 0x48, 0x29, 0xeb, 0x9a, 0x30,
	0x71, 0xd1, 0xfd, 0x0e, 0x99, 0xcd, 0x69, 0xdb, 0xfd, 0x7f, 0xd2, 0x1a, 0xf3, 0x87, 0xb8, 0xb5,
	0xa0, 0x3d, 0xf7, 0x74, 0xe7, 0x16, 0x7c, 0x6f, 0x28, 0xf6, 0x32, 0x21, 0x5c, 0xaa, 0xb1, 0x2a,
	0x6f, 0xb7, 0x91, 0xa1, 0x0e, 0x19, 0xab, 0x4f, 0xa1, 0x08, 0x37, 0x42, 0xd9, 0x97, 0xc7, 0x87,
	0xb2, 0x97, 0x46, 0x6c, 0xa6, 0xb5, 0xfa, 0x49, 0x8c, 0xd8, 0xe6, 0xc7, 0x1b, 0xb1, 0xfd, 0x14,
	0x97, 0xda, 0x13, 0x1e, 0x76, 0xdd, 0x9c, 0xfd, 0xfa, 0x34, 0x32, 0xc5, 0xa4, 0xc0, 0xc0, 0x3f,
	0xc1, 0xfe, 0x4e, 0x63, 0x21, 0x4c, 0xc1, 0x17, 0x57, 0x88, 0xd7, 0xb6, 0x74, 0xcc, 0x04, 0xf5,
	0x00, 0xfa, 0x12, 0x65, 0xa8, 0x87, 0xc4, 0x22, 0xfb, 0xbf, 0x44, 0xbb, 0x39, 0x41, 0x77, 0xc7,
	0x4b, 0x22, 0xf9, 0x88, 0xd6, 0x54, 0xd1, 0x56, 0xac, 0xef, 0x40, 0x45, 0x59, 0xc0, 0x4b, 0x71,
	0xfc, 0x62, 0xda, 0x41, 0x29, 0xb5, 0xd4, 0x6c, 0x5e, 0xa3, 0x37, 0xef, 0x43, 0x45, 0x41, 0xa7,
	0xac, 0xac, 0x99, 0xab, 0xac, 0x9e, 0x52, 0xb3, 0x37, 0x00, 0xd2, 0x51, 0x99, 0x32, 0x54, 0xcc,
	0xef, 0x97, 0xa0, 0x9e, 0xf5, 0xf4, 0xcb, 0x97, 0x1b, 0xe9, 0x83, 0xff, 0xf5, 0xc3, 0x6b, 0x93,
	0xad, 0xdd, 0x80, 0xb3, 0xb8, 0xe5, 0xfa, 0x31, 0x0f, 0x0f, 0x99, 0xa7, 0xb4, 0x35, 0x04, 0xde,
	0x96, 0x50, 0xfb, 0xef, 0x95, 0x61, 0x76, 0x6c, 0x48, 0x81, 0xcc, 0xbb, 0x76, 0xe5, 0xec, 0xbb,
	0x76, 0x2a, 0x14, 0xd6, 0xcc, 0xc8, 0x50, 0x58, 0x57, 0x60, 0xb9, 0xcf, 0x9e, 0xb7, 0x32, 0x31,
	0xb5, 0xa8, 0xa9, 0x8d, 0x3e, 0x7b, 0xbe, 0x63, 0x84, 0xd5, 0x12, 0x32, 0x35, 0x0f, 0xa3, 0xc0,
	0x57, 0xaf, 0xab, 0x16, 0x9b, 0xe0, 0x12, 0x0a, 0x05, 0x26, 0x63, 0x9d, 0x63, 0xd3, 0x1a, 0x16,
	0x0d, 0x82, 0x49, 0xb3, 0x7a, 0x11, 0xc0, 0x8d, 0x5a, 0xf2, 0x7a, 0x57, 0xba, 0xed, 0x57, 0x5d,
	0x21, 0xba, 0x1d, 0x93, 0xb9, 0x5d, 0x26, 0x40, 0x57, 0x25, 0x1f, 0xa0, 0x2b, 0xef, 0x85, 0x5e,
	0xcd, 0x7b, 0xa1, 0x5b, 0xaf, 0x42, 0x3d, 0x0e, 0x92, 0x50, 0x1c, 0x37, 0xe8, 0x08, 0x09, 0xa4,
	0x1a, 0x4f, 0x81, 0xf8, 0xec, 0x66, 0x23, 0xb7, 0x65, 0x7d, 0x02, 0x4b, 0xfa, 0x49, 0x2d, 0xe9,
	0x61, 0x64, 0x6a, 0x94, 0x33, 0xaf, 0x86, 0x39, 0x8d, 0x41, 0x26, 0x6d, 0xff, 0x56, 0x09, 0x2a,
	0x7a, 0x2f, 0x92, 0x02, 0x58, 0xa9, 0x58, 0x00, 0xb3, 0xd6, 0xa1, 0xb6, 0x97, 0x1c, 0xe7, 0x7c,
	0x4b, 0x90, 0x69, 0xdd, 0x4c, 0x8e, 0xa5, 0xc5, 0x2b, 0xec, 0xa9, 0x9f, 0x27, 0x52, 0xa3, 0xdb,
	0x03, 0x58, 0x34, 0x65, 0xc9, 0xe2, 0xf9, 0x4c, 0x51, 0x34, 0x94, 0x15, 0x30, 0x25, 0xc5, 0xda,
	0x62, 0x64, 0xf8, 0xde, 0x91, 0x97, 0xd3, 0x3a, 0x2d, 0xf2, 0x88, 0xcb, 0xa5, 0x2f, 0xef, 0xaa,
	0xb4, 0x7d, 0x00, 0x96, 0x7c, 0x1d, 0x40, 0xbe, 0x68, 0x83, 0x5d, 0xa0, 0xbc, 0x34, 0x4b, 0x86,
	0x97, 0xa6, 0xf9, 0x1c, 0x8d, 0x54, 0xe5, 0xe8, 0xe7, 0x68, 0x5e, 0x87, 0x39, 0xb1, 0x31, 0xab,
	0xe3, 0xe4, 0xd0, 0xa3, 0x03, 0x94, 0x6b, 0xff, 0x41, 0x09, 0x6a, 0x06, 0xb8, 0xb0, 0x9a, 0x33,
	0x30, 0xdf, 0x63, 0x87, 0xfc, 0xd8, 0x95, 0x95, 0xc8, 0x94, 0x60, 0x01, 0xc7, 0x6e, 0x9f, 0xa9,
	0x28, 0xcd, 0x94, 0x48, 0x19, 0xc3, 0xac, 0xc9, 0x68, 0x1a, 0x50, 0xee, 0x26, 0x72, 0x55, 0x96,
	0xbb, 0x89, 0x75, 0x19, 0x96, 0xf6, 0x5c, 0x16, 0xb4, 0x3a, 0x41, 0xc8, 0xe4, 0xbc, 0x93, 0x96,
	0xb8, 0x02, 0x7c, 0x2b, 0x08, 0x19, 0x9d, 0x75, 0xde, 0x85, 0x85, 0x1f, 0x85, 0x6c, 0x30, 0xa0,
	0x00, 0xf0, 0x86, 0x7f, 0x17, 0xfe, 0xd6, 0x1a, 0xc2, 0x72, 0xaa, 0x21, 0xb4, 0x7f, 0xab, 0x0c,
	0x0b, 0x4a, 0xb4, 0x3f, 0x0d, 0x73, 0x18, 0xb6, 0x4d, 0x7a, 0xd0, 0x50, 0xe2, 0xc4, 0xf3, 0xe5,
	0x13, 0x58, 0x34, 0x1f, 0x71, 0x94, 0xb3, 0x78, 0xcd, 0x98, 0x87, 0xeb, 0xa6, 0xcd, 0x81, 0x53,
	0xeb, 0xa6, 0xaf, 0x3a, 0x8a, 0xc2, 0xe6, 0x63, 0x8e, 0x52, 0x16, 0x18, 0x53, 0xb8, 0x9d, 0xbe,
	0xee, 0xd8, 0xfc, 0x58, 0x6c, 0x52, 0x69, 0x66, 0xda, 0xb9, 0x25, 0xb3, 0x73, 0x85, 0x60, 0x89,
	0x86, 0xb8, 0x4a, 0xb0, 0x14, 0x89, 0xb7, 0x3e, 0x85, 0xa5, 0xbc, 0xf2, 0xb7, 0x02, 0xb3, 0x0f,
	0x1f, 0xdf, 0xbf, 0xbf, 0xfc, 0xcf, 0x89, 0x5f, 0x9b, 0x8f, 0x1f, 0xdd, 0x5b, 0x2e, 0x59, 0x35,
	0x58, 0xd8, 0xfd, 0xf2, 0xe1, 0xd6, 0xf6, 0xc3, 0xbb, 0xcb, 0x65, 0xab, 0x0a, 0x73, 0xce, 0xed,
	0xcd, 0x5b, 0x5f, 0x2e, 0xcf, 0x6c, 0xfc, 0xe3, 0x59, 0xa8, 0xdc, 0x61, 0x51, 0xfc, 0x48, 0x9c,
	0x73, 0xaf, 0x42, 0x85, 0x29, 0xff, 0x82, 0x25, 0xe9, 0x9e, 0xaa, 0x1c, 0x0e, 0x9a, 0x12, 0x90,
	0x7a, 0x20, 0x7c, 0x04, 0x4b, 0x7b, 0xb9, 0x80, 0xfb, 0xd2, 0x7a, 0x36, 0x1f, 0x88, 0xbf, 0x59,
	0xcf, 0x58, 0xd5, 0x5a, 0xef, 0xc2, 0x4a, 0x5b, 0x9c, 0xef, 0xa5, 0x1d, 0xeb, 0x2d, 0xee, 0xb1,
	0x63, 0x4b, 0xe2, 0xc8, 0x48, 0xdc, 0xf9, 0x22, 0xef, 0xc0, 0x12, 0x7a, 0x16, 0x84, 0x7d, 0xfd,
	0x6c, 0xca, 0xf8, 0x02, 0x57, 0xa1, 0xca, 0xb5, 0x9d, 0x44, 0x0e, 0x75, 0x59, 0xa2, 0xa6, 0x86,
	0x14, 0x9f, 0xc2, 0xe9, 0x2e, 0x97, 0x6f, 0x33, 0x9b, 0x5d, 0x99, 0x2b, 0xa8, 0xac, 0x83, 0xf3,
	0x68, 0xeb, 0xd0, 0xa0, 0xe3, 0x8d, 0x96, 0x33, 0xc7, 0x37, 0xee, 0x7d, 0x58, 0x76, 0xfd, 0x41,
	0x12, 0x67, 0x42, 0xa8, 0xab, 0x12, 0x29, 0x2c, 0x5f, 0xec, 0x53, 0xb0, 0xb0, 0x98, 0xa8, 0xc1,
	0x08, 0x85, 0x25, 0x0b, 0x0e, 0x85, 0xbc, 0x1a, 0xae, 0xb5, 0x81, 0xc5, 0x0d, 0xaf, 0xee, 0xd4,
	0x0f, 0x3b, 0x75, 0x2a, 0x1f, 0xee, 0xc9, 0x4a, 0xa4, 0x3e, 0x4b, 0xcd, 0x0a, 0xf5, 0x9d, 0x7a,
	0x56, 0xe8, 0x0f, 0xbf, 0x06, 0xf5, 0x58, 0x3d, 0xf9, 0x3d, 0xb9, 0x27, 0x36, 0xfe, 0xb6, 0x03,
	0x73, 0xf7, 0x83, 0xbd, 0xbd, 0x63, 0x74, 0xe0, 0x2b, 0xf6, 0xdc, 0xb9, 0xa8, 0xa6, 0x62, 0x61,
	0x76, 0xf3, 0xa2, 0x9a, 0x98, 0xc5, 0xa5, 0xaf, 0x43, 0x8d, 0x19, 0x4f, 0x72, 0xa8, 0x6e, 0x36,
	0x9e, 0xe9, 0xc8, 0x7f, 0xf0, 0x75, 0xa8, 0xed, 0x19, 0x8f, 0x66, 0xa8, 0x12, 0xc6, 0x43, 0x1a,
	0x05, 0x93, 0x6d, 0x4f, 0x3f, 0x8f, 0xb1, 0x6c, 0xe0, 0x23, 0x24, 0x8f, 0x2d, 0x16, 0x4e, 0xee,
	0xd9, 0x8b, 0x33, 0x46, 0x19, 0x03, 0x9e, 0x2f, 0x79, 0x0b, 0x96, 0xf7, 0xf2, 0x2e, 0x2c, 0x67,
	0x55, 0xd1, 0x5c, 0x46, 0x53, 0x66, 0x0c, 0x3b, 0xbd, 0xbc, 0x8f, 0x8c, 0x51, 0x3b, 0xa4, 0x58,
	0x59, 0x02, 0x58, 0xd6, 0xca, 0x96, 0x45, 0xbc, 0x75, 0x80, 0xbd, 0xf4, 0x11, 0x8a, 0x95, 0x6c,
	0xa9, 0x1f, 0xdf, 0xdb, 0xc9, 0x37, 0x96, 0xf0, 0xd5, 0x93, 0x13, 0x06, 0xbe, 0x04, 0x0d, 0x7f,
	0xdc, 0x6a, 0xbb, 0xf0, 0xf5, 0x89, 0x0b, 0x6a, 0x06, 0x15, 0xe5, 0x0e, 0x4f, 0xf2, 0x5a, 0x3b,
	0x7d, 0x8c, 0x42, 0xf7, 0x4e, 0xfe, 0x81, 0x8a, 0x7c, 0xb1, 0x0d, 0xbc, 0xb4, 0x48, 0x5f, 0xa3,
	0x38, 0xa5, 0x57, 0x63, 0x0a, 0xcc, 0x97, 0xf9, 0x3e, 0x9c, 0x6a, 0x17, 0xbc, 0x48, 0xd1, 0xcc,
	0x14, 0xcd, 0xe4, 0x4d, 0xa6, 0x80, 0x4e, 0x0b, 0x23, 0x28, 0x88, 0xbc, 0x3c, 0x85, 0x18, 0x2e,
	0xb5, 0x27, 0xf9, 0xff, 0xbc, 0x91, 0x25, 0x37, 0x12, 0xb1, 0xf9, 0x86, 0xa2, 0x3d, 0x89, 0xe2,
	0xc7, 0xb0, 0xdc, 0xce, 0xbf, 0x3d, 0x71, 0x36, 0x57, 0x8b, 0xca, 0x18, 0xf9, 0xcd, 0xd9, 0x67,
	0x27, 0xb2, 0xdf, 0x9c, 0xc9, 0xcb, 0x53, 0x78, 0x0f, 0x64, 0x78, 0x1d, 0x15, 0xe2, 0x41, 0xb1,
	0xb1, 0x4c, 0xe0, 0x87, 0x7c, 0xa9, 0x9b, 0x70, 0xba, 0x5d, 0xf4, 0xae, 0xc3, 0xf9, 0x94, 0x3f,
	0x0d, 0x65, 0x16, 0xcd, 0x12, 0xf3, 0x9d, 0x87, 0x53, 0x46, 0x59, 0x05, 0xcc, 0x97, 0xd9, 0x81,
	0xd3, 0xed, 0x22, 0x4f, 0x0c, 0x5d, 0x6f, 0x41, 0x66, 0xf3, 0x7c, 0xc6, 0x32, 0x38, 0x57, 0xf2,
	0x2e, 0xac, 0xb4, 0x87, 0x1c, 0x30, 0xd6, 0x0a, 0xc8, 0x11, 0xad, 0xb5, 0x02, 0x5a, 0x54, 0x66,
	0x17, 0x56, 0xdb, 0x85, 0x0e, 0x17, 0x17, 0x0a, 0x88, 0xe9, 0xdc, 0xe6, 0x85, 0x02, 0x82, 0x69,
	0xd9, 0xcf, 0xc1, 0x6a, 0x17, 0x3c, 0x99, 0x90, 0xa1, 0x68, 0x66, 0x35, 0xcf, 0x65, 0xc8, 0x65,
	0x4a, 0x3d, 0x80, 0x53, 0xed, 0x02, 0x37, 0x89, 0x66, 0x86, 0x58, 0x26, 0xaf, 0xd9, 0xcc, 0x50,
	0xcb, 0x96, 0xbb, 0x05, 0xcb, 0xed, 0xbc, 0x7f, 0xc4, 0xd9, 0x1c, 0x2d, 0x95, 0xa1, 0xd9, 0xe7,
	0x90, 0x47, 0xc5, 0x97, 0x70, 0xb6, 0x3d, 0xc2, 0x25, 0xe2, 0xa5, 0x1c, 0xb1, 0x5c, 0x7e, 0xf3,
	0xa5, 0x1c, 0xcd, 0x7c, 0x79, 0xe3, 0x7b, 0x4d, 0x3b, 0xfb, 0xfc, 0xf7, 0x1a, 0x79, 0x43, 0xdf,
	0x6b, 0x96, 0xd3, 0x13, 0xc5, 0x74, 0x86, 0x58, 0xcb, 0x11, 0xd3, 0x39, 0xb9, 0x89, 0x62, 0x96,
	0xb9, 0xa5, 0x26, 0x4a, 0x3e, 0xa0, 0x7d, 0x76, 0xa2, 0xe4, 0x72, 0xf3, 0x2b, 0x61, 0x13, 0x96,
	0xda, 0x39, 0x3f, 0x8a, 0x33, 0x99, 0xf2, 0x1a, 0xae, 0x05, 0xad, 0xbc, 0xdf, 0x85, 0xee, 0xfb,
	0x61, 0xc7, 0x89, 0x97, 0x72, 0xa4, 0x72, 0xf9, 0xb9, 0xbe, 0x1f, 0x2e, 0xaf, 0xfb, 0x3e, 0xeb,
	0x39, 0xd1, 0xcc, 0x91, 0x35, 0xf2, 0x72, 0x7d, 0x9f, 0x2d, 0x67, 0x90, 0x1b, 0x3d, 0x94, 0x99,
	0xbc, 0x21, 0x72, 0x66, 0x39, 0xbd, 0x54, 0xf3, 0xbe, 0x12, 0x17, 0x72, 0x04, 0x33, 0xb9, 0xb9,
	0xa5, 0x9a, 0x2f, 0xfb, 0x01, 0x34, 0xda, 0xd9, 0x28, 0xe6, 0xab, 0x19, 0x6a, 0x0a, 0x5c, 0xb4,
	0x53, 0x17, 0xc6, 0x29, 0xcf, 0x36, 0x26, 0x97, 0x3b, 0xcc, 0x4c, 0xa1, 0x9d, 0xba, 0x69, 0xac,
	0x64, 0x8a, 0x0a, 0x50, 0x73, 0x25, 0xd3, 0x78, 0xc4, 0xd2, 0xcc, 0x34, 0xe7, 0x89, 0x91, 0x65,
	0xa6, 0xd9, 0xcc, 0x1c, 0x33, 0xcd, 0x95, 0xd4, 0x33, 0x6a, 0xd8, 0xdb, 0xe0, 0xa5, 0x02, 0xa2,
	0x46, 0x7e, 0x6e, 0x46, 0x0d, 0x97, 0x7f, 0x0f, 0xea, 0x9d, 0x4c, 0xb0, 0x6e, 0xb5, 0x4f, 0x65,
	0x42, 0x78, 0x17, 0x88, 0x4d, 0x9d, 0x34, 0x20, 0xf7, 0x4a, 0xa6, 0xc8, 0x83, 0x02, 0x69, 0xf2,
	0x1a, 0xd4, 0x3b, 0x81, 0x61, 0xe2, 0x3f, 0xe1, 0xe8, 0x71, 0x0d, 0x80, 0xa7, 0x41, 0xbc, 0x15,
	0xf9, 0x34, 0xae, 0x77, 0x73, 0x51, 0x59, 0x41, 0x20, 0xc2, 0x13, 0x38, 0xc3, 0x8b, 0x8d, 0xea,
	0x95, 0x54, 0x5e, 0x6c, 0x73, 0xaf, 0xa5, 0xf2, 0x11, 0x26, 0xf9, 0x3b, 0x70, 0x9a, 0x17, 0x99,
	0x8d, 0xab, 0x81, 0x2c, 0xb2, 0x29, 0xd7, 0x03, 0x59, 0x68, 0x70, 0xfe, 0x5d, 0xb0, 0x14, 0x45,
	0x12, 0x75, 0xe3, 0xc0, 0xe7, 0x9a, 0xbd, 0xe7, 0x83, 0x62, 0xe7, 0xbb, 0xe5, 0xe3, 0x34, 0x7a,
	0x89, 0x8e, 0x9b, 0x3d, 0x6d, 0xd9, 0xdb, 0xb0, 0x86, 0x87, 0xc7, 0xa2, 0xb0, 0x29, 0xb9, 0xc1,
	0x50, 0x4b, 0xbc, 0x08, 0xf5, 0x2e, 0x9c, 0x33, 0xc9, 0x64, 0xbd, 0xb1, 0x73, 0x74, 0xce, 0x67,
	0xe9, 0x64, 0x71, 0x3f, 0x86, 0x65, 0x93, 0x10, 0x69, 0x7c, 0xd4, 0xb1, 0x27, 0x85, 0x69, 0x21,
	0xdf, 0xc4, 0x53, 0x07, 0xe1, 0x7c, 0xec, 0x8f, 0x11, 0x07, 0xe1, 0x3c, 0xda, 0xa7, 0xb0, 0x92,
	0x29, 0x8e, 0xa7, 0xe3, 0x5c, 0xdd, 0xf7, 0xdd, 0x28, 0x6e, 0x9e, 0xce, 0x11, 0xa0, 0xe0, 0x1f,
	0x8f, 0xb3, 0x5d, 0x90, 0x0d, 0xd6, 0x71, 0x3e, 0x4b, 0x26, 0x93, 0x99, 0xef, 0x90, 0x6c, 0xc9,
	0xf7, 0x75, 0x87, 0xa4, 0x71, 0x2e, 0x72, 0x1f, 0x94, 0xf6, 0x45, 0x8a, 0xf2, 0xa1, 0xfe, 0x18,
	0x23, 0x64, 0x45, 0xae, 0xdc, 0x29, 0x5d, 0xce, 0xc0, 0xd1, 0x05, 0x4d, 0x73, 0x97, 0x51, 0x05,
	0x4d, 0x9c, 0x6b, 0xb0, 0x88, 0x05, 0x55, 0xc4, 0x83, 0x5c, 0x99, 0x86, 0x3a, 0x95, 0xc9, 0xec,
	0xef, 0x80, 0x85, 0xe8, 0x63, 0xa7, 0xca, 0xe9, 0x54, 0xa8, 0x37, 0x90, 0x54, 0x97, 0x98, 0xce,
	0xef, 0x23, 0xba, 0xc4, 0x44, 0x79, 0x00, 0x17, 0xa8, 0xd8, 0x08, 0xb7, 0xf4, 0x1c, 0x09, 0xcd,
	0x21, 0x47, 0xa0, 0x3f, 0x80, 0x53, 0xdd, 0x02, 0x37, 0x0e, 0xb5, 0x49, 0x16, 0xb8, 0x78, 0xe8,
	0x15, 0x54, 0xe4, 0xfe, 0x71, 0x4b, 0x7d, 0x94, 0xe1, 0xac, 0x71, 0xb6, 0x80, 0x16, 0xce, 0xc0,
	0xb3, 0x05, 0x84, 0xb0, 0xc4, 0x27, 0xd9, 0x46, 0x29, 0x7f, 0xf6, 0xdc, 0xa7, 0xad, 0x1a, 0x3c,
	0xc0, 0xc0, 0xba, 0x01, 0x4b, 0xba, 0xb0, 0x3c, 0x18, 0xe5, 0x0a, 0xae, 0x0c, 0x79, 0x98, 0x1b,
	0x35, 0x66, 0xbc, 0xc4, 0x47, 0xd6, 0x98, 0xc1, 0xda, 0x86, 0x55, 0x2a, 0x3c, 0xe4, 0x3a, 0xa6,
	0x8a, 0xe7, 0x32, 0x52, 0xc9, 0x36, 0x5f, 0xe2, 0x08, 0x5e, 0xe9, 0x4e, 0x74, 0x22, 0xb9, 0x92,
	0xe9, 0xd0, 0x31, 0x98, 0xcd, 0x2b, 0x99, 0x1e, 0x1e, 0x47, 0x33, 0x86, 0x4b, 0xdd, 0x49, 0x1e,
	0x23, 0x6f, 0x8c, 0xad, 0x37, 0x45, 0xd4, 0xa7, 0xd8, 0x89, 0x3e, 0x28, 0x5f, 0x81, 0xdd, 0x9d,
	0xec, 0x21, 0xf2, 0xe6, 0xd8, 0x7a, 0x4d, 0xd4, 0xe6, 0x9b, 0x63, 0x6b, 0xce, 0x50, 0x1d, 0xd9,
	0xd5, 0xa6, 0x8f, 0xc8, 0x95, 0x89, 0x55, 0x4b, 0xcc, 0x09, 0x5d, 0x6d, 0xd2, 0xdc, 0x83, 0x66,
	0x77, 0xb4, 0x0b, 0xc8, 0x2b, 0x63, 0x6b, 0xc4, 0x8f, 0x7c, 0x65, 0x6c, 0x55, 0x48, 0x65, 0xe4,
	0x70, 0x1a, 0x9e, 0x1a, 0xe3, 0x87, 0x33, 0x45, 0x9c, 0x30, 0x9c, 0x06, 0x45, 0xb5, 0x75, 0xe5,
	0xdd, 0x1d, 0x47, 0x6c, 0x5d, 0x79, 0xb4, 0x77, 0xa1, 0x91, 0x16, 0x47, 0xcd, 0xc0, 0x08, 0xad,
	0x71, 0x8a, 0xa0, 0x6a, 0xcc, 0x3b, 0x41, 0x8c, 0xa8, 0x31, 0x8f, 0xa6, 0x78, 0x85, 0xe1, 0x80,
	0x30, 0x82, 0x57, 0x18, 0x18, 0x6a, 0x87, 0xcd, 0xb8, 0x0c, 0x28, 0x3d, 0x84, 0x09, 0xd4, 0x3b,
	0x4c, 0x06, 0xd3, 0x91, 0xb2, 0x4a, 0x91, 0x09, 0x7e, 0x33, 0x47, 0xc5, 0xc8, 0xd3, 0x6c, 0xb7,
	0xa8, 0x5c, 0xbe, 0x49, 0xd8, 0xce, 0x7c, 0x93, 0x70, 0xee, 0xe4, 0x9b, 0x24, 0x77, 0xcb, 0x25,
	0x5d, 0x5c, 0xea, 0x6c, 0x57, 0x8c, 0xc2, 0x52, 0xcb, 0xbb, 0x62, 0x14, 0x95, 0x58, 0x5b, 0x92,
	0x6d, 0xe6, 0x36, 0x95, 0xd5, 0xa1, 0xc2, 0x58, 0xf7, 0xea, 0x10, 0x01, 0xc4, 0xbe, 0x0f, 0x67,
	0x72, 0x44, 0x94, 0x1d, 0xf7, 0xda, 0x10, 0x1d, 0x99, 0xa3, 0x0f, 0xca, 0xc3, 0x65, 0xd4, 0x90,
	0x1a, 0xb6, 0xda, 0x23, 0x86, 0xd4, 0xc0, 0x50, 0x1c, 0x7c, 0xc8, 0x80, 0x59, 0x71, 0xf0, 0x7c,
	0x86, 0xe6, 0xe0, 0x43, 0x25, 0xde, 0x81, 0x3a, 0x92, 0xd2, 0x46, 0xb0, 0xb9, 0xda, 0x95, 0xba,
	0x5e, 0xe7, 0xbf, 0x01, 0x55, 0x2a, 0xe0, 0x46, 0xed, 0x3c, 0x72, 0x4d, 0x21, 0x8b, 0x3c, 0x35,
	0xd7, 0xf3, 0x46, 0xa9, 0x23, 0xe6, 0x7a, 0x1e, 0x6d, 0x5b, 0x76, 0xf3, 0xb0, 0x65, 0xaa, 0x1a,
	0xae, 0x6c, 0x28, 0x73, 0xdd, 0xc7, 0xc3, 0x05, 0x7e, 0x24, 0xbb, 0x4b, 0x19, 0x2d, 0x6a, 0x6b,
	0x45, 0x75, 0x5e, 0x1b, 0x61, 0xcd, 0xa8, 0xa5, 0x91, 0x51, 0xd6, 0x8e, 0x2d, 0x29, 0x7d, 0x16,
	0xba, 0x7c, 0x5d, 0x32, 0xf9, 0x55, 0x11, 0x46, 0xf3, 0xd2, 0x24, 0x27, 0x2f, 0xbd, 0xcf, 0xe7,
	0x6c, 0x00, 0x47, 0xec, 0xf3, 0x39, 0x2c, 0x25, 0xec, 0x65, 0x0d, 0x2f, 0x8a, 0x85, 0xbd, 0x5c,
	0x1c, 0xe6, 0xb7, 0xe5, 0x20, 0xe3, 0x11, 0x7a, 0xc4, 0x8c, 0xd0, 0x96, 0x73, 0xaa, 0x91, 0xb9,
	0x6b, 0xfe, 0x11, 0x8d, 0xcc, 0x61, 0xa9, 0xf9, 0x6f, 0x58, 0xa4, 0x8d, 0x98, 0xff, 0x06, 0x86,
	0x9a, 0xb4, 0xda, 0x10, 0x60, 0x54, 0x13, 0x55, 0xbe, 0x62, 0xd5, 0xa9, 0x19, 0xd5, 0x08, 0x56,
	0x9d, 0x22, 0xa8, 0x22, 0xa9, 0x25, 0xd0, 0x88, 0x22, 0x29, 0xc2, 0x3d, 0x38, 0x2b, 0x9d, 0x10,
	0x87, 0x4e, 0xaf, 0x6a, 0xa6, 0x8d, 0x08, 0xd3, 0x9a, 0x3f, 0x20, 0xfe, 0x0c, 0xec, 0xfd, 0xc9,
	0x4f, 0xcb, 0xbc, 0xa9, 0xf9, 0xcd, 0x24, 0xd4, 0x02, 0x95, 0xfa, 0x7e, 0xc1, 0x9b, 0x32, 0x4d,
	0x83, 0x60, 0x2e, 0x6f, 0x58, 0xe9, 0xd0, 0x40, 0x0a, 0x7a, 0xca, 0x4d, 0xd0, 0x22, 0xbc, 0x07,
	0xf5, 0xfd, 0xcc, 0x1b, 0x33, 0xa7, 0x8d, 0xba, 0x34, 0x74, 0xb8, 0xd4, 0xca, 0x3e, 0xeb, 0x73,
	0xa9, 0xf5, 0x94, 0xd7, 0x97, 0xcb, 0xf9, 0xeb, 0xcb, 0x02, 0x05, 0xc7, 0x7e, 0xf0, 0x90, 0x3f,
	0x8f, 0xd5, 0x55, 0xd2, 0xf8, 0xa6, 0x7d, 0x17, 0x56, 0x7a, 0x43, 0xcf, 0xaa, 0x28, 0x5e, 0x3e,
	0xf4, 0xe0, 0x4a, 0xbe, 0xf4, 0x5b, 0x50, 0xe9, 0x71, 0x16, 0xef, 0x71, 0x16, 0xeb, 0xcb, 0x4e,
	0xf5, 0xb0, 0x4a, 0x1e, 0xf7, 0x00, 0x2e, 0x3e, 0x1d, 0xeb, 0x2a, 0xf3, 0x9a, 0x24, 0x30, 0xd6,
	0xa1, 0xa6, 0x29, 0xb1, 0x26, 0xb8, 0xdd, 0x5c, 0x85, 0xca, 0x53, 0xe5, 0x2f, 0xb3, 0x64, 0xd0,
	0x45, 0x12, 0x4b, 0x06, 0x09, 0x89, 0x0d, 0x07, 0x6e, 0xfb, 0x80, 0xee, 0xa8, 0x35, 0xbe, 0x0a,
	0xaf, 0x5e, 0x70, 0xad, 0xe1, 0x99, 0xcf, 0xab, 0x9c, 0xd2, 0xfb, 0x4e, 0x0a, 0xcc, 0x97, 0xf9,
	0x00, 0xce, 0x50, 0x99, 0xa1, 0xc5, 0x31, 0x7e, 0x78, 0xbe, 0x07, 0x2f, 0x15, 0x97, 0xd3, 0x5f,
	0x3a, 0xbe, 0xfc, 0x9b, 0x50, 0xc5, 0xf2, 0x53, 0xa0, 0xbe, 0x0a, 0x73, 0x1e, 0x2a, 0xb1, 0x16,
	0xd5, 0xf7, 0x14, 0x28, 0xb8, 0x2e, 0xc3, 0xbc, 0x47, 0xfe, 0x25, 0xf5, 0x14, 0x2b, 0x48, 0xd2,
	0xef, 0x95, 0xde, 0x27, 0xef, 0x02, 0x3d, 0x5d, 0x73, 0xd7, 0x54, 0x93, 0x66, 0x1f, 0xbc, 0x19,
	0xbe, 0x15, 0x5e, 0xc4, 0x22, 0xd3, 0xcd, 0xdb, 0x0f, 0xa0, 0xd1, 0xcf, 0xbe, 0x99, 0xa2, 0x77,
	0xc6, 0x0c, 0x78, 0x64, 0xb9, 0x21, 0x25, 0x6e, 0xf6, 0x45, 0x95, 0x91, 0xe5, 0xf4, 0xdb, 0x26,
	0xd9, 0x72, 0x0a, 0x5c, 0xa0, 0x9f, 0xec, 0xa7, 0x6f, 0x9b, 0xac, 0x64, 0xca, 0xe0, 0x64, 0x1c,
	0xbe, 0xed, 0xee, 0xe7, 0x5e, 0x36, 0x39, 0x93, 0x29, 0xa4, 0xe1, 0x05, 0x0a, 0xe2, 0x20, 0xf5,
	0x30, 0x51, 0x35, 0xa5, 0x4e, 0x27, 0x7a, 0x2f, 0x31, 0xfc, 0x50, 0xde, 0x87, 0x5a, 0x60, 0xbe,
	0x45, 0x92, 0x29, 0x84, 0x30, 0xad, 0xd7, 0x30, 0x1d, 0x4d, 0xde, 0x51, 0xc5, 0xe4, 0xc3, 0x23,
	0x99, 0x62, 0x45, 0xd3, 0xe6, 0x23, 0x58, 0x0c, 0x4c, 0xa7, 0x92, 0x53, 0x99, 0x12, 0x04, 0xd4,
	0xe2, 0x6e, 0xc6, 0xfd, 0xe4, 0x1d, 0x8c, 0xc0, 0x2c, 0x3d, 0x4b, 0x14, 0xf3, 0xd3, 0xbe, 0x26,
	0x7a, 0x1f, 0x4a, 0xbd, 0x4f, 0x3e, 0x80, 0x46, 0x90, 0x7d, 0x24, 0x63, 0xd5, 0x28, 0x95, 0x82,
	0x0b, 0x2e, 0x1e, 0x83, 0x22, 0xef, 0x91, 0xf3, 0x46, 0xe9, 0x7c, 0xa6, 0xd6, 0xa3, 0x15, 0xfa,
	0x9d, 0x7c, 0x0c, 0xcb, 0x43, 0x5e, 0x5c, 0x4a, 0x46, 0xcd, 0xbf, 0x7a, 0x51, 0xc0, 0x58, 0x43,
	0xf5, 0xb0, 0xc5, 0x92, 0x51, 0xa6, 0x48, 0xa5, 0x7d, 0x95, 0x02, 0xa1, 0x1e, 0x0b, 0xf6, 0xa5,
	0xbb, 0x48, 0xbf, 0xf6, 0x50, 0x60, 0x14, 0x11, 0x0e, 0x3d, 0x85, 0xa1, 0x6b, 0xc8, 0x66, 0x68,
	0xc9, 0x79, 0xc8, 0x05, 0xe5, 0x03, 0x68, 0x84, 0x59, 0x87, 0x91, 0x91, 0x62, 0x59, 0x06, 0xab,
	0x05, 0xe7, 0xc2, 0x91, 0x3e, 0x21, 0x97, 0x74, 0x33, 0x46, 0x60, 0x68, 0xa1, 0x71, 0xb4, 0x5f,
	0xc9, 0x06, 0x2c, 0x86, 0xe6, 0x2b, 0x1c, 0xa7, 0x32, 0x34, 0x8b, 0x2d, 0x58, 0x3e, 0x80, 0x46,
	0x94, 0x7d, 0xe6, 0x42, 0x4d, 0x99, 0xec, 0xeb, 0x17, 0xf9, 0x72, 0x77, 0x61, 0x25, 0x1a, 0x72,
	0x25, 0x59, 0xd3, 0x46, 0x42, 0xb9, 0x1c, 0x2d, 0xa3, 0x0f, 0xbb, 0x9f, 0x3c, 0x81, 0x33, 0x51,
	0xb1, 0xb7, 0xc8, 0xc5, 0x62, 0x6a, 0x32, 0x5b, 0x5f, 0x1b, 0x8c, 0xf0, 0x35, 0x79, 0x0b, 0x2a,
	0x91, 0x7a, 0x53, 0x62, 0x29, 0xf7, 0x88, 0x44, 0x81, 0x20, 0x10, 0x0d, 0xbd, 0x06, 0xb1, 0x66,
	0xbc, 0xba, 0x30, 0xd6, 0x5c, 0xe0, 0x01, 0x9c, 0x8a, 0x0a, 0xdc, 0x3f, 0x9a, 0xa3, 0x5f, 0x6d,
	0xd0, 0x67, 0xe4, 0x22, 0xb7, 0x91, 0x8f, 0x60, 0x31, 0x32, 0x1d, 0x23, 0xd4, 0x28, 0x9a, 0xde,
	0x12, 0x9a, 0x5f, 0x64, 0x5c, 0x28, 0xde, 0x83, 0xf9, 0x88, 0x38, 0x87, 0xb6, 0xd6, 0x32, 0x5d,
	0x20, 0xb4, 0x7e, 0x37, 0xeb, 0x18, 0x71, 0x13, 0x4e, 0x47, 0x45, 0xcf, 0x2c, 0xa8, 0xc5, 0x5f,
	0xf4, 0x06, 0x43, 0xbe, 0x0b, 0xee, 0xc0, 0x99, 0xa8, 0xf8, 0xb5, 0x04, 0x3d, 0x88, 0x85, 0xd9,
	0x05, 0xcb, 0x19, 0xe9, 0xe0, 0x86, 0x61, 0x2e, 0x67, 0x2c, 0x3e, 0x6c, 0xc0, 0xb3, 0x1a, 0xc5,
	0xc1, 0xe0, 0xe4, 0x72, 0xc5, 0x99, 0x38, 0xf3, 0xc4, 0xc2, 0x9d, 0x30, 0xe8, 0x23, 0xb7, 0x59,
	0xd5, 0xc2, 0xba, 0x99, 0x9d, 0x2f, 0xff, 0x39, 0x9c, 0x4b, 0xfc, 0x17, 0x24, 0xef, 0xdf, 0x82,
	0xd5, 0xa4, 0xf0, 0x15, 0x06, 0x75, 0x3f, 0x5a, 0xf8, 0x46, 0x43, 0xc1, 0xfc, 0x4d, 0x86, 0x5e,
	0x60, 0x58, 0xcb, 0x50, 0x30, 0x72, 0x0a, 0xcc, 0x5d, 0x92, 0xa2, 0xf7, 0x17, 0xce, 0x67, 0x09,
	0x64, 0x32, 0x0b, 0x2e, 0xc5, 0x92, 0xfc, 0x1b, 0x0c, 0x67, 0x33, 0xe5, 0xd3, 0x8c, 0x91, 0xad,
	0x37, 0xdf, 0x5c, 0xc8, 0xb6, 0xde, 0xc8, 0x29, 0xe0, 0xe9, 0x49, 0xde, 0xa7, 0x25, 0xad, 0x39,
	0x9b, 0xa1, 0x79, 0xfa, 0x90, 0x17, 0xcc, 0x3a, 0x3e, 0x40, 0xa5, 0x1e, 0x63, 0x50, 0x02, 0x44,
	0xfa, 0x3e, 0x43, 0x81, 0xed, 0x58, 0x62, 0x3e, 0xc9, 0x90, 0x16, 0x50, 0x30, 0x2d, 0x3c, 0x98,
	0xce, 0x30, 0x6f, 0x41, 0x25, 0x51, 0x6f, 0x34, 0x2c, 0xa5, 0x65, 0x10, 0x90, 0xaf, 0xe2, 0x21,
	0x9c, 0x3e, 0xe4, 0x61, 0x77, 0xe8, 0xad, 0x06, 0xc5, 0x57, 0x0a, 0xde, 0x71, 0xd0, 0x7c, 0xa5,
	0xc0, 0x47, 0x66, 0x6f, 0x7e, 0x10, 0x06, 0x71, 0x70, 0xe3, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff,
	0xf0, 0xa3, 0x90, 0xee, 0xe0, 0x01, 0x01, 0x00,
}
